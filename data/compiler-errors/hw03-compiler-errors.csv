"student";"snapshot";"file";"line";"error"
"008a13042777e1aaca446a68fbc5b3877e6ed232";"2020-10-04T21_16_22.013Z";"hw3.java";"39";" unexpected type
            symbolsInString.charAt(i) = symbols[i];
                                  ^
  required"
"008a13042777e1aaca446a68fbc5b3877e6ed232";"2020-10-04T23_06_14.022Z";"hw3.java";"39";" unexpected type
            symbolsInString.charAt(i) = symbols[i];
                                  ^
  required"
"008a13042777e1aaca446a68fbc5b3877e6ed232";"2020-10-06T18_00_03.920Z";"hw3.java";"162";" incompatible types"
"008a13042777e1aaca446a68fbc5b3877e6ed232";"2020-10-06T20_42_39.326Z";"hw3.java";"201";" ';' expected
        return 'yeet'
                     ^
1 error
"
"0106f488719b5b6dec8020fdf6c9e2e6d2059227";"2020-10-08T00_30_06.246Z";"hw3.java";"183";" <identifier> expected
        In inStream = new(filename); 
                         ^
1 error
"
"0106f488719b5b6dec8020fdf6c9e2e6d2059227";"2020-10-08T01_15_42.427Z";"hw3.java";"183";" <identifier> expected
        In inStream = new(filename); 
                         ^
1 error
"
"0106f488719b5b6dec8020fdf6c9e2e6d2059227";"2020-10-08T22_45_25.946Z";"hw3.java";"212";" illegal start of type
    public static String crack(String cipher, ) {
                                              ^
/"
"0106f488719b5b6dec8020fdf6c9e2e6d2059227";"2020-10-08T22_45_25.946Z";"hw3.java";"212";" ')' expected
    public static String crack(String cipher, ) {
                                               ^
/"
"0106f488719b5b6dec8020fdf6c9e2e6d2059227";"2020-10-08T22_45_25.946Z";"hw3.java";"212";" ';' expected
    public static String crack(String cipher, ) {
                                                 ^
3 errors
"
"025e11c5a647be6af45e5040241901ecd65080f3";"2020-10-04T17_07_56.242Z";"hw3.java";"276";" ';' expected
        double encryptedFrequencies 
                                   ^
1 error
"
"04810dc49618a521e56f3207dc85b34ec4e67375";"2020-10-06T21_32_44.811Z";"hw3.java";"187";" incompatible types"
"04810dc49618a521e56f3207dc85b34ec4e67375";"2020-10-07T00_12_51.597Z";"hw3.java";"237";" class, interface, or enum expected
}
^
1 error
"
"04810dc49618a521e56f3207dc85b34ec4e67375";"2020-10-07T22_47_23.139Z";"hw3.java";"172";" illegal start of expression
                if (symbols[i] = )
                                 ^
/"
"04810dc49618a521e56f3207dc85b34ec4e67375";"2020-10-07T22_47_23.139Z";"hw3.java";"173";" illegal start of statement
            }
            ^
2 errors
"
"04810dc49618a521e56f3207dc85b34ec4e67375";"2020-10-08T00_43_27.253Z";"hw3.java";"211";" cannot find symbol
        String messageOut = decrypt(cipher, key);
                                            ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T01_26_58.424Z";"hw3.java";"20";" ';' expected
        for (i = str)
                    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T01_26_58.424Z";"hw3.java";"20";" ';' expected
        for (i = str)
                     ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T01_26_58.424Z";"hw3.java";"21";" ')' expected
         String setting = args[0];
                                 ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T01_26_58.424Z";"hw3.java";"24";" ';' expected
        str = str.toUpperCase()
                               ^
4 errors
"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T02_19_05.041Z";"hw3.java";"24";" cannot find symbol
         String setting = args[0];
                          ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T02_19_05.041Z";"hw3.java";"25";" cannot find symbol
         String inputString = args[1];    
                              ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T02_31_09.039Z";"hw3.java";"24";" cannot find symbol
         String setting = args[0];
                          ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T02_31_09.039Z";"hw3.java";"25";" cannot find symbol
         String inputString = args[1];    
                              ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-04T03_00_55.113Z";"hw3.java";"21";" ';' expected
            int [] stringToInteger = new int[i]
                                               ^
1 error
"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"71";" class, interface, or enum expected
        else {
        ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"73";" class, interface, or enum expected
        }
        ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"75";" class, interface, or enum expected
    }
    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"80";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"84";" class, interface, or enum expected
    }
    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"89";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"92";" class, interface, or enum expected
    }
    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"97";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"100";" class, interface, or enum expected
    }
    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"105";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"108";" class, interface, or enum expected
    }
    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"113";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"116";" class, interface, or enum expected
    }
    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"121";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"124";" class, interface, or enum expected
    }
    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"126";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"129";" class, interface, or enum expected
        int[] arr = {2, 14, 13, 18, 20, 11};
        ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"130";" class, interface, or enum expected
        symbolArrayToString(arr);
        ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"132";" class, interface, or enum expected
        int tester = shift(25, 5);
        ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"133";" class, interface, or enum expected
        System.out.println(tester);
        ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T00_56_11.894Z";"hw3.java";"134";" class, interface, or enum expected
    }
    ^
21 errors
"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T21_35_33.698Z";"hw3.java";"113";" cannot find symbol
        return symbolArrayToString;
               ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T21_35_33.698Z";"hw3.java";"160";" method encrypt in class Caesar cannot be applied to given types;
        System.out.println(encrypt('ET TU, BRUTE?'), 6);
                           ^
  required"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T22_37_37.174Z";"hw3.java";"102";" '.class' expected
            stringToInteger[i] = int symbol;
                                     ^
1 error
"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T22_59_34.693Z";"hw3.java";"101";" not a statement
        int[] = stringToSymbolArray(message);
           ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T22_59_34.693Z";"hw3.java";"101";" ';' expected
        int[] = stringToSymbolArray(message);
             ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T22_59_34.693Z";"hw3.java";"103";" '.class' expected
            stringToInteger[i] = int symbol;
                                     ^
3 errors
"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T23_38_14.623Z";"hw3.java";"103";" cannot find symbol
            symbol = encryptArray[i];
            ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T23_38_14.623Z";"hw3.java";"104";" cannot find symbol
            symbol = shift(symbol, key);
            ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T23_38_14.623Z";"hw3.java";"104";" cannot find symbol
            symbol = shift(symbol, key);
                           ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T23_38_14.623Z";"hw3.java";"105";" cannot find symbol
            encryptArray[i] = symbol;
                              ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T23_38_14.623Z";"hw3.java";"110";" incompatible types"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T23_54_00.006Z";"hw3.java";"104";" cannot find symbol
            symbolNew = shift(symbol, key);
                              ^
  symbol"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-07T23_54_00.006Z";"hw3.java";"110";" incompatible types"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"183";" ';' expected
                numberOfLetters++
                                 ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"223";" ';' expected
            int [] decryptArray = new int [message.charAt]
                                                          ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"226";" '.class' expected
            scoreFrequencies(double[] english, double[] currentFreqs)
                                      ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"226";" ';' expected
            scoreFrequencies(double[] english, double[] currentFreqs)
                                             ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"226";" ';' expected
            scoreFrequencies(double[] english, double[] currentFreqs)
                                                                    ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"235";" ';' expected
            cipherFrequencies = findFrequencies()
                                                 ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"242";" ';' expected
            frequencyScore = englishArray[i] - cipherFrequencies[i]
                                                                   ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"250";" ')' expected
            String crackedCode = decrypt(String cipher, maxScore);
                                               ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"250";" illegal start of expression
            String crackedCode = decrypt(String cipher, maxScore);
                                                      ^
/"
"04ddc6d8c8a0d19b0bbecc287f15f39b8c9d0795";"2020-10-08T23_52_59.520Z";"hw3.java";"250";" ';' expected
            String crackedCode = decrypt(String cipher, maxScore);
                                                                ^
10 errors
"
"084446117d0ab708d724abbe76e58340d13dc899";"2020-10-07T11_34_58.211Z";"hw3.java";"64";" not a statement
            symbol
            ^
/"
"084446117d0ab708d724abbe76e58340d13dc899";"2020-10-07T11_34_58.211Z";"hw3.java";"64";" ';' expected
            symbol
                  ^
2 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T20_52_53.511Z";"hw3.java";"22";" illegal start of expression
    public static int stringToSymbolArray(String str) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T20_52_53.511Z";"hw3.java";"22";" illegal start of expression
    public static int stringToSymbolArray(String str) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T20_52_53.511Z";"hw3.java";"22";" ';' expected
    public static int stringToSymbolArray(String str) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T20_52_53.511Z";"hw3.java";"22";" ')' expected
    public static int stringToSymbolArray(String str) {
                                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T20_52_53.511Z";"hw3.java";"22";" illegal start of expression
    public static int stringToSymbolArray(String str) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T20_52_53.511Z";"hw3.java";"22";" ';' expected
    public static int stringToSymbolArray(String str) {
                                                     ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T20_52_53.511Z";"hw3.java";"107";" class, interface, or enum expected
}
^
7 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"23";" illegal start of expression
    public static int stringToSymbolArray(String str) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"23";" illegal start of expression
    public static int stringToSymbolArray(String str) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"23";" ';' expected
    public static int stringToSymbolArray(String str) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"23";" ')' expected
    public static int stringToSymbolArray(String str) {
                                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"23";" illegal start of expression
    public static int stringToSymbolArray(String str) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"23";" ';' expected
    public static int stringToSymbolArray(String str) {
                                                     ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"28";" array dimension missing
        int[] symbolArray = new int[str.length()];
        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"28";" illegal start of expression
        int[] symbolArray = new int[str.length()];
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"28";" ';' expected
        int[] symbolArray = new int[str.length()];
            ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T22_57_32.853Z";"hw3.java";"111";" class, interface, or enum expected
}
^
10 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"12";" ';' expected
       int[] symbol = stringToSymbolArray()
                                           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"24";" illegal start of expression
    public static int stringToSymbolArray(String str) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"24";" ';' expected
    public static int stringToSymbolArray(String str) {
          ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"24";" ';' expected
    public static int stringToSymbolArray(String str) {
                                         ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"24";" ';' expected
    public static int stringToSymbolArray(String str) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"45";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"45";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"45";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"45";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"45";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"53";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"53";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"53";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"53";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"53";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"53";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"61";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"61";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"61";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_33_37.898Z";"hw3.java";"110";" class, interface, or enum expected
}
^
47 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"12";" ';' expected
       int[] symbol = stringToSymbolArray()
                                           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"24";" illegal start of expression
    public static int stringToSymbolArray(String str) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"24";" ';' expected
    public static int stringToSymbolArray(String str) {
          ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"24";" ';' expected
    public static int stringToSymbolArray(String str) {
                                         ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"24";" ';' expected
    public static int stringToSymbolArray(String str) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"46";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"46";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"46";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"46";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"46";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"54";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"62";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"62";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"62";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"62";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"62";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"62";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"70";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"78";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"86";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-07T23_51_25.682Z";"hw3.java";"111";" class, interface, or enum expected
}
^
47 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T00_46_23.579Z";"hw3.java";"22";" illegal start of expression
    public static int stringToSymbolArray(String str) {
    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T00_46_23.579Z";"hw3.java";"22";" illegal start of expression
    public static int stringToSymbolArray(String str) {
           ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T00_46_23.579Z";"hw3.java";"22";" ';' expected
    public static int stringToSymbolArray(String str) {
                 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T00_46_23.579Z";"hw3.java";"22";" ')' expected
    public static int stringToSymbolArray(String str) {
                                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T00_46_23.579Z";"hw3.java";"22";" illegal start of expression
    public static int stringToSymbolArray(String str) {
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T00_46_23.579Z";"hw3.java";"22";" ';' expected
    public static int stringToSymbolArray(String str) {
                                                     ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T00_46_23.579Z";"hw3.java";"109";" class, interface, or enum expected
}
^
7 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T17_56_19.929Z";"hw3.java";"82";" '.class' expected
        message = symbolArrayToString(message[]);
                                               ^
1 error
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T18_25_24.436Z";"hw3.java";"82";" '.class' expected
        message = symbolArrayToString(message[]);
                                               ^
1 error
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T19_44_44.357Z";"hw3.java";"13";" ';' expected
        String data = inStream.readAll()
                                        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T19_44_44.357Z";"hw3.java";"14";" not a statement
        String 
        ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T19_44_44.357Z";"hw3.java";"14";" ';' expected
        String 
              ^
3 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T19_55_05.179Z";"hw3.java";"13";" ';' expected
        String data = inStream.readAll()
                                        ^
1 error
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T21_39_05.058Z";"hw3.java";"130";" ')' expected
        for (int i = 0; i < symbols.length; i++;) {
                                               ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T21_39_05.058Z";"hw3.java";"130";" illegal start of expression
        for (int i = 0; i < symbols.length; i++;) {
                                                ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T21_39_05.058Z";"hw3.java";"131";" ';' expected
            letterFrequency = symbols[i]
                                        ^
3 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T22_22_47.952Z";"hw3.java";"135";" not a statement
        cipherFrequencyArray[]= cipherFrequencyArray[] / symbols.length;
                            ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T22_22_47.952Z";"hw3.java";"135";" ';' expected
        cipherFrequencyArray[]= cipherFrequencyArray[] / symbols.length;
                              ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T22_22_47.952Z";"hw3.java";"135";" not a statement
        cipherFrequencyArray[]= cipherFrequencyArray[] / symbols.length;
                                                    ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T22_22_47.952Z";"hw3.java";"135";" ';' expected
        cipherFrequencyArray[]= cipherFrequencyArray[] / symbols.length;
                                                      ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T22_22_47.952Z";"hw3.java";"135";" not a statement
        cipherFrequencyArray[]= cipherFrequencyArray[] / symbols.length;
                                                                ^
5 errors
"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T23_16_40.187Z";"hw3.java";"125";" cannot find symbol
        for (int i = 0; i < filename.length; i++) {
                                    ^
  symbol"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T23_16_40.187Z";"hw3.java";"126";" cannot find symbol
            double frequency = inStream.readLine(i);
                               ^
  symbol"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T23_16_40.187Z";"hw3.java";"140";" incompatible types"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-08T23_48_59.172Z";"hw3.java";"125";" method readLine in class In cannot be applied to given types;
            double frequency = inStream.readLine(i);
                                       ^
  required"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-09T00_00_16.351Z";"hw3.java";"125";" method readLine in class In cannot be applied to given types;
            double frequency = inStream.readLine(i);
                                       ^
  required"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-09T00_34_53.366Z";"hw3.java";"159";" illegal start of type
}
^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-09T00_34_53.366Z";"hw3.java";"159";" reached end of file while parsing
}
 ^
/"
"0b2b215d3895dc070ff308ca5d5733bb0abda40f";"2020-10-09T00_34_53.366Z";"hw3.java";"160";" reached end of file while parsing
3 errors
"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"10";" <identifier> expected
    public class static void main(String[] args){
                ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"34";" illegal start of expression
        }
        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"46";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"46";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"46";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"46";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"46";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"54";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"62";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"62";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"62";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"62";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"62";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"62";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"70";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"78";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"86";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-04T22_06_34.872Z";"hw3.java";"110";" reached end of file while parsing
}
 ^
44 errors
"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-06T17_27_09.035Z";"hw3.java";"10";" <identifier> expected
    public class static void main(String[] args){
                ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-06T17_27_09.035Z";"hw3.java";"11";" not a statement
        intSymbolArray;
        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-06T17_27_09.035Z";"hw3.java";"113";" reached end of file while parsing
}
 ^
3 errors
"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T22_55_22.124Z";"hw3.java";"78";" not a statement
        else (symbol == 25){
             ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T22_55_22.124Z";"hw3.java";"78";" ';' expected
        else (symbol == 25){
                           ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T22_55_22.124Z";"hw3.java";"79";" not a statement
            symbol == 0;
                   ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T22_55_22.124Z";"hw3.java";"92";" not a statement
            symbol == symbol;
                   ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T22_55_22.124Z";"hw3.java";"98";" not a statement
        else (symbol == 0){
             ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T22_55_22.124Z";"hw3.java";"98";" ';' expected
        else (symbol == 0){
                          ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T22_55_22.124Z";"hw3.java";"99";" not a statement
            symbol == 25;
                   ^
7 errors
"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T23_59_27.275Z";"hw3.java";"165";" incompatible types"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T23_59_27.275Z";"hw3.java";"167";" cannot find symbol
                if (symbols[j] == g){
                                  ^
  symbol"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-08T23_59_27.275Z";"hw3.java";"173";" cannot find symbol
        return freqs;
               ^
  symbol"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-09T02_06_42.576Z";"hw3.java";"209";" illegal start of expression
        }
        ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-09T02_06_42.576Z";"hw3.java";"210";" illegal start of expression
            if ()
                ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-09T02_06_42.576Z";"hw3.java";"211";" illegal start of statement
    }
    ^
/"
"0c2eedb86a7888c7defd056d073fc040a338eec3";"2020-10-09T02_06_42.576Z";"hw3.java";"212";" reached end of file while parsing
}
 ^
4 errors
"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T00_30_47.065Z";"hw3.java";"52";" illegal start of expression
        if (symbol == x >= 0 && x <= 25) {
        ^
/"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T00_30_47.065Z";"hw3.java";"52";" not a statement
        if (symbol == x >= 0 && x <= 25) {
           ^
/"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T00_30_47.065Z";"hw3.java";"52";" ';' expected
        if (symbol == x >= 0 && x <= 25) {
                                        ^
/"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T00_30_47.065Z";"hw3.java";"54";" 'else' without 'if'
        } else {
          ^
/"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T00_30_47.065Z";"hw3.java";"112";" ';' expected
        String filename.txt = args[1];
                       ^
5 errors
"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T04_33_49.748Z";"hw3.java";"140";" cannot find symbol
        currentFreqs = findFrequencies(stringToSymbolArray(filename));
                                                           ^
  symbol"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T04_33_49.748Z";"hw3.java";"141";" bad operand types for binary operator '-'
        double m = Math.abs(english - currentFreqs);
                                    ^
  first type"
"0c51503c95c50eeaf97615b29561f75e0d6d60c3";"2020-10-09T13_59_47.701Z";"hw3.java";"141";" '.class' expected
        currentFreqs = findFrequencies(int[]);
                                            ^
1 error
"
"0ca06f2f6d203a8c20ee3d33c95ce3a1c9550356";"2020-10-07T01_28_23.766Z";"hw3.java";"49";" unexpected type
            s.charAt(i) = (char) (symbols[i] + 'A');
                    ^
  required"
"0ca06f2f6d203a8c20ee3d33c95ce3a1c9550356";"2020-10-08T03_52_18.032Z";"hw3.java";"197";" cannot find symbol
        String message = inStream.readAll();
                         ^
  symbol"
"0ca06f2f6d203a8c20ee3d33c95ce3a1c9550356";"2020-10-08T13_25_01.996Z";"hw3.java";"165";" ';' expected
        for (int i = 0; i < symbols.length)
                                          ^
1 error
"
"0ca06f2f6d203a8c20ee3d33c95ce3a1c9550356";"2020-10-08T15_05_51.852Z";"hw3.java";"163";" ';' expected
        double[] cipherFrequency new double[26];
                                ^
/"
"0ca06f2f6d203a8c20ee3d33c95ce3a1c9550356";"2020-10-08T15_05_51.852Z";"hw3.java";"163";" ']' expected
        double[] cipherFrequency new double[26];
                                            ^
/"
"0ca06f2f6d203a8c20ee3d33c95ce3a1c9550356";"2020-10-08T15_05_51.852Z";"hw3.java";"163";" not a statement
        double[] cipherFrequency new double[26];
                                           ^
/"
"0ca06f2f6d203a8c20ee3d33c95ce3a1c9550356";"2020-10-08T15_05_51.852Z";"hw3.java";"163";" illegal start of expression
        double[] cipherFrequency new double[26];
                                              ^
4 errors
"
"0cec4107a713477189bb82d9d34b81190cb1201b";"2020-10-08T19_10_39.139Z";"hw3.java";"154";" cannot find symbol
        double[] test = getDictionaryFrequencies(english.txt);
                                                 ^
  symbol"
"0cec4107a713477189bb82d9d34b81190cb1201b";"2020-10-08T23_54_40.696Z";"hw3.java";"172";" missing return statement
    }
    ^
1 error
"
"0cec4107a713477189bb82d9d34b81190cb1201b";"2020-10-09T00_50_12.563Z";"hw3.java";"188";" missing return statement
    }
    ^
1 error
"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-09T22_00_27.431Z";"hw3.java";"37";" cannot find symbol
        switch (setting) {
                ^
  symbol"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-09T22_00_27.431Z";"hw3.java";"37";" illegal start of type
        switch (setting) {
               ^
2 errors
"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-09T22_32_04.924Z";"hw3.java";"37";" ';' expected
        str = str.toUpperCase()
                               ^
1 error
"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T00_35_09.743Z";"hw3.java";"30";" cannot find symbol
        int[] output = new int[str.length];
                                  ^
  symbol"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T00_35_09.743Z";"hw3.java";"31";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T00_35_09.743Z";"hw3.java";"32";" cannot find symbol
           char current = s.charAt(i);
                          ^
  symbol"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T01_59_31.775Z";"hw3.java";"49";" cannot find symbol
        int[] output = new int[symbols.length()];
                                      ^
  symbol"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T01_59_31.775Z";"hw3.java";"50";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T01_59_31.775Z";"hw3.java";"52";" cannot find symbol
           String asciiRepresentation = (int) current;
                                              ^
  symbol"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T01_59_31.775Z";"hw3.java";"52";" incompatible types"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T01_59_31.775Z";"hw3.java";"53";" incompatible types"
"0de822bddc1dd72a3230320f51b10b9f7a509869";"2020-10-10T01_59_31.775Z";"hw3.java";"56";" incompatible types"
"0e5e2419246434693bfda4a7c0c42bf8f6a75339";"2020-10-05T20_56_32.992Z";"hw3.java";"148";" <identifier> expected
    public static double 
                        ^
1 error
"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T11_48_57.046Z";"hw3.java";"22";" cannot find symbol
            char current = s.charAt(i);
                                    ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T11_48_57.046Z";"hw3.java";"22";" cannot find symbol
            char current = s.charAt(i);
                           ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T14_32_08.023Z";"hw3.java";"23";" '.class' expected
            int ourSymbolRepresentation = int) current - 'A';
                                             ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T14_32_08.023Z";"hw3.java";"23";" not a statement
            int ourSymbolRepresentation = int) current - 'A';
                                                       ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T14_32_08.023Z";"hw3.java";"26";" ';' expected
        return null
                   ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T14_32_08.023Z";"hw3.java";"27";" > expected
            (int i = 0; i < s.length(); i++) {
                                    ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T14_32_08.023Z";"hw3.java";"27";" not a statement
            (int i = 0; i < s.length(); i++) {
                          ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T14_32_08.023Z";"hw3.java";"27";" illegal start of expression
            (int i = 0; i < s.length(); i++) {
                                     ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T14_32_08.023Z";"hw3.java";"27";" ';' expected
            (int i = 0; i < s.length(); i++) {
                                           ^
7 errors
"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T21_43_19.293Z";"hw3.java";"113";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T21_43_19.293Z";"hw3.java";"11";" cannot find symbol
        switch (setting) {
                ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T21_43_19.293Z";"hw3.java";"11";" illegal start of type
        switch (setting) {
               ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T21_43_19.293Z";"hw3.java";"41";" cannot find symbol
        return stringToSymbolArray;
               ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T22_22_19.477Z";"hw3.java";"113";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T22_22_19.477Z";"hw3.java";"11";" cannot find symbol
        switch (setting) {
                ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T22_22_19.477Z";"hw3.java";"11";" illegal start of type
        switch (setting) {
               ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-06T22_22_19.477Z";"hw3.java";"41";" cannot find symbol
        return stringToSymbolArray;
               ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_08_37.590Z";"hw3.java";"72";" -> expected
        else ();
               ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_08_37.590Z";"hw3.java";"72";" not a statement
        else ();
             ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_08_37.590Z";"hw3.java";"72";" ';' expected
        else ();
                ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_08_37.590Z";"hw3.java";"73";" not a statement
        return symbol;
               ^
4 errors
"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_30_59.806Z";"hw3.java";"124";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_30_59.806Z";"hw3.java";"12";" cannot find symbol
        switch (setting) {
                ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_30_59.806Z";"hw3.java";"12";" illegal start of type
        switch (setting) {
               ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_30_59.806Z";"hw3.java";"41";" cannot find symbol
        return ourSymbolRepresentation;
               ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_30_59.806Z";"hw3.java";"54";" cannot find symbol
        for (int i = 0; i < symbolsArr.length; i++) {
                            ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_30_59.806Z";"hw3.java";"55";" cannot find symbol
            int letter = symbolsArr.length(i);
                         ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T00_30_59.806Z";"hw3.java";"59";" cannot find symbol
        return alphabet;
               ^
  symbol"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-07T02_35_01.734Z";"hw3.java";"29";" '.class' expected
        return int[] ourSymbolRepresentation;
                     ^
1 error
"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-08T19_27_28.414Z";"hw3.java";"156";" incompatible types"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-08T19_47_18.585Z";"hw3.java";"159";" illegal start of expression
        for (int i = 0; i < )
                            ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-08T19_47_18.585Z";"hw3.java";"160";" illegal start of expression
        return null;
        ^
/"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-08T19_47_18.585Z";"hw3.java";"160";" ')' expected
        return null;
              ^
3 errors
"
"0e874cd0ec2bac9c0fde37da1d71d9f9c0456023";"2020-10-08T23_04_29.435Z";"hw3.java";"168";" incompatible types"
"0ebaaad003868565710d1724cb582f41ed3aa598";"2020-10-05T21_09_37.471Z";"hw3.java";"100";" incompatible types"
"0ebaaad003868565710d1724cb582f41ed3aa598";"2020-10-07T23_08_38.774Z";"hw3.java";"160";" ';' expected
                System.out.println()
                                    ^
1 error
"
"0ebaaad003868565710d1724cb582f41ed3aa598";"2020-10-08T00_06_34.617Z";"hw3.java";"141";" ';' expected
            frequencyScore[i] = Math.abs(currentFreqs[i] - english[i])
                                                                      ^
/"
"0ebaaad003868565710d1724cb582f41ed3aa598";"2020-10-08T00_06_34.617Z";"hw3.java";"172";" ';' expected
                System.out.println()
                                    ^
2 errors
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-05T13_33_56.253Z";"hw3.java";"28";" '.class' expected
        return stringsNowSymbols[];
                                  ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-05T17_36_58.354Z";"hw3.java";"28";" '.class' expected
        return stringsNowSymbols[];
                                  ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-05T17_50_12.248Z";"hw3.java";"28";" '.class' expected
        return stringsNowSymbols[];
                                  ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-06T13_34_47.265Z";"hw3.java";"28";" '.class' expected
        return symbols[];
                        ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-06T14_21_07.976Z";"hw3.java";"108";" incompatible types"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-06T14_55_50.103Z";"hw3.java";"111";" ';' expected
        shift(6, 6)
                   ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-06T17_19_20.010Z";"hw3.java";"93";" ';' expected
            shift(symbol[i], key)            
                                 ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T12_57_43.356Z";"hw3.java";"100";" ';' expected
            shift(symbol[i], key)            
                                 ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T19_20_59.627Z";"hw3.java";"220";" array dimension missing
        String[] cipher = new String[];        
                                      ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T19_20_59.627Z";"hw3.java";"221";" ';' expected
        String str = ''
                       ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T19_20_59.627Z";"hw3.java";"226";" illegal start of expression
            /            
            ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T19_20_59.627Z";"hw3.java";"227";" ';' expected
        findFrequencies(stringToSymbolArray(cipher))
                                                    ^
4 errors
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T19_42_51.132Z";"hw3.java";"195";" ';' expected
        double totalCharacters
                              ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T20_25_41.098Z";"hw3.java";"195";" '[' expected
        double[] foundFrequencies = new double(26);
                                              ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T20_25_41.098Z";"hw3.java";"195";" ']' expected
        double[] foundFrequencies = new double(26);
                                                  ^
2 errors
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T21_14_33.070Z";"hw3.java";"221";" ';' expected
            score = score + math.abs(dictionaryFrequencies[i] - foundFrequencies[i])
                                                                                    ^
1 error
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"221";" illegal start of expression
            score = score + math.abs(dictionaryFrequencies([i]) 
                                                           ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"221";" ')' expected
            score = score + math.abs(dictionaryFrequencies([i]) 
                                                            ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"221";" ';' expected
            score = score + math.abs(dictionaryFrequencies([i]) 
                                                             ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"221";" illegal start of expression
            score = score + math.abs(dictionaryFrequencies([i]) 
                                                              ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"222";" not a statement
                                     - foundFrequencies[i]);
                                     ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"222";" ';' expected
                                     - foundFrequencies[i]);
                                                          ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"258";" '.class' expected
        double[] foundFrequencies = findFrequencies(int[] key);
                                                          ^
/"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-08T23_23_13.680Z";"hw3.java";"258";" ';' expected
        double[] foundFrequencies = findFrequencies(int[] key);
                                                             ^
8 errors
"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T00_29_50.142Z";"hw3.java";"242";" incompatible types"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T00_29_50.142Z";"hw3.java";"273";" cannot find symbol
                for (int i = 0; i < key.length; i++) {
                                    ^
  symbol"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T00_29_50.142Z";"hw3.java";"274";" cannot find symbol
                        encrypt(message, key[i]);
                                ^
  symbol"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T00_29_50.142Z";"hw3.java";"274";" cannot find symbol
                        encrypt(message, key[i]);
                                         ^
  symbol"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T00_29_50.142Z";"hw3.java";"278";" cannot find symbol
                for (int i = 0; i < key.length; i++) {
                                    ^
  symbol"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T00_29_50.142Z";"hw3.java";"279";" cannot find symbol
                        decrypt(message, key[i]);
                                ^
  symbol"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T00_29_50.142Z";"hw3.java";"279";" cannot find symbol
                        decrypt(message, key[i]);
                                         ^
  symbol"
"0f88be4b4d0a31605c539532fce08ed600190170";"2020-10-09T23_18_38.573Z";"hw3.java";"292";" illegal start of expression
                break;
                ^
1 error
"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"58";" '(' expected
                if symbol >= 0 && symbol <= 25 {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"58";" ')' expected
                if symbol >= 0 && symbol <= 25 {
                                              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"59";" ';' expected
                    symbol = symbol + offset
                                            ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"70";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"70";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"70";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"70";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"70";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"70";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"73";" '(' expected
                if symbol >= 0 && symbol <= 25 {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"73";" ')' expected
                if symbol >= 0 && symbol <= 25 {
                                              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"74";" ';' expected
                    symbol = symbol - offset
                                            ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"109";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"109";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"109";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"109";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"109";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"109";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"109";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"117";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"117";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"117";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"117";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"117";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"117";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"122";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"122";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"122";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"122";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"122";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T21_55_16.475Z";"hw3.java";"125";" reached end of file while parsing
}
 ^
55 errors
"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T23_21_16.124Z";"hw3.java";"49";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T23_21_16.124Z";"hw3.java";"63";" cannot find symbol
            for (int i = 0; i < str.length(); i++) {
                                ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T23_21_16.124Z";"hw3.java";"66";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T23_21_16.124Z";"hw3.java";"69";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T23_21_16.124Z";"hw3.java";"82";" cannot find symbol
        for (int i = 0; i < str.length() ; i++) {
                            ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T23_21_16.124Z";"hw3.java";"85";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-07T23_21_16.124Z";"hw3.java";"87";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T00_37_45.526Z";"hw3.java";"108";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T01_26_59.936Z";"hw3.java";"47";" variable integer might not have been initialized
        int integer[] = new int[integer.length];
                                ^
1 error
"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T03_50_18.957Z";"hw3.java";"14";" cannot find symbol
        for (int i = 0; i < int1.length ; i++) {
                            ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T03_50_18.957Z";"hw3.java";"15";" cannot find symbol
            System.out.println (int1[i]);}
                                ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T11_58_25.981Z";"hw3.java";"12";" empty character literal
        int symbol  = '';
                      ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T11_58_25.981Z";"hw3.java";"12";" unclosed character literal
        int symbol  = '';
                       ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T11_58_25.981Z";"hw3.java";"12";" ';' expected
        int symbol  = '';
                         ^
3 errors
"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"12";" empty character literal
        int symbol  = '';
                      ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"12";" unclosed character literal
        int symbol  = '';
                       ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"13";" ';' expected
        System.out.println (symbol);
              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"123";" illegal start of type
        return null;
        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"123";" ';' expected
        return null;
              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"129";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"132";" class, interface, or enum expected
    }
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"137";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"140";" class, interface, or enum expected
    }
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"145";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T13_03_14.376Z";"hw3.java";"148";" class, interface, or enum expected
    }
    ^
11 errors
"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T14_04_28.501Z";"hw3.java";"94";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T14_04_28.501Z";"hw3.java";"95";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T14_04_28.501Z";"hw3.java";"96";" cannot find symbol
        return symbolArrayToString;
               ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T14_04_28.501Z";"hw3.java";"104";" cannot find symbol
        stringToSymbolArray(cypher);
                            ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T14_04_28.501Z";"hw3.java";"105";" cannot find symbol
        unshift(cypher , key);
                ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T14_04_28.501Z";"hw3.java";"106";" cannot find symbol
        symbolArrayToString(cypher); 
                            ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T14_04_28.501Z";"hw3.java";"107";" cannot find symbol
        return symbolArrayToString;
               ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"125";" not a statement
        for (i=0, i < filename.length, i++){
                    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"125";" ';' expected
        for (i=0, i < filename.length, i++){
                                          ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"125";" ';' expected
        for (i=0, i < filename.length, i++){
                                           ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"126";" ']' expected
            double[i] english = filename 
                   ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"126";" not a statement
            double[i] english = filename 
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"126";" ')' expected
            double[i] english = filename 
                    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"126";" ';' expected
            double[i] english = filename 
                                        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"129";" illegal start of type
        return english;
        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"129";" ';' expected
        return english;
              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"135";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"138";" class, interface, or enum expected
    }
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"143";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T19_33_56.458Z";"hw3.java";"149";" class, interface, or enum expected
    }
    ^
13 errors
"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"133";" not a statement
        for (i=0, i < filename.length(), i++){
                    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"133";" ';' expected
        for (i=0, i < filename.length(), i++){
                                            ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"133";" ';' expected
        for (i=0, i < filename.length(), i++){
                                             ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"134";" ')' expected
            english[i] = inStream.readDouble();           
                                              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"136";" illegal start of type
        return english;
        ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"136";" ';' expected
        return english;
              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"142";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"145";" class, interface, or enum expected
    }
    ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"150";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T20_44_44.699Z";"hw3.java";"156";" class, interface, or enum expected
    }
    ^
10 errors
"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-08T23_20_09.961Z";"hw3.java";"149";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T01_28_41.291Z";"hw3.java";"176";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T01_28_41.291Z";"hw3.java";"177";" incompatible types"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T01_28_41.291Z";"hw3.java";"184";" cannot find symbol
     return decryptedCipher;
            ^
  symbol"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T05_18_37.400Z";"hw3.java";"160";" ';' expected
        for (int i = 0; i < 26, i++){
                              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T05_18_37.400Z";"hw3.java";"160";" ')' expected
        for (int i = 0; i < 26, i++){
                               ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T05_18_37.400Z";"hw3.java";"160";" illegal start of expression
        for (int i = 0; i < 26, i++){
                                   ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T05_18_37.400Z";"hw3.java";"170";" ';' expected
        for (int i = 0; i < 26, i++){
                              ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T05_18_37.400Z";"hw3.java";"170";" ')' expected
        for (int i = 0; i < 26, i++){
                               ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T05_18_37.400Z";"hw3.java";"170";" illegal start of expression
        for (int i = 0; i < 26, i++){
                                   ^
/"
"0fc86b6a1afaad8cc203fac7e27c55097c310937";"2020-10-09T05_18_37.400Z";"hw3.java";"171";" not a statement
            symbolFrequencies[i]/symbols.length;
                                ^
7 errors
"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-04T15_19_03.062Z";"hw3.java";"102";" ';' expected
           int[] stringToSymbolArray('CONSUL') = new int[]; 
                                    ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-04T15_19_03.062Z";"hw3.java";"102";" not a statement
           int[] stringToSymbolArray('CONSUL') = new int[]; 
                                                        ^
2 errors
"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T03_35_05.486Z";"hw3.java";"60";" unexpected type
            symbol + offset = ('A' - 65) + ((symbol + offset) - ('Z' - 65)); 
                   ^
  required"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T23_59_04.912Z";"hw3.java";"168";" cannot find symbol
         case encrypt"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T23_59_04.912Z";"hw3.java";"181";" cannot find symbol
         case decrypt"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T23_59_04.912Z";"hw3.java";"183";" cannot find symbol
             in inStream = new In(encrypt);
             ^
  symbol"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T23_59_04.912Z";"hw3.java";"183";" variable inStream is already defined in method main(String[])
             in inStream = new In(encrypt);
                ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T23_59_04.912Z";"hw3.java";"183";" cannot find symbol
             in inStream = new In(encrypt);
                                  ^
  symbol"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T23_59_04.912Z";"hw3.java";"184";" variable text is already defined in method main(String[])
             String text = inStream.readAll();
                    ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-06T23_59_04.912Z";"hw3.java";"185";" cannot find symbol
             System.out.println('text"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T00_19_53.331Z";"hw3.java";"185";" variable inStream is already defined in method main(String[])
             In inStream = new In(decrypt);
                ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T00_19_53.331Z";"hw3.java";"185";" cannot find symbol
             In inStream = new In(decrypt);
                                  ^
  symbol"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T00_19_53.331Z";"hw3.java";"186";" variable text is already defined in method main(String[])
             String text = inStream.readAll();
                    ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T00_19_53.331Z";"hw3.java";"187";" cannot find symbol
             System.out.println('text"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_17_16.932Z";"hw3.java";"139";" illegal start of expression
        return 0;
        ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_17_16.932Z";"hw3.java";"139";" not a statement
        return 0;
               ^
2 errors
"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"142";" illegal start of expression
        }   
        ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"141";" not a statement
            fMeasure[i] * 
                        ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"155";" illegal start of expression
       public static void main(String[] args) {
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"155";" illegal start of expression
       public static void main(String[] args) {
              ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"155";" ';' expected
       public static void main(String[] args) {
                    ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"155";" '.class' expected
       public static void main(String[] args) {
                                        ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"155";" ';' expected
       public static void main(String[] args) {
                                            ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T20_41_06.419Z";"hw3.java";"217";" reached end of file while parsing
   }
    ^
8 errors
"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-07T21_20_00.222Z";"hw3.java";"140";" illegal start of expression
          if (symbols[i] => 0 && symbols[i] <= 25) {
                          ^
1 error
"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T02_41_50.461Z";"hw3.java";"177";" method scoreFrequencies in class Caesar cannot be applied to given types;
            double[] scoreTest = scoreFrequencies(freqTest);
                                 ^
  required"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"186";" illegal start of type
       return 0.0;
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"186";" ';' expected
       return 0.0;
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"192";" class, interface, or enum expected
       public static void main(String[] args) {
                     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"220";" class, interface, or enum expected
     char k = args[2].charAt(0);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"221";" class, interface, or enum expected
     int key = k - 'A'; 
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"223";" class, interface, or enum expected
       if (command.equals('encrypt')) {
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"225";" class, interface, or enum expected
             In inStream = new In(message); 
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"226";" class, interface, or enum expected
             String text = inStream.readAll();
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"227";" class, interface, or enum expected
             System.out.println('text"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"228";" class, interface, or enum expected
             String cipher = encrypt(text, key);
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"229";" class, interface, or enum expected
             System.out.println('encrypted"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"230";" class, interface, or enum expected
       }
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"235";" class, interface, or enum expected
             In inStreamTwo = new In(decode);
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"236";" class, interface, or enum expected
             String textTwo = inStreamTwo.readAll();
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"237";" class, interface, or enum expected
             System.out.println('text"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"238";" class, interface, or enum expected
             String decrypted = decrypt(textTwo, key);
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"239";" class, interface, or enum expected
             System.out.println('decrypted"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"240";" class, interface, or enum expected
       }
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"246";" class, interface, or enum expected
     j = stringToSymbolArray('nhodds');
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"248";" class, interface, or enum expected
     double[] l = findFrequencies(j);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"251";" class, interface, or enum expected
     String english = args[3];
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"252";" class, interface, or enum expected
     double[] b = getDictionaryFrequencies(english);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"257";" class, interface, or enum expected
     double v = scoreFrequencies(b, l);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"258";" class, interface, or enum expected
        System.out.print(v); 
        ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T12_19_36.784Z";"hw3.java";"275";" class, interface, or enum expected
           }
           ^
25 errors
"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"180";" ';' expected
           scoreMin[i] = freqTest[i]scoreTest
                                    ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"182";" ';' expected
               Double.MAX_VALUE;
                     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"182";" not a statement
               Double.MAX_VALUE;
                      ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"187";" illegal start of type
       return ;
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"193";" class, interface, or enum expected
       public static void main(String[] args) {
                     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"221";" class, interface, or enum expected
     char k = args[2].charAt(0);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"222";" class, interface, or enum expected
     int key = k - 'A'; 
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"224";" class, interface, or enum expected
       if (command.equals('encrypt')) {
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"226";" class, interface, or enum expected
             In inStream = new In(message); 
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"227";" class, interface, or enum expected
             String text = inStream.readAll();
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"228";" class, interface, or enum expected
             System.out.println('text"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"229";" class, interface, or enum expected
             String cipher = encrypt(text, key);
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"230";" class, interface, or enum expected
             System.out.println('encrypted"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"231";" class, interface, or enum expected
       }
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"236";" class, interface, or enum expected
             In inStreamTwo = new In(decode);
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"237";" class, interface, or enum expected
             String textTwo = inStreamTwo.readAll();
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"238";" class, interface, or enum expected
             System.out.println('text"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"239";" class, interface, or enum expected
             String decrypted = decrypt(textTwo, key);
             ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"240";" class, interface, or enum expected
             System.out.println('decrypted"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"241";" class, interface, or enum expected
       }
       ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"247";" class, interface, or enum expected
     j = stringToSymbolArray('nhodds');
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"249";" class, interface, or enum expected
     double[] l = findFrequencies(j);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"252";" class, interface, or enum expected
     String english = args[3];
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"253";" class, interface, or enum expected
     double[] b = getDictionaryFrequencies(english);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"258";" class, interface, or enum expected
     double v = scoreFrequencies(b, l);
     ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"259";" class, interface, or enum expected
        System.out.print(v); 
        ^
/"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T13_43_38.161Z";"hw3.java";"276";" class, interface, or enum expected
           }
           ^
27 errors
"
"107e619e6f2a5a39e729d6ffaa91b43d2be99edf";"2020-10-08T19_48_42.954Z";"hw3.java";"195";" missing return statement
   }
   ^
1 error
"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-07T20_32_32.671Z";"hw3.java";"55";" ';' expected
            elements[i] = letter
                                ^
1 error
"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-07T21_52_50.687Z";"hw3.java";"115";" ')' expected
            System.out.print(symbolArrayToString();
                                                  ^
1 error
"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T12_51_36.065Z";"hw3.java";"66";" variable offset is already defined in method shift(int,int)
        int offset = 4;
            ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T12_51_36.065Z";"hw3.java";"67";" cannot find symbol
        for (int i = 0; i < s.length(); i++) {
                            ^
  symbol"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T12_51_36.065Z";"hw3.java";"68";" variable symbol is already defined in method shift(int,int)
            char symbol = s.charAt(i);
                 ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T12_51_36.065Z";"hw3.java";"68";" cannot find symbol
            char symbol = s.charAt(i);
                          ^
  symbol"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T12_51_36.065Z";"hw3.java";"69";" cannot find symbol
            if (symbol >= 'A' && current <= 'Z') {
                                 ^
  symbol"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T12_51_36.065Z";"hw3.java";"70";" cannot find symbol
                char letter = (char) (offset + current);
                                               ^
  symbol"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T12_51_36.065Z";"hw3.java";"72";" incompatible types"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"67";" illegal start of expression
        for (i = 0; i < )
                        ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"68";" illegal start of expression
            if (symbol >= 'A' && symbol <= 'Z') {
            ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"68";" ')' expected
            if (symbol >= 'A' && symbol <= 'Z') {
              ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"68";" not a statement
            if (symbol >= 'A' && symbol <= 'Z') {
                              ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"68";" ';' expected
            if (symbol >= 'A' && symbol <= 'Z') {
                                              ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"75";" illegal start of type
        return symbol;
        ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"75";" ';' expected
        return symbol;
              ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"85";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"88";" class, interface, or enum expected
    }
    ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"93";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"101";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"104";" class, interface, or enum expected
    }
    ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"109";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"112";" class, interface, or enum expected
    }
    ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"117";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"120";" class, interface, or enum expected
    }
    ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"125";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"128";" class, interface, or enum expected
    }
    ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"130";" class, interface, or enum expected
    public static void main(String args[]) {
                  ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"132";" class, interface, or enum expected
        for (int i = 0; i < arrayTest.length; i++) {
        ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"132";" class, interface, or enum expected
        for (int i = 0; i < arrayTest.length; i++) {
                        ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"132";" class, interface, or enum expected
        for (int i = 0; i < arrayTest.length; i++) {
                                              ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"135";" class, interface, or enum expected
        }
        ^
/"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_18_33.494Z";"hw3.java";"138";" class, interface, or enum expected
    }
    ^
25 errors
"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T16_43_27.306Z";"hw3.java";"70";" 'else' without 'if'
                else if (letter > 'Z') {
                ^
1 error
"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-08T17_08_00.684Z";"hw3.java";"74";" not a statement
                    symbol;
                    ^
1 error
"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-09T03_48_21.560Z";"hw3.java";"269";" missing return statement
    }
    ^
1 error
"
"11a155325f353f226a2e2f1ac11eb3aa5351b146";"2020-10-09T20_58_16.445Z";"hw3.java";"139";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_28_43.662Z";"hw3.java";"24";" illegal start of expression
            if ( )
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_28_43.662Z";"hw3.java";"25";" illegal start of statement
        }
        ^
2 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_42_53.194Z";"hw3.java";"24";" illegal start of expression
            if ( )
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_42_53.194Z";"hw3.java";"25";" illegal start of statement
        }
        ^
2 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"24";" illegal start of expression
            if (current => 'A' && current =< 'Z') {
                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"24";" illegal start of type
            if (current => 'A' && current =< 'Z') {
                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"24";" illegal start of expression
            if (current => 'A' && current =< 'Z') {
                                                ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"24";" ')' expected
            if (current => 'A' && current =< 'Z') {
                                                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"26";" illegal start of statement
            }
            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"28";" illegal start of type
        return int;
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"28";" ';' expected
        return int;
              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"39";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"42";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"47";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"50";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"55";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"58";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"63";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"66";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"71";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"74";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"79";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"82";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"87";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"90";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"95";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"98";" class, interface, or enum expected
    }
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T20_56_58.622Z";"hw3.java";"100";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
24 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"37";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"39";" cannot find symbol
            char num = s.charAt(i);
                       ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"40";" bad operand types for binary operator '>='
            if (num >= '0' && num <= '9' ) {
                    ^
  first type"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"40";" bad operand types for binary operator '<='
            if (num >= '0' && num <= '9' ) {
                                  ^
  first type"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"41";" variable num is already defined in method symbolArrayToString(int[])
                char num = (char) (ourSymbolRepresentation + 'A');
                     ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"41";" cannot find symbol
                char num = (char) (ourSymbolRepresentation + 'A');
                                   ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"42";" array required, but String found
                symbolArr[i] = ourSymbolRepresentation;
                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-06T22_21_43.903Z";"hw3.java";"42";" cannot find symbol
                symbolArr[i] = ourSymbolRepresentation;
                               ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-07T19_25_23.206Z";"hw3.java";"48";" cannot find symbol
            shift = symbol + offset;  
            ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T00_17_02.162Z";"hw3.java";"61";" bad operand types for binary operator '<'
        for (int i = 0; i < message; i++) {
                          ^
  first type"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T00_47_44.076Z";"hw3.java";"61";" bad operand types for binary operator '<'
        for (int i = 0; i < message; i++) {
                          ^
  first type"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"75";" illegal start of expression
        }
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_11_23.954Z";"hw3.java";"82";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
9 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"75";" illegal start of expression
        }
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_33_03.215Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
9 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_59_11.055Z";"hw3.java";"61";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T11_59_11.055Z";"hw3.java";"70";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T12_17_04.714Z";"hw3.java";"61";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T12_17_04.714Z";"hw3.java";"70";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T13_20_27.680Z";"hw3.java";"62";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T13_20_27.680Z";"hw3.java";"72";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T16_16_27.507Z";"hw3.java";"62";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T16_16_27.507Z";"hw3.java";"72";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T16_34_17.172Z";"hw3.java";"62";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T16_34_17.172Z";"hw3.java";"72";" incompatible types"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T20_41_42.525Z";"hw3.java";"86";" cannot find symbol
        double[] frequencies = new double [findFrequencies];
                                           ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_34_04.653Z";"hw3.java";"87";" cannot find symbol
             for (s = 0; s < symbols.length; s++) {
                  ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_34_04.653Z";"hw3.java";"87";" cannot find symbol
             for (s = 0; s < symbols.length; s++) {
                         ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_34_04.653Z";"hw3.java";"87";" cannot find symbol
             for (s = 0; s < symbols.length; s++) {
                                             ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"89";" illegal start of expression
             }
             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"97";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"97";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"97";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"97";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"97";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"97";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"107";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"107";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"107";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"107";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"107";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T21_45_20.998Z";"hw3.java";"114";" reached end of file while parsing
}
 ^
13 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T23_25_47.753Z";"hw3.java";"89";" cannot find symbol
            for (s = 0; s < symbols.length; s++) {
                 ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T23_25_47.753Z";"hw3.java";"89";" cannot find symbol
            for (s = 0; s < symbols.length; s++) {
                        ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T23_25_47.753Z";"hw3.java";"89";" cannot find symbol
            for (s = 0; s < symbols.length; s++) {
                                            ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T23_25_47.753Z";"hw3.java";"90";" cannot find symbol
                if (symbols[s] == i) {
                            ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T23_25_47.753Z";"hw3.java";"93";" cannot find symbol
                if (symbols[s] >= 0 && symbols[s] <= 25) {
                            ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-08T23_25_47.753Z";"hw3.java";"93";" cannot find symbol
                if (symbols[s] >= 0 && symbols[s] <= 25) {
                                               ^
  symbol"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"107";" illegal start of type
    return scoreFrequencies; 
    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"107";" ';' expected
    return scoreFrequencies; 
          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"109";" <identifier> expected
    public static string[] {
                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"111";" array dimension missing
         double[] frequencyOfLetter = new double [];   
                                                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" ')' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                       ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" ';' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                               ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" '(' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" ';' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                                ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"112";" ';' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"113";" <identifier> expected
             decrypt(cipher)
                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"113";" ';' expected
             decrypt(cipher)
                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T01_34_09.845Z";"hw3.java";"123";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
20 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"106";" ';' expected
           double sum = Math.abs(currentFreqs[i] - english[i])
                                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"113";" <identifier> expected
    public static string[] {
                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"117";" array dimension missing
         double[] frequencyOfLetter = new double [];   
                                                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" ')' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                       ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" ';' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                               ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" '(' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" <identifier> expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" illegal start of type
         for (int i = 0; i < ??.length; i++) run through the code 
                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" ';' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                                ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"118";" ';' expected
         for (int i = 0; i < ??.length; i++) run through the code 
                                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"119";" <identifier> expected
             decrypt(cipher)
                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"119";" ';' expected
             decrypt(cipher)
                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T02_44_07.683Z";"hw3.java";"129";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
19 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"106";" ';' expected
           double sum = Math.abs(currentFreqs[i] - english[i])
                                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"117";" array dimension missing
         double[] frequencyOfLetter = new double [];   
                                                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" illegal start of type
         for (int i = 0; i < keys.length; i++) {
         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" ')' expected
         for (int i = 0; i < keys.length; i++) {
                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" illegal start of type
         for (int i = 0; i < keys.length; i++) {
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" <identifier> expected
         for (int i = 0; i < keys.length; i++) {
                       ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" ';' expected
         for (int i = 0; i < keys.length; i++) {
                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" > expected
         for (int i = 0; i < keys.length; i++) {
                                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" '(' expected
         for (int i = 0; i < keys.length; i++) {
                                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" <identifier> expected
         for (int i = 0; i < keys.length; i++) {
                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" illegal start of type
         for (int i = 0; i < keys.length; i++) {
                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" <identifier> expected
         for (int i = 0; i < keys.length; i++) {
                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"127";" ';' expected
         for (int i = 0; i < keys.length; i++) {
                                                ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" illegal start of type
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" <identifier> expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" ';' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" illegal start of type
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" ';' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" invalid method declaration; return type required
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" ']' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" ')' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" illegal start of type
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" <identifier> expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"128";" ';' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"129";" illegal start of type
             double [] freqForScore = findFrequencies(numbers);  
                    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"129";" <identifier> expected
             double [] freqForScore = findFrequencies(numbers);  
                     ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"129";" ';' expected
             double [] freqForScore = findFrequencies(numbers);  
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"129";" illegal start of type
             double [] freqForScore = findFrequencies(numbers);  
                                    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"129";" <identifier> expected
             double [] freqForScore = findFrequencies(numbers);  
                                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"130";" ']' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                     ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"130";" ';' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"130";" invalid method declaration; return type required
             freqMin[i] = scoreFrequencies((freqForScore),
                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"130";" illegal start of type
             freqMin[i] = scoreFrequencies((freqForScore),
                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"130";" ')' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"130";" ';' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                                                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"130";" illegal start of type
             freqMin[i] = scoreFrequencies((freqForScore),
                                                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"131";" <identifier> expected
             getDictionaryFrequencies(english));  
                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"131";" ';' expected
             getDictionaryFrequencies(english));  
                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" illegal start of type
         for (i = 0; i < freqMin.length; i++;) {
         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" <identifier> expected
         for (i = 0; i < freqMin.length; i++;) {
               ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" ';' expected
         for (i = 0; i < freqMin.length; i++;) {
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" > expected
         for (i = 0; i < freqMin.length; i++;) {
                                       ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" ';' expected
         for (i = 0; i < freqMin.length; i++;) {
                                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" illegal start of type
         for (i = 0; i < freqMin.length; i++;) {
                                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" <identifier> expected
         for (i = 0; i < freqMin.length; i++;) {
                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"135";" ';' expected
         for (i = 0; i < freqMin.length; i++;) {
                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"143";" illegal start of type
        return decrypt(cipher, index);
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"143";" ';' expected
        return decrypt(cipher, index);
              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"143";" illegal start of type
        return decrypt(cipher, index);
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"143";" ';' expected
        return decrypt(cipher, index);
                                    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"146";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"148";" class, interface, or enum expected
        String file = args[1];
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"149";" class, interface, or enum expected
        In stream = new In(args[1]);
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"150";" class, interface, or enum expected
        String message = stream.readAll();
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"151";" class, interface, or enum expected
        if (rule.equals ('crack')) {
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"153";" class, interface, or enum expected
            String product = crack(message, english);
            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_36_33.586Z";"hw3.java";"154";" class, interface, or enum expected
        }
        ^
57 errors
"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" illegal start of type
         for (int i = 0; i < keys.length; i++) {
         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" ')' expected
         for (int i = 0; i < keys.length; i++) {
                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" illegal start of type
         for (int i = 0; i < keys.length; i++) {
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" <identifier> expected
         for (int i = 0; i < keys.length; i++) {
                       ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" ';' expected
         for (int i = 0; i < keys.length; i++) {
                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" > expected
         for (int i = 0; i < keys.length; i++) {
                                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" '(' expected
         for (int i = 0; i < keys.length; i++) {
                                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" <identifier> expected
         for (int i = 0; i < keys.length; i++) {
                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" illegal start of type
         for (int i = 0; i < keys.length; i++) {
                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" <identifier> expected
         for (int i = 0; i < keys.length; i++) {
                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"127";" ';' expected
         for (int i = 0; i < keys.length; i++) {
                                                ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" illegal start of type
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" <identifier> expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" ';' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                   ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" illegal start of type
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" ';' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" invalid method declaration; return type required
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" ']' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" ')' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" illegal start of type
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" <identifier> expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"128";" ';' expected
             int [] numbers[i] = stringToSymbolArray(keys[i]);
                                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"129";" illegal start of type
             double [] freqForScore = findFrequencies(numbers);  
                    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"129";" <identifier> expected
             double [] freqForScore = findFrequencies(numbers);  
                     ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"129";" ';' expected
             double [] freqForScore = findFrequencies(numbers);  
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"129";" illegal start of type
             double [] freqForScore = findFrequencies(numbers);  
                                    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"129";" <identifier> expected
             double [] freqForScore = findFrequencies(numbers);  
                                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"130";" ']' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                     ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"130";" ';' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"130";" invalid method declaration; return type required
             freqMin[i] = scoreFrequencies((freqForScore),
                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"130";" illegal start of type
             freqMin[i] = scoreFrequencies((freqForScore),
                                           ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"130";" ')' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"130";" ';' expected
             freqMin[i] = scoreFrequencies((freqForScore),
                                                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"130";" illegal start of type
             freqMin[i] = scoreFrequencies((freqForScore),
                                                         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"131";" <identifier> expected
             getDictionaryFrequencies(english));  
                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"131";" ';' expected
             getDictionaryFrequencies(english));  
                                              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" illegal start of type
         for (i = 0; i < freqMin.length; i++;) {
         ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" <identifier> expected
         for (i = 0; i < freqMin.length; i++;) {
               ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" ';' expected
         for (i = 0; i < freqMin.length; i++;) {
                 ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" > expected
         for (i = 0; i < freqMin.length; i++;) {
                                       ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" ';' expected
         for (i = 0; i < freqMin.length; i++;) {
                                        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" illegal start of type
         for (i = 0; i < freqMin.length; i++;) {
                                          ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" <identifier> expected
         for (i = 0; i < freqMin.length; i++;) {
                                            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"135";" ';' expected
         for (i = 0; i < freqMin.length; i++;) {
                                             ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"143";" illegal start of type
        return decrypt(cipher, index);
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"143";" ';' expected
        return decrypt(cipher, index);
              ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"143";" illegal start of type
        return decrypt(cipher, index);
                      ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"143";" ';' expected
        return decrypt(cipher, index);
                                    ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"146";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"148";" class, interface, or enum expected
        String file = args[1];
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"149";" class, interface, or enum expected
        In stream = new In(args[1]);
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"150";" class, interface, or enum expected
        String message = stream.readAll();
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"151";" class, interface, or enum expected
        if (rule.equals ('crack')) {
        ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"153";" class, interface, or enum expected
            String product = crack(message, english);
            ^
/"
"1390c5e2235f7bf89d0e6af7570654c3fa81a50e";"2020-10-09T20_53_11.872Z";"hw3.java";"154";" class, interface, or enum expected
        }
        ^
55 errors
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-02T23_46_49.716Z";"hw3.java";"17";" cannot find symbol
            for(int j = 0; j < args.length(); j++){
                                   ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-02T23_46_49.716Z";"hw3.java";"20";" bad operand types for binary operator '-'
                sRep = 90 - letter; //assign each letter a number 0-25 (A is 0)
                          ^
  first type"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-03T00_20_04.624Z";"hw3.java";"17";" cannot find symbol
            for(int j = 0; j < args.length(); j++){ //trying to split up the read string into characters
                                   ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-03T00_20_04.624Z";"hw3.java";"20";" bad operand types for binary operator '-'
                sRep = 90 - letter; //assign each letter a number 0-25 (A is 0)
                          ^
  first type"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-03T23_19_13.562Z";"hw3.java";"27";" cannot find symbol
        int[] numArg = new int[str.length];
                                  ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-03T23_19_13.562Z";"hw3.java";"29";" cannot find symbol
        for(int i = 0; i < str.length; i++){ 
                              ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-03T23_19_13.562Z";"hw3.java";"30";" cannot find symbol
            String word = args[i];
                          ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-04T15_18_24.539Z";"hw3.java";"27";" cannot find symbol
        int[] numArg = new int[str.length];
                                  ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-04T15_18_24.539Z";"hw3.java";"29";" cannot find symbol
        for(int i = 0; i < str.length; i++){ 
                              ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-04T15_18_24.539Z";"hw3.java";"30";" array required, but String found
            String word = str[i];
                             ^
3 errors
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-04T15_53_30.270Z";"hw3.java";"13";" '.class' expected
        int[] argSymbol = stringToSymbolArray(args[]);
                                                    ^
1 error
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T00_31_22.295Z";"hw3.java";"144";" ';' expected
        for(int i = 0; i < filename.length, i++){
                                          ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T00_31_22.295Z";"hw3.java";"144";" ')' expected
        for(int i = 0; i < filename.length, i++){
                                           ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T00_31_22.295Z";"hw3.java";"144";" illegal start of expression
        for(int i = 0; i < filename.length, i++){
                                               ^
3 errors
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T00_57_29.257Z";"hw3.java";"144";" ';' expected
        for(int i = 0; i < filename.length(), i++){
                                            ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T00_57_29.257Z";"hw3.java";"144";" ')' expected
        for(int i = 0; i < filename.length(), i++){
                                             ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T00_57_29.257Z";"hw3.java";"144";" illegal start of expression
        for(int i = 0; i < filename.length(), i++){
                                                 ^
3 errors
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T23_16_55.674Z";"hw3.java";"144";" ';' expected
        for(int i = 0; i < filename.length(), i++){
                                            ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T23_16_55.674Z";"hw3.java";"144";" ')' expected
        for(int i = 0; i < filename.length(), i++){
                                             ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-05T23_16_55.674Z";"hw3.java";"144";" illegal start of expression
        for(int i = 0; i < filename.length(), i++){
                                                 ^
3 errors
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-06T00_51_32.664Z";"hw3.java";"145";" cannot find symbol
            letterFreq[i] = inStream.readDouble();
                            ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-06T02_25_37.387Z";"hw3.java";"144";" cannot find symbol
            letterFreq[i] = inStream.readDouble();
                            ^
  symbol"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-06T03_47_18.190Z";"hw3.java";"211";" illegal start of expression
            }
            ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-06T03_47_18.190Z";"hw3.java";"216";" reached end of file while parsing
}
 ^
2 errors
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-07T02_03_59.722Z";"hw3.java";"192";" illegal start of expression
            }
            ^
/"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-07T02_03_59.722Z";"hw3.java";"197";" reached end of file while parsing
}
 ^
2 errors
"
"139c29eaf2bf6ea4e53e4a9f895ad1199b063548";"2020-10-07T02_43_10.212Z";"hw3.java";"128";" cannot find symbol
            letterFreq[i] = inStream.readDouble();     //ERROR GET HELP OH
                            ^
  symbol"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-05T22_27_33.440Z";"hw3.java";"42";" cannot find symbol
            symbols.charAt(i) = symbols[i] + 65;
                   ^
  symbol"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-05T22_27_33.440Z";"hw3.java";"43";" cannot find symbol
            String letter = symbols.charAt(i);
                                   ^
  symbol"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-07T01_50_26.028Z";"hw3.java";"93";" incompatible types"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-07T01_50_26.028Z";"hw3.java";"95";" incompatible types"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-07T12_08_45.740Z";"hw3.java";"91";" cannot find symbol
        for (int i = 0; symbolArray.length; i++) {
                        ^
  symbol"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-07T12_08_45.740Z";"hw3.java";"92";" cannot find symbol
        shift(symbolArray[i], key);
              ^
  symbol"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-07T12_08_45.740Z";"hw3.java";"93";" cannot find symbol
        symbolArrayToString(symbolArray[i]);
                            ^
  symbol"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T22_43_42.989Z";"hw3.java";"183";" illegal start of type
    public static String crack(int shift,     )
                                              ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T22_43_42.989Z";"hw3.java";"183";" ')' expected
    public static String crack(int shift,     )
                                               ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T22_43_42.989Z";"hw3.java";"185";" ';' expected
    public static void main(String[] args) {
          ^
3 errors
"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T22_57_01.751Z";"hw3.java";"183";" cannot find symbol
    public static String crack(string message) {
                               ^
  symbol"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"186";" '.class' expected
        if (int i = 0; i < 25; i++) {
                ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"186";" illegal start of expression
        if (int i = 0; i < 25; i++) {
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"186";" ';' expected
        if (int i = 0; i < 25; i++) {
                   ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"186";" illegal start of type
        if (int i = 0; i < 25; i++) {
                           ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"186";" not a statement
        if (int i = 0; i < 25; i++) {
                         ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"186";" ';' expected
        if (int i = 0; i < 25; i++) {
                                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"187";" '.class' expected
            if (int j = 0; j < 25)
                    ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"187";" illegal start of expression
            if (int j = 0; j < 25)
                      ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"187";" ';' expected
            if (int j = 0; j < 25)
                       ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"187";" illegal start of type
            if (int j = 0; j < 25)
                               ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"187";" not a statement
            if (int j = 0; j < 25)
                             ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"187";" ';' expected
            if (int j = 0; j < 25)
                                 ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"192";" invalid method declaration; return type required
        findFrequencies()
        ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"192";" ';' expected
        findFrequencies()
                         ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"196";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"211";" class, interface, or enum expected
        int[] symbols = new int[8];
        ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_34_09.158Z";"hw3.java";"213";" class, interface, or enum expected
    }
    ^
17 errors
"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"186";" '.class' expected
        if (int i = 0; i < 25; i++) {
                ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"186";" illegal start of expression
        if (int i = 0; i < 25; i++) {
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"186";" ';' expected
        if (int i = 0; i < 25; i++) {
                   ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"186";" illegal start of type
        if (int i = 0; i < 25; i++) {
                           ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"186";" not a statement
        if (int i = 0; i < 25; i++) {
                         ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"186";" ';' expected
        if (int i = 0; i < 25; i++) {
                                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"187";" '.class' expected
            if (int j = 0; j < 25; j++)
                    ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"187";" illegal start of expression
            if (int j = 0; j < 25; j++)
                      ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"187";" ';' expected
            if (int j = 0; j < 25; j++)
                       ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"187";" illegal start of type
            if (int j = 0; j < 25; j++)
                               ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"187";" not a statement
            if (int j = 0; j < 25; j++)
                             ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"187";" ';' expected
            if (int j = 0; j < 25; j++)
                                      ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"195";" illegal start of type
        while (low <= high){
        ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"195";" <identifier> expected
        while (low <= high){
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"195";" ';' expected
        while (low <= high){
                     ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"195";" illegal start of type
        while (low <= high){
                          ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"195";" <identifier> expected
        while (low <= high){
                           ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"195";" ';' expected
        while (low <= high){
                            ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"197";" <identifier> expected
          int mid = (low + high) / 2;
                 ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"198";" illegal start of type
          if (k == A[mid]) { // we found the element
          ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"198";" <identifier> expected
          if (k == A[mid]) { // we found the element
               ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"198";" ';' expected
          if (k == A[mid]) { // we found the element
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"198";" illegal start of type
          if (k == A[mid]) { // we found the element
                    ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"198";" ';' expected
          if (k == A[mid]) { // we found the element
                        ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"201";" illegal start of type
          else if (k > A[mid]) { // k greater than the mid element
          ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"201";" ';' expected
          else if (k > A[mid]) { // k greater than the mid element
              ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"201";" illegal start of type
          else if (k > A[mid]) { // k greater than the mid element
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"201";" ';' expected
          else if (k > A[mid]) { // k greater than the mid element
                    ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"201";" ']' expected
          else if (k > A[mid]) { // k greater than the mid element
                         ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"201";" ';' expected
          else if (k > A[mid]) { // k greater than the mid element
                            ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"204";" illegal start of type
          else {
          ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"204";" ';' expected
          else {
              ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"205";" <identifier> expected
              high = mid - 1;
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"207";" class, interface, or enum expected
        }
        ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"210";" class, interface, or enum expected
        }   
        ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"213";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"228";" class, interface, or enum expected
        int[] symbols = new int[8];
        ^
/"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-08T23_52_16.440Z";"hw3.java";"230";" class, interface, or enum expected
    }
    ^
38 errors
"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-09T02_08_09.135Z";"hw3.java";"193";" ';' expected
             scoreFrequencies(english, frequencies)
                                                   ^
1 error
"
"15b943b08735673bf26c83a3211e0dcdbe4014e0";"2020-10-09T18_22_38.322Z";"hw3.java";"194";" cannot find symbol
             scoreFrequencies(english, frequencies);
                              ^
  symbol"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-06T17_38_25.891Z";"hw3.java";"106";" cannot find symbol
            intArr[i] = stringToSymbolArray(inputOne);
                   ^
  symbol"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-06T17_38_25.891Z";"hw3.java";"106";" incompatible types"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-08T14_55_19.152Z";"hw3.java";"105";" incompatible types"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-08T14_55_19.152Z";"hw3.java";"105";" incompatible types"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-08T14_55_19.152Z";"hw3.java";"105";" incompatible types"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-08T14_55_19.152Z";"hw3.java";"105";" incompatible types"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-08T14_55_19.152Z";"hw3.java";"105";" incompatible types"
"15c790d885b3c3fbf73e766b09fe14cb31b34d63";"2020-10-08T14_55_19.152Z";"hw3.java";"105";" incompatible types"
"1617cb7fffc171ccfb7a8a377fb8ed9188bebe0d";"2020-10-05T18_12_06.697Z";"hw3.java";"223";" ';' expected
            unshift()
                     ^
1 error
"
"1617cb7fffc171ccfb7a8a377fb8ed9188bebe0d";"2020-10-06T10_27_50.536Z";"hw3.java";"228";" ';' expected
            unshift()
                     ^
1 error
"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-02T21_43_09.624Z";"hw3.java";"28";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-02T21_43_09.624Z";"hw3.java";"41";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-05T15_05_34.200Z";"hw3.java";"47";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-05T15_05_34.200Z";"hw3.java";"50";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T01_54_33.033Z";"hw3.java";"69";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T15_35_22.130Z";"hw3.java";"69";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T17_05_07.588Z";"hw3.java";"69";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T17_05_07.588Z";"hw3.java";"72";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T17_29_09.888Z";"hw3.java";"71";" variable i is already defined in method shift(int,int)
        for (char i = 'A'; i <= 'Z'; i++) {
                  ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T17_29_09.888Z";"hw3.java";"74";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T18_27_42.268Z";"hw3.java";"70";" variable i is already defined in method shift(int,int)
        for (char i = 'A'; i <= 'Z'; i++) {
                  ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T18_27_42.268Z";"hw3.java";"73";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T19_14_22.106Z";"hw3.java";"92";" cannot find symbol
        for (j = 0; i <= 25; i++) {
                    ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T19_14_22.106Z";"hw3.java";"92";" cannot find symbol
        for (j = 0; i <= 25; i++) {
                             ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T21_18_44.077Z";"hw3.java";"154";" illegal start of expression
        System.out.println(encrypt(inputString, ));
                                                ^
1 error
"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-06T22_23_19.390Z";"hw3.java";"76";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T03_15_16.206Z";"hw3.java";"149";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T03_28_35.749Z";"hw3.java";"149";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T03_45_46.270Z";"hw3.java";"149";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T13_25_30.758Z";"hw3.java";"166";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T13_25_30.758Z";"hw3.java";"167";" cannot find symbol
        int[] cipherText = new int[filename.length()];
                                   ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T13_25_30.758Z";"hw3.java";"170";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T14_07_01.140Z";"hw3.java";"169";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T15_26_50.159Z";"hw3.java";"166";" ';' expected
        In inStream
                   ^
1 error
"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T20_26_31.324Z";"hw3.java";"170";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T21_44_51.355Z";"hw3.java";"167";" variable filename might not have been initialized
        In inStream = new In(filename);
                             ^
1 error
"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T22_16_24.647Z";"hw3.java";"171";" illegal start of expression
            char letter = .charAt(i);
                          ^
1 error
"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T22_51_27.973Z";"hw3.java";"173";" cannot find symbol
            char letter = letters.charAt(i)[i];
                                 ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-07T22_51_27.973Z";"hw3.java";"181";" bad operand types for binary operator '/'
        letterFreq = letterFreq / sum;
                                ^
  first type"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-08T01_45_43.873Z";"hw3.java";"174";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-08T22_33_59.274Z";"hw3.java";"218";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-08T23_54_52.512Z";"hw3.java";"222";" cannot find symbol
            decrypt(filename, mid);
                              ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-08T23_54_52.512Z";"hw3.java";"223";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-08T23_54_52.512Z";"hw3.java";"226";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T00_15_34.423Z";"hw3.java";"217";" '.class' expected
        double[] arr = findFrequencies(int[]);
                                            ^
1 error
"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T01_59_58.909Z";"hw3.java";"223";" array required, but String found
            decryption1[i] = findFreq;
                       ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T01_59_58.909Z";"hw3.java";"224";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T01_59_58.909Z";"hw3.java";"228";" array required, but String found
                decryption2[j] = findFreq;
                           ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T01_59_58.909Z";"hw3.java";"229";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T01_59_58.909Z";"hw3.java";"239";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T02_22_04.024Z";"hw3.java";"230";" array required, but String found
            decryption1[i] = findFreq;
                       ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T02_22_04.024Z";"hw3.java";"231";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T02_22_04.024Z";"hw3.java";"235";" array required, but String found
                decryption2[j] = findFreq;
                           ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T02_22_04.024Z";"hw3.java";"236";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T02_22_04.024Z";"hw3.java";"246";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T03_17_03.135Z";"hw3.java";"231";" array required, but String found
            decryption1[i] = findFreq;
                       ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T03_17_03.135Z";"hw3.java";"232";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T03_17_03.135Z";"hw3.java";"236";" array required, but String found
                decryption2[j] = findFreq;
                           ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T03_17_03.135Z";"hw3.java";"237";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T03_17_03.135Z";"hw3.java";"247";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T04_06_42.105Z";"hw3.java";"231";" array required, but String found
            decryption1[i] = findFreq;
                       ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T04_06_42.105Z";"hw3.java";"232";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T04_06_42.105Z";"hw3.java";"236";" array required, but String found
                decryption2[j] = findFreq;
                           ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T04_06_42.105Z";"hw3.java";"237";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T04_06_42.105Z";"hw3.java";"247";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T15_54_29.202Z";"hw3.java";"231";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T15_54_29.202Z";"hw3.java";"232";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T15_54_29.202Z";"hw3.java";"236";" array required, but String found
                decryption2[j] = findFreq;
                           ^
/"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T15_54_29.202Z";"hw3.java";"237";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T15_54_29.202Z";"hw3.java";"247";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T16_14_12.125Z";"hw3.java";"231";" cannot find symbol
            decryption1 = findFreq1;
                          ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T16_14_12.125Z";"hw3.java";"232";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T16_14_12.125Z";"hw3.java";"236";" cannot find symbol
                decryption2 = findFreq2;
                              ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T16_14_12.125Z";"hw3.java";"237";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T16_14_12.125Z";"hw3.java";"247";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"231";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"232";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"236";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"237";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"247";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"256";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"266";" cannot find symbol
                String encrypted = encrypt(text, symbolValue);
                                                 ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T20_24_47.663Z";"hw3.java";"270";" cannot find symbol
                String decrypted = decrypt(text, symbolValue);
                                                 ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"231";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"232";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"236";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"237";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"247";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"256";" incompatible types"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"266";" cannot find symbol
                String encrypted = encrypt(text, symbolValue);
                                                 ^
  symbol"
"1655907b46332e9bf59fd3792dffea88f661da4d";"2020-10-09T22_00_37.467Z";"hw3.java";"270";" cannot find symbol
                String decrypted = decrypt(text, symbolValue);
                                                 ^
  symbol"
"1697b3ab314a9d0523a560fb62094ecc8b34c55f";"2020-10-07T20_09_28.013Z";"hw3.java";"154";" ']' expected
            double[i] frequencies = inStream.readDouble();
                   ^
/"
"1697b3ab314a9d0523a560fb62094ecc8b34c55f";"2020-10-07T20_09_28.013Z";"hw3.java";"154";" ';' expected
            double[i] frequencies = inStream.readDouble();
                    ^
2 errors
"
"1697b3ab314a9d0523a560fb62094ecc8b34c55f";"2020-10-08T04_34_45.377Z";"hw3.java";"154";" ']' expected
            double[i] frequencies = inStream.readDouble();
                   ^
/"
"1697b3ab314a9d0523a560fb62094ecc8b34c55f";"2020-10-08T04_34_45.377Z";"hw3.java";"154";" ';' expected
            double[i] frequencies = inStream.readDouble();
                    ^
/"
"1697b3ab314a9d0523a560fb62094ecc8b34c55f";"2020-10-08T04_34_45.377Z";"hw3.java";"168";" ';' expected
                    int letterCount++;
                                   ^
/"
"1697b3ab314a9d0523a560fb62094ecc8b34c55f";"2020-10-08T04_34_45.377Z";"hw3.java";"173";" illegal start of expression
        return null;
        ^
/"
"1697b3ab314a9d0523a560fb62094ecc8b34c55f";"2020-10-08T04_34_45.377Z";"hw3.java";"173";" not a statement
        return null;
               ^
5 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T04_24_10.514Z";"hw3.java";"27";" ';' expected
        for (int i = 0; i < str.length(), i++) {
                                        ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T04_24_10.514Z";"hw3.java";"27";" ')' expected
        for (int i = 0; i < str.length(), i++) {
                                         ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T04_24_10.514Z";"hw3.java";"27";" illegal start of expression
        for (int i = 0; i < str.length(), i++) {
                                             ^
3 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T18_55_48.892Z";"hw3.java";"27";" ';' expected
        for (int i = 0; i < str.length(), i++) {
                                        ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T18_55_48.892Z";"hw3.java";"27";" ')' expected
        for (int i = 0; i < str.length(), i++) {
                                         ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T18_55_48.892Z";"hw3.java";"27";" illegal start of expression
        for (int i = 0; i < str.length(), i++) {
                                             ^
3 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T20_43_39.505Z";"hw3.java";"26";" ';' expected
        for (int i = 0; i < str.length(), i++) {
                                        ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T20_43_39.505Z";"hw3.java";"26";" ')' expected
        for (int i = 0; i < str.length(), i++) {
                                         ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T20_43_39.505Z";"hw3.java";"26";" illegal start of expression
        for (int i = 0; i < str.length(), i++) {
                                             ^
3 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T21_06_48.532Z";"hw3.java";"26";" ';' expected
        for (int i = 0; i < str.length(), i++) {
                                        ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T21_06_48.532Z";"hw3.java";"26";" ')' expected
        for (int i = 0; i < str.length(), i++) {
                                         ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-06T21_06_48.532Z";"hw3.java";"26";" illegal start of expression
        for (int i = 0; i < str.length(), i++) {
                                             ^
3 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"145";" ';' expected
        double [] frequenciesCipher = new double[26]
                                                    ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"149";" illegal start of expression
        }
        ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"158";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"158";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"158";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"158";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"158";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"158";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"163";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"163";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"163";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"163";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"163";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T02_28_57.101Z";"hw3.java";"188";" reached end of file while parsing
}
 ^
14 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"145";" ';' expected
        double [] frequenciesCipher = new double[26]
                                                    ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"149";" illegal start of expression
        }
        ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"158";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"158";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"158";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"158";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"158";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"158";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" illegal start of expression
    public static String crack(String cipher, int ) {
    ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" illegal start of expression
    public static String crack(String cipher, int ) {
           ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" ';' expected
    public static String crack(String cipher, int ) {
                        ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" ')' expected
    public static String crack(String cipher, int ) {
                                     ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" illegal start of expression
    public static String crack(String cipher, int ) {
                                            ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" ';' expected
    public static String crack(String cipher, int ) {
                                             ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" illegal start of expression
    public static String crack(String cipher, int ) {
                                                  ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T18_00_43.432Z";"hw3.java";"168";" ';' expected
    public static String crack(String cipher, int ) {
                                                   ^
16 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T19_50_10.900Z";"hw3.java";"145";" ';' expected
        double [] frequenciesCipher = new double[26]
                                                    ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T19_50_10.900Z";"hw3.java";"150";" not a statement
                frequenciesCipher[symbol[i]];  
                                 ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T19_50_10.900Z";"hw3.java";"154";" ';' expected
        for (i = 0; i < frequenciesCipher.length, i++) {
                                                ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T19_50_10.900Z";"hw3.java";"154";" ')' expected
        for (i = 0; i < frequenciesCipher.length, i++) {
                                                 ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T19_50_10.900Z";"hw3.java";"154";" illegal start of expression
        for (i = 0; i < frequenciesCipher.length, i++) {
                                                     ^
/"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T19_50_10.900Z";"hw3.java";"176";" <identifier> expected
    public static String crack(String cipher, int ) {
                                                 ^
6 errors
"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"134";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"134";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"134";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
                                                   ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"135";" cannot find symbol
            frequenciesEnglish[i] = inStream.readDouble();
                               ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"150";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"150";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"150";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"151";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"151";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                       ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"151";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                                  ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"151";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                                         ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"152";" cannot find symbol
               frequenciesCipher[symbol[i]] +=1 ;  
                                 ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"152";" cannot find symbol
               frequenciesCipher[symbol[i]] +=1 ;  
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"156";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"156";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"156";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
                                                  ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_10_12.243Z";"hw3.java";"157";" cannot find symbol
            frequenciesCipher[i] /= symbols.length;
                              ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"133";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"133";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"133";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
                                                   ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"134";" cannot find symbol
            frequenciesEnglish[i] = inStream.readDouble();
                               ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"149";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"149";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"149";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                       ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                                  ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                                         ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"151";" cannot find symbol
               frequenciesCipher[symbol[i]] +=1 ;  
                                 ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"151";" cannot find symbol
               frequenciesCipher[symbol[i]] +=1 ;  
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"155";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"155";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"155";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
                                                  ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"156";" cannot find symbol
            frequenciesCipher[i] /= symbols.length;
                              ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"170";" cannot find symbol
        for (i = 0; i < english.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"170";" cannot find symbol
        for (i = 0; i < english.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"170";" cannot find symbol
        for (i = 0; i < english.length; i++) {
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"171";" cannot find symbol
            frequencyDiff += Math.abs(frequenciesCipher[i] - frequenciesEnglish[i]);
                                      ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"171";" cannot find symbol
            frequencyDiff += Math.abs(frequenciesCipher[i] - frequenciesEnglish[i]);
                                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"171";" cannot find symbol
            frequencyDiff += Math.abs(frequenciesCipher[i] - frequenciesEnglish[i]);
                                                             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T20_52_31.469Z";"hw3.java";"171";" cannot find symbol
            frequencyDiff += Math.abs(frequenciesCipher[i] - frequenciesEnglish[i]);
                                                                                ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"133";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"133";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"133";" cannot find symbol
        for (i = 0; i < frequenciesEnglish.length; i++) {
                                                   ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"134";" cannot find symbol
            frequenciesEnglish[i] = inStream.readDouble();
                               ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"149";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"149";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"149";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                       ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                                  ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                                         ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"151";" cannot find symbol
               frequenciesCipher[symbol[i]] +=1 ;  
                                 ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"151";" cannot find symbol
               frequenciesCipher[symbol[i]] +=1 ;  
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"156";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"156";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"156";" cannot find symbol
        for (i = 0; i < frequenciesCipher.length; i++) {
                                                  ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"157";" cannot find symbol
            frequenciesCipher[i] /= symbols.length;
                              ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"171";" cannot find symbol
        for (i = 0; i < english.length; i++) {
             ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"171";" cannot find symbol
        for (i = 0; i < english.length; i++) {
                    ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"171";" cannot find symbol
        for (i = 0; i < english.length; i++) {
                                        ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"172";" cannot find symbol
            frequencyDiff += Math.abs(english[i] - currentFreqs[i]);
                                              ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T21_25_32.057Z";"hw3.java";"172";" cannot find symbol
            frequencyDiff += Math.abs(english[i] - currentFreqs[i]);
                                                                ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T22_13_13.292Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T22_13_13.292Z";"hw3.java";"150";" cannot find symbol
            if (symbol[i] < 26 && symbol[i] > 0) {
                                  ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T22_13_13.292Z";"hw3.java";"151";" cannot find symbol
               frequenciesCipher[symbol[i]] +=1 ;  
                                 ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T22_13_13.292Z";"hw3.java";"190";" incompatible types"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T22_13_13.292Z";"hw3.java";"193";" incompatible types"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T22_13_13.292Z";"hw3.java";"196";" cannot find symbol
            score[i] += scoreFrequencies(cipherFreq);
            ^
  symbol"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T22_13_13.292Z";"hw3.java";"196";" method scoreFrequencies in class Caesar cannot be applied to given types;
            score[i] += scoreFrequencies(cipherFreq);
                        ^
  required"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T23_04_47.576Z";"hw3.java";"190";" incompatible types"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T23_04_47.576Z";"hw3.java";"193";" incompatible types"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T23_04_47.576Z";"hw3.java";"196";" method scoreFrequencies in class Caesar cannot be applied to given types;
            scores[i] += scoreFrequencies(cipherFreq);
                         ^
  required"
"16d9298309705bb8ce82f1f11aa45a893548b88a";"2020-10-07T23_04_47.576Z";"hw3.java";"206";" cannot find symbol
        String crackedMessage = decrypt(cipher, i);
                                                ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-07T22_21_39.259Z";"hw3.java";"20";" cannot find symbol
        int[] stringToSymbolArray = new stringToSymbolArray[str];
                                        ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-07T22_21_39.259Z";"hw3.java";"20";" incompatible types"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T00_35_16.444Z";"hw3.java";"25";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T16_26_40.762Z";"hw3.java";"25";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T16_26_40.762Z";"hw3.java";"29";" cannot find symbol
            arr[i] = mySymbolRepresentation;
            ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T16_26_40.762Z";"hw3.java";"31";" cannot find symbol
        return arr;
               ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_05_43.158Z";"hw3.java";"25";" cannot find symbol
        int strLength = str.length;
                           ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_05_43.158Z";"hw3.java";"27";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_05_43.158Z";"hw3.java";"31";" cannot find symbol
            arr[i] = mySymbolRepresentation;
            ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_05_43.158Z";"hw3.java";"33";" cannot find symbol
        return arr;
               ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_05_43.158Z";"hw3.java";"54";" cannot find symbol
            g += letter;
            ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_05_43.158Z";"hw3.java";"56";" cannot find symbol
        return g;
               ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_43_16.690Z";"hw3.java";"29";" cannot find symbol
            arr[i] = mySymbolRepresentation;
            ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_43_16.690Z";"hw3.java";"31";" cannot find symbol
        return arr;
               ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T17_43_16.690Z";"hw3.java";"46";" cannot find symbol
        int symbolsLength = symbols.length();
                                   ^
  symbol"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T20_29_32.166Z";"hw3.java";"136";" empty character literal
            freq[i] = inStream.readDouble()''
                                           ^
/"
"16f05fc1b167b79d431c60e7690dbf8f42a6490b";"2020-10-08T20_29_32.166Z";"hw3.java";"136";" illegal line end in character literal
            freq[i] = inStream.readDouble()''
                                            ^
2 errors
"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T20_59_01.452Z";"hw3.java";"45";" not a statement
            string return = string[i]; 
            ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T20_59_01.452Z";"hw3.java";"45";" ';' expected
            string return = string[i]; 
                  ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T20_59_01.452Z";"hw3.java";"45";" illegal start of expression
            string return = string[i]; 
                          ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T20_59_01.452Z";"hw3.java";"112";" ';' expected
                for (int i = 0; i < str)
                                       ^
4 errors
"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T22_34_24.072Z";"hw3.java";"26";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T22_34_24.072Z";"hw3.java";"111";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T23_39_26.120Z";"hw3.java";"40";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T23_39_26.120Z";"hw3.java";"41";" cannot find symbol
            string = string + symbols.charAt(i);  
                                     ^
  symbol"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T23_39_26.120Z";"hw3.java";"118";" cannot find symbol
                     for (int i = 0; i < symbolToString.length; i++){
                                         ^
  symbol"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-03T23_39_26.120Z";"hw3.java";"121";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-04T02_40_53.893Z";"hw3.java";"110";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-04T19_54_19.974Z";"hw3.java";"42";" cannot find symbol
            stringResult = symbols.charAt(i);  
                                  ^
  symbol"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-04T19_54_19.974Z";"hw3.java";"124";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-04T23_44_45.077Z";"hw3.java";"131";" ';' expected
                 Sytem.out.println('Please, choose a number between 0 to 26')//pretty sure this is not correct 
                                                                             ^
1 error
"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T00_43_24.679Z";"hw3.java";"158";" '.class' expected
        int offset = (Integer.parseInt)(args[0]); //first let it stated how much it wants to be offset by 
            ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T00_43_24.679Z";"hw3.java";"158";" illegal start of expression
        int offset = (Integer.parseInt)(args[0]); //first let it stated how much it wants to be offset by 
                   ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T00_43_24.679Z";"hw3.java";"158";" ';' expected
        int offset = (Integer.parseInt)(args[0]); //first let it stated how much it wants to be offset by 
                    ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T00_43_24.679Z";"hw3.java";"158";" not a statement
        int offset = (Integer.parseInt)(args[0]); //first let it stated how much it wants to be offset by 
                             ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T00_43_24.679Z";"hw3.java";"158";" ';' expected
        int offset = (Integer.parseInt)(args[0]); //first let it stated how much it wants to be offset by 
                                      ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T00_43_24.679Z";"hw3.java";"158";" not a statement
        int offset = (Integer.parseInt)(args[0]); //first let it stated how much it wants to be offset by 
                                            ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T00_43_24.679Z";"hw3.java";"158";" ';' expected
        int offset = (Integer.parseInt)(args[0]); //first let it stated how much it wants to be offset by 
                                               ^
7 errors
"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T23_54_53.557Z";"hw3.java";"114";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T23_54_53.557Z";"hw3.java";"115";" cannot find symbol
        for (int i = 0; i <= message.length; i++){
                                    ^
  symbol"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T23_54_53.557Z";"hw3.java";"116";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-05T23_54_53.557Z";"hw3.java";"117";" incompatible types"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T20_04_37.774Z";"hw3.java";"183";" illegal start of type
        return letterFrequencies;
        ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T20_04_37.774Z";"hw3.java";"183";" ';' expected
        return letterFrequencies;
              ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T20_04_37.774Z";"hw3.java";"195";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T20_04_37.774Z";"hw3.java";"198";" class, interface, or enum expected
    }
    ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T20_04_37.774Z";"hw3.java";"200";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T20_04_37.774Z";"hw3.java";"203";" class, interface, or enum expected
        int[] result = new int[word.length()];
        ^
/"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T20_04_37.774Z";"hw3.java";"289";" class, interface, or enum expected
    }
    ^
7 errors
"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T21_48_38.931Z";"hw3.java";"214";" cannot find symbol
    public static smth crack(){
                  ^
  symbol"
"1933eef337e0dad01d6f7dadc966c42abda9d7a5";"2020-10-06T21_48_38.931Z";"hw3.java";"217";" cannot find symbol
        return smth ; 
               ^
  symbol"
"198314c2ae4294f0607d2c85c1e50817f69c6613";"2020-10-08T06_12_58.920Z";"hw3.java";"264";" not a statement
                find 
                ^
/"
"198314c2ae4294f0607d2c85c1e50817f69c6613";"2020-10-08T06_12_58.920Z";"hw3.java";"264";" ';' expected
                find 
                    ^
2 errors
"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"9";" '{' expected
public class Caesar int {
                   ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"9";" <identifier> expected
public class Caesar int {
                       ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"52";" illegal start of type
        if ((symbol =< 25) && (symbol >= 0)) {
                       ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"52";" illegal start of expression
        if ((symbol =< 25) && (symbol >= 0)) {
                         ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"52";" ')' expected
        if ((symbol =< 25) && (symbol >= 0)) {
                                            ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"72";" illegal start of type
        if ((symbol =< 25) && (symbol >= 0)) {
                       ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"72";" illegal start of expression
        if ((symbol =< 25) && (symbol >= 0)) {
                         ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T21_20_58.396Z";"hw3.java";"72";" ')' expected
        if ((symbol =< 25) && (symbol >= 0)) {
                                            ^
8 errors
"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"9";" '{' expected
public class Caesar int {
                   ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"9";" <identifier> expected
public class Caesar int {
                       ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"52";" illegal start of type
        if ((symbol =< 25) && (symbol >= 0)) {
                       ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"52";" illegal start of expression
        if ((symbol =< 25) && (symbol >= 0)) {
                         ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"52";" ')' expected
        if ((symbol =< 25) && (symbol >= 0)) {
                                            ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"72";" illegal start of type
        if ((symbol =< 25) && (symbol >= 0)) {
                       ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"72";" illegal start of expression
        if ((symbol =< 25) && (symbol >= 0)) {
                         ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T22_09_30.350Z";"hw3.java";"72";" ')' expected
        if ((symbol =< 25) && (symbol >= 0)) {
                                            ^
8 errors
"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T23_49_17.921Z";"hw3.java";"99";" incompatible types"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-08T23_49_17.921Z";"hw3.java";"115";" incompatible types"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-09T02_13_35.942Z";"hw3.java";"148";" ';' expected
        frequencies = stringToSymbolArray(filename)
                                                   ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-09T02_13_35.942Z";"hw3.java";"181";" array dimension missing
            stringToSymbolArray(filename);
            ^
/"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-09T02_13_35.942Z";"hw3.java";"181";" not a statement
            stringToSymbolArray(filename);
                               ^
3 errors
"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-09T19_34_36.170Z";"hw3.java";"191";" incompatible types"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-09T19_34_36.170Z";"hw3.java";"194";" incompatible types"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-09T19_34_36.170Z";"hw3.java";"199";" incompatible types"
"199166168078f1058210fb1ed2f424a0fd37b7cf";"2020-10-09T19_59_40.384Z";"hw3.java";"185";" ';' expected
                                                ('english.txt')), textFrequencies);
                                                                                 ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"22";" illegal start of expression
        for (int i; i < ) {
                        ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"22";" illegal start of expression
        for (int i; i < ) {
                          ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"22";" ')' expected
        for (int i; i < ) {
                           ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"24";" illegal start of statement
        }
        ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"27";" illegal start of type
        return null;
        ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"27";" ';' expected
        return null;
              ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"38";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"41";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"46";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"49";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"54";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"57";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"62";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"65";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"70";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"73";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"78";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"81";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"86";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"89";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"94";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"97";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T12_21_13.545Z";"hw3.java";"99";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
23 errors
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"26";" illegal start of type
        return null;
        ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"26";" ';' expected
        return null;
              ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"37";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"40";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"45";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"48";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"53";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"56";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"61";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"64";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"69";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"72";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"77";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"80";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"85";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"88";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"93";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_02_37.425Z";"hw3.java";"98";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
19 errors
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-06T21_41_15.037Z";"hw3.java";"23";" array dimension missing
        }
        ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-07T12_14_06.398Z";"hw3.java";"40";" array dimension missing
        int[] arr = new int[];
                             ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-07T12_42_19.551Z";"hw3.java";"40";" array dimension missing
        int[] arr = new int[];
                             ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-07T19_41_15.964Z";"hw3.java";"40";" array dimension missing
        int[] str = new int[];
                             ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-07T19_41_15.964Z";"hw3.java";"41";" illegal start of expression
        for (int i = 0; i < ; i++) {
                            ^
2 errors
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-07T20_18_23.300Z";"hw3.java";"40";" illegal start of expression
        for (int i = 0; i < ; i++) {
                            ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T00_03_26.289Z";"hw3.java";"41";" cannot find symbol
            char letter = str.charAt(i);
                          ^
  symbol"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T00_03_26.289Z";"hw3.java";"42";" cannot find symbol
            int ourSymbolRepresentation = symbol + 'A';
                                          ^
  symbol"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T00_03_26.289Z";"hw3.java";"45";" incompatible types"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T00_50_06.176Z";"hw3.java";"124";" unclosed comment
        /*int[] test = stringToSymbolArray('CONSUL');
        ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T00_50_06.176Z";"hw3.java";"137";" reached end of file while parsing
2 errors
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T11_10_25.069Z";"hw3.java";"58";" illegal start of expression
            if ()
                ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T11_10_25.069Z";"hw3.java";"59";" illegal start of statement
        }
        ^
2 errors
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T20_58_39.144Z";"hw3.java";"77";" not a statement
             + 26;
             ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T21_23_30.133Z";"hw3.java";"77";" not a statement
             symbol + 26;
                    ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-08T23_11_43.818Z";"hw3.java";"75";" cannot find symbol
            int unshift = (shift - offset) % 26;
                           ^
  symbol"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T02_37_00.598Z";"hw3.java";"89";" ';' expected
        for (int i = 0; i )
                         ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T12_49_55.684Z";"hw3.java";"89";" variable i might not have been initialized
        for (int i; i < key; i++) {
                    ^
1 error
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T16_44_40.701Z";"hw3.java";"89";" not a statement
        int[] = new int[message.length()];
           ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T16_44_40.701Z";"hw3.java";"89";" ';' expected
        int[] = new int[message.length()];
             ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T16_44_40.701Z";"hw3.java";"89";" ']' expected
        int[] = new int[message.length()];
                        ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T16_44_40.701Z";"hw3.java";"89";" ';' expected
        int[] = new int[message.length()];
                               ^
/"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T16_44_40.701Z";"hw3.java";"89";" ';' expected
        int[] = new int[message.length()];
                                        ^
5 errors
"
"19a941d7bba8f42a286f5249358a6e49d06101cc";"2020-10-09T19_11_25.919Z";"hw3.java";"175";" cannot find symbol
        inStream.readAll();
        ^
  symbol"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-04T04_28_50.219Z";"hw3.java";"39";" cannot find symbol
            symbols = symbols.toUpperCase();
                             ^
  symbol"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-04T04_28_50.219Z";"hw3.java";"40";" cannot find symbol
            arrayToString += symbols.charAt(i) + 'A';
                                    ^
  symbol"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-06T02_49_05.585Z";"hw3.java";"68";" ';' expected
        symbol = shift(symbol, offset)
                                      ^
1 error
"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-06T22_45_02.896Z";"hw3.java";"165";" incompatible types"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-06T22_45_02.896Z";"hw3.java";"168";" cannot find symbol
            case encrypt"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-06T22_45_02.896Z";"hw3.java";"171";" cannot find symbol
            case decrypt"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-06T22_45_02.896Z";"hw3.java";"174";" cannot find symbol
            case crack"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-07T03_57_40.334Z";"hw3.java";"231";" class, interface, or enum expected
}
^
1 error
"
"1a676b4c17bf88842f0bb342f6a115f5bf3abba9";"2020-10-07T04_32_05.943Z";"hw3.java";"188";" ';' expected
        return ''
                 ^
1 error
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-06T23_45_26.899Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-06T23_45_26.899Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-06T23_45_26.899Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-06T23_45_26.899Z";"hw3.java";"24";" cannot find symbol
            character[i] = (int) str.charAt(i);
                      ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-06T23_45_26.899Z";"hw3.java";"24";" cannot find symbol
            character[i] = (int) str.charAt(i);
                                            ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-06T23_45_26.899Z";"hw3.java";"25";" cannot find symbol
            System.out.println(character[i]);
                                         ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-06T23_45_26.899Z";"hw3.java";"104";" cannot find symbol
        String str = inStream.readstr();
                             ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"24";" cannot find symbol
            symbols[i] = (int) str.charAt(i);
                    ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"24";" cannot find symbol
            symbols[i] = (int) str.charAt(i);
                                          ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"25";" cannot find symbol
            System.out.println(symbols[i]);
                                       ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"40";" cannot find symbol
        String[] character = new String [symbols.length()];
                                                ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
             ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                    ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                               ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                                          ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"42";" cannot find symbol
            letter[i] = (String) symbols.charAt(i);
            ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"42";" cannot find symbol
            letter[i] = (String) symbols.charAt(i);
                   ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"42";" cannot find symbol
            letter[i] = (String) symbols.charAt(i);
                                                ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"43";" cannot find symbol
            System.out.println(character[i]);
                                         ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"46";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_04_31.123Z";"hw3.java";"108";" cannot find symbol
        String str = inStream.readstr();
                             ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_49_15.235Z";"hw3.java";"54";" '[' expected
        int symbol = new int();
                            ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_49_15.235Z";"hw3.java";"54";" -> expected
        int symbol = new int();
                              ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_49_15.235Z";"hw3.java";"54";" ']' expected
        int symbol = new int();
                               ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_49_15.235Z";"hw3.java";"55";" ';' expected
        for (i = 0; i < symbols[].length; i++) {
           ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_49_15.235Z";"hw3.java";"55";" > expected
        for (i = 0; i < symbols[].length; i++) {
                                        ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_49_15.235Z";"hw3.java";"55";" not a statement
        for (i = 0; i < symbols[].length; i++) {
                      ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T01_49_15.235Z";"hw3.java";"55";" ';' expected
        for (i = 0; i < symbols[].length; i++) {
                                             ^
7 errors
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T22_36_34.768Z";"hw3.java";"103";" method shift in class Caesar cannot be applied to given types;
        symbolArrayToString(shift(nowArray));
                            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T22_36_34.768Z";"hw3.java";"113";" method unshift in class Caesar cannot be applied to given types;
        symbolArrayToString(unshift(decryptArray));
                            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T22_48_07.942Z";"hw3.java";"123";" illegal start of expression
        return null;
        ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-07T22_48_07.942Z";"hw3.java";"123";" not a statement
        return null;
               ^
2 errors
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T01_47_39.202Z";"hw3.java";"82";" method shift in class Caesar cannot be applied to given types;
        return symbolArrayToString(shift(stringToSymbolArray(message)), offset);
                                   ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T01_47_39.202Z";"hw3.java";"82";" cannot find symbol
        return symbolArrayToString(shift(stringToSymbolArray(message)), offset);
                                                                        ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T01_47_39.202Z";"hw3.java";"91";" method unshift in class Caesar cannot be applied to given types;
        return symbolArrayToString(unshift(stringToSymbolArray(cipher)), offset);
                                   ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T01_47_39.202Z";"hw3.java";"91";" cannot find symbol
        return symbolArrayToString(unshift(stringToSymbolArray(cipher)), offset);
                                                                         ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T12_48_38.273Z";"hw3.java";"107";" ';' expected
        double[] letterFrequency = new double[frequencies]
                                                          ^
1 error
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T13_36_23.043Z";"hw3.java";"101";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T15_25_38.736Z";"hw3.java";"102";" '.class' expected
        double[] letterFrequency = new double[frequencies];
                 ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T15_25_38.736Z";"hw3.java";"102";" illegal start of expression
        double[] letterFrequency = new double[frequencies];
                                 ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T15_25_38.736Z";"hw3.java";"102";" ';' expected
        double[] letterFrequency = new double[frequencies];
                                  ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T15_25_38.736Z";"hw3.java";"102";" ']' expected
        double[] letterFrequency = new double[frequencies];
                                              ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T15_25_38.736Z";"hw3.java";"102";" ';' expected
        double[] letterFrequency = new double[frequencies];
                                                         ^
5 errors
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T18_23_06.682Z";"hw3.java";"102";" '.class' expected
        double[] letterFrequency = new double[frequencies];
                 ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T18_23_06.682Z";"hw3.java";"102";" illegal start of expression
        double[] letterFrequency = new double[frequencies];
                                 ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T18_23_06.682Z";"hw3.java";"102";" ';' expected
        double[] letterFrequency = new double[frequencies];
                                  ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T18_23_06.682Z";"hw3.java";"102";" ']' expected
        double[] letterFrequency = new double[frequencies];
                                              ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T18_23_06.682Z";"hw3.java";"102";" ';' expected
        double[] letterFrequency = new double[frequencies];
                                                         ^
5 errors
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T20_46_45.106Z";"hw3.java";"125";" ']' expected
            double[i]scoring = Math.abs(currentFreqs[i]) - Math.abs(english[i]);
                   ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T20_46_45.106Z";"hw3.java";"125";" ';' expected
            double[i]scoring = Math.abs(currentFreqs[i]) - Math.abs(english[i]);
                    ^
2 errors
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T22_29_30.833Z";"hw3.java";"141";" ']' expected
            double[i]scoring = Math.abs(currentFreqs[i]) - Math.abs(english[i]);
                   ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T22_29_30.833Z";"hw3.java";"141";" ';' expected
            double[i]scoring = Math.abs(currentFreqs[i]) - Math.abs(english[i]);
                    ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T22_29_30.833Z";"hw3.java";"150";" illegal start of type
    **/
    ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T22_29_30.833Z";"hw3.java";"150";" ';' expected
    **/
     ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T22_29_30.833Z";"hw3.java";"150";" illegal start of type
    **/
      ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T22_29_30.833Z";"hw3.java";"150";" <identifier> expected
    **/
       ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T22_29_30.833Z";"hw3.java";"153";" ';' expected
    public static void main(String[] args) {
          ^
7 errors
"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T23_38_33.692Z";"hw3.java";"142";" cannot find symbol
            scoring = (Math.abs(findFrequencies[i]) - Math.abs(getDictionaryFrequencies[i]));
                                ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T23_38_33.692Z";"hw3.java";"142";" cannot find symbol
            scoring = (Math.abs(findFrequencies[i]) - Math.abs(getDictionaryFrequencies[i]));
                                                               ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-08T23_38_33.692Z";"hw3.java";"144";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T01_44_08.272Z";"hw3.java";"139";" cannot find symbol
        return key;
               ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T02_13_05.187Z";"hw3.java";"138";" cannot find symbol
        for (int i = 0; i < cipher.length; i++) {
                                  ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T02_13_05.187Z";"hw3.java";"140";" cannot find symbol
            String decryptedTrial = decrypt(cipher, stringToSymbolArray[i]);
                                                    ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T02_13_05.187Z";"hw3.java";"142";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T02_27_01.530Z";"hw3.java";"138";" cannot find symbol
        for (int i = 0; i < cipher.length; i++) {
                                  ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T02_27_01.530Z";"hw3.java";"140";" cannot find symbol
            String decryptedTrial = decrypt(cipher, stringToSymbolArray[i]);
                                                    ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T02_27_01.530Z";"hw3.java";"142";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T16_43_20.488Z";"hw3.java";"148";" array required, but double found
                if (potentialKey[j] < potentialKey) {
                                ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T16_43_20.488Z";"hw3.java";"152";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T16_43_20.488Z";"hw3.java";"154";" cannot find symbol
        return key;
               ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T16_43_20.488Z";"hw3.java";"162";" method encrypt in class Caesar cannot be applied to given types;
            encrypt(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T16_43_20.488Z";"hw3.java";"165";" method decrypt in class Caesar cannot be applied to given types;
            decrypt(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T16_43_20.488Z";"hw3.java";"168";" method crack in class Caesar cannot be applied to given types;
            crack(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_22_37.301Z";"hw3.java";"149";" cannot find symbol
        for (int i = 0; i < newFrequencies.length(); i++) {
                                          ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_22_37.301Z";"hw3.java";"158";" array required, but double found
                if (potentialKey[j] < potentialKey) {
                                ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_22_37.301Z";"hw3.java";"162";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_22_37.301Z";"hw3.java";"164";" cannot find symbol
        return key;
               ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_22_37.301Z";"hw3.java";"172";" method encrypt in class Caesar cannot be applied to given types;
            encrypt(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_22_37.301Z";"hw3.java";"175";" method decrypt in class Caesar cannot be applied to given types;
            decrypt(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_22_37.301Z";"hw3.java";"178";" method crack in class Caesar cannot be applied to given types;
            crack(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_39_30.152Z";"hw3.java";"149";" cannot find symbol
        for (int i = 0; i < newFrequencies.length(); i++) {
                                          ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_39_30.152Z";"hw3.java";"160";" array required, but double found
                if (potentialKey[j] < potentialKey) {
                                ^
/"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_39_30.152Z";"hw3.java";"164";" incompatible types"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_39_30.152Z";"hw3.java";"166";" cannot find symbol
        return key;
               ^
  symbol"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_39_30.152Z";"hw3.java";"174";" method encrypt in class Caesar cannot be applied to given types;
            encrypt(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_39_30.152Z";"hw3.java";"177";" method decrypt in class Caesar cannot be applied to given types;
            decrypt(args[1]);
            ^
  required"
"1ad9edc00d9ebb99dd584bc7702d51428456e6db";"2020-10-09T17_39_30.152Z";"hw3.java";"180";" method crack in class Caesar cannot be applied to given types;
            crack(args[1]);
            ^
  required"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-04T03_21_30.113Z";"hw3.java";"45";" incompatible types"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-06T02_00_10.242Z";"hw3.java";"185";" method findFrequencies in class Caesar cannot be applied to given types;
            freqScores[i] = findFrequencies(english, currentFreqs);
                            ^
  required"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-06T02_00_10.242Z";"hw3.java";"189";" incompatible types"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-06T02_00_10.242Z";"hw3.java";"193";" incompatible types"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-06T03_40_08.481Z";"hw3.java";"185";" method findFrequencies in class Caesar cannot be applied to given types;
            freqScores[i] = findFrequencies(english, currentFreqs);
                            ^
  required"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-08T01_41_00.657Z";"hw3.java";"251";" unclosed string literal
        String message = 'No one is so brave that he is not disturbed by something 
                         ^
/"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-08T01_41_00.657Z";"hw3.java";"252";" unclosed string literal
            unexpected'; 
                      ^
/"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-08T01_41_00.657Z";"hw3.java";"252";" not a statement
            unexpected'; 
            ^
/"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-08T01_41_00.657Z";"hw3.java";"256";" reached end of file while parsing
}
 ^
4 errors
"
"1daf3808a0069a2ee28993bb7b4358f05d35d5d4";"2020-10-08T20_41_05.714Z";"hw3.java";"246";" ';' expected
             key = alphabet
                           ^
1 error
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T16_05_23.741Z";"hw3.java";"25";" ';' expected
        String str = ''
                       ^
1 error
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T16_27_12.966Z";"hw3.java";"25";" ';' expected
        String str = ''
                       ^
1 error
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                     ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                      ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" ')' expected
    public static int[] stringToSymbolArray(String str) {
                                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"29";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"50";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"50";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"50";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"50";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"50";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"58";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"58";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"58";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"58";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"58";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"58";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"66";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"66";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"66";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"66";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"66";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"66";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"74";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"82";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"90";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"98";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"98";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"98";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"98";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"98";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"98";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"98";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"106";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"106";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"106";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"106";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"106";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"106";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"111";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"111";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"111";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"111";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"111";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T17_06_59.837Z";"hw3.java";"114";" reached end of file while parsing
}
 ^
68 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"32";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"32";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"32";" not a statement
            if (current >= '65' && current <= '90')  {
                             ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"32";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"32";" not a statement
            if (current >= '65' && current <= '90')  {
                                           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"32";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"32";" not a statement
            if (current >= '65' && current <= '90')  {
                                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"34";" illegal start of expression
                )
                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"51";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"51";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"51";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"51";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"51";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"59";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"59";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"59";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"59";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"59";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"59";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"67";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"67";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"67";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"67";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"67";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"67";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"75";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"83";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"91";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"99";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"99";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"99";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"99";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"99";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"99";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"99";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"107";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"107";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"107";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"107";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"107";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"107";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"112";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"112";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"112";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"112";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"112";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_01_37.295Z";"hw3.java";"115";" reached end of file while parsing
}
 ^
68 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"15";" ';' expected
         stringToSymbolArray('Consul')
                                      ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"34";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"34";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"34";" not a statement
            if (current >= '65' && current <= '90')  {
                             ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"34";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"34";" not a statement
            if (current >= '65' && current <= '90')  {
                                           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"34";" unclosed character literal
            if (current >= '65' && current <= '90')  {
                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"34";" not a statement
            if (current >= '65' && current <= '90')  {
                                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"36";" illegal start of expression
                )
                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"53";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"53";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"53";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"53";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"53";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"61";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"61";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"61";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"61";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"61";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"61";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"69";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"69";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"69";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"69";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"69";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"69";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"77";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"85";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"93";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"101";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"101";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"101";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"101";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"101";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"101";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"101";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"109";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"109";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"109";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"109";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"109";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"109";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"114";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"114";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"114";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"114";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"114";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T19_19_47.334Z";"hw3.java";"117";" reached end of file while parsing
}
 ^
69 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T20_11_26.763Z";"hw3.java";"15";" incompatible types"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T20_11_26.763Z";"hw3.java";"29";" variable str is already defined in method stringToSymbolArray(String)
        String str = str.toUpperCase(); // emphasize uppercase letters
               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T20_11_26.763Z";"hw3.java";"39";" incompatible types"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"32";" ';' expected
        inCoding[i] = ourSymbolRepresentation
                                             ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"43";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"53";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"55";" class, interface, or enum expected
        int = 0;
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"56";" class, interface, or enum expected
        String str = 
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"69";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"72";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"77";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"80";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"85";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"88";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"93";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"101";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"104";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"109";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"112";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"117";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T21_41_13.876Z";"hw3.java";"120";" class, interface, or enum expected
    }
    ^
19 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"30";" ';' expected
        inCoding[i] = ourSymbolRepresentation
                                             ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"47";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"49";" class, interface, or enum expected
        int[] symbols = Integer.parseInt(args[0]); 
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"50";" class, interface, or enum expected
        for (int i = 0; i < symbols.length(); i++)
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"50";" class, interface, or enum expected
        for (int i = 0; i < symbols.length(); i++)
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"50";" class, interface, or enum expected
        for (int i = 0; i < symbols.length(); i++)
                                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"52";" class, interface, or enum expected
        int ourSymbolRepresentation = (int) current - 'A'; // finding value of character of i 
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"53";" class, interface, or enum expected
        inCoding[i] = ourSymbolRepresentation
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"66";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"69";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"74";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"77";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"82";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"85";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"90";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"93";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"98";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"101";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"106";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"114";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T22_51_28.099Z";"hw3.java";"117";" class, interface, or enum expected
    }
    ^
22 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"30";" ';' expected
        inCoding[i] = ourSymbolRepresentation
                                             ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"44";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"46";" class, interface, or enum expected
        int[] symbols = Integer.parseInt(args[0]);     
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"47";" class, interface, or enum expected
        for (int i = 0; i < symbols.length(); i++)
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"47";" class, interface, or enum expected
        for (int i = 0; i < symbols.length(); i++)
                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"47";" class, interface, or enum expected
        for (int i = 0; i < symbols.length(); i++)
                                              ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"49";" class, interface, or enum expected
        inCoding[i] = ourSymbolRepresentation
        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"66";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"69";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"74";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"77";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"82";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"85";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"90";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"93";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"98";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"101";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"106";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_09_41.809Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
19 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_55_00.824Z";"hw3.java";"26";" variable str is already defined in method stringToSymbolArray(String)
        String str = str.toUpperCase(); // emphasize uppercase letters
               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_55_00.824Z";"hw3.java";"33";" cannot find symbol
         return ourSymbolRepresentation;  // emcompases entire array            
                ^
  symbol"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-08T23_55_00.824Z";"hw3.java";"69";" Illegal static declaration in inner class Caesar.unshift1
    public static int unshift(int symbol, int offset) {
                      ^
  modifier 'static' is only allowed in constant variable declarations
3 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"84";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"87";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"92";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"95";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"100";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"103";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"108";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"111";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"116";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T01_21_14.138Z";"hw3.java";"119";" class, interface, or enum expected
    }
    ^
10 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_07_43.519Z";"hw3.java";"83";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_07_43.519Z";"hw3.java";"83";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_07_43.519Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_07_43.519Z";"hw3.java";"83";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_07_43.519Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_07_43.519Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
6 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"73";" 'else' without 'if'
            else if (newSymbols2 > 26); {
            ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"100";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"103";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"108";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"111";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"116";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"119";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"124";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"127";" class, interface, or enum expected
    }
    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"132";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T02_30_52.551Z";"hw3.java";"135";" class, interface, or enum expected
    }
    ^
11 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"73";" 'else' without 'if'
            else if (newSymbols2 > 26); {
            ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"101";" 'else' without 'if'
            else if (newSymbols2 > 26); {
            ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"129";" illegal start of expression
   public static int shift(int ourSymbol, int 6) { 
   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"129";" illegal start of expression
   public static int shift(int ourSymbol, int 6) { 
          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"129";" ';' expected
   public static int shift(int ourSymbol, int 6) { 
                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"129";" '.class' expected
   public static int shift(int ourSymbol, int 6) { 
                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"129";" ';' expected
   public static int shift(int ourSymbol, int 6) { 
                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"129";" not a statement
   public static int shift(int ourSymbol, int 6) { 
                                          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"129";" ';' expected
   public static int shift(int ourSymbol, int 6) { 
                                             ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"134";" ')' expected
				offsetted = offsetted + shift(ourSymbol.charAt(i), 6;		           
				                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_05_15.292Z";"hw3.java";"141";" 'else' without 'if'
            else if (newSymbols3 > 26); {
            ^
11 errors
"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"73";" 'else' without 'if'
            else if (newSymbols2 > 26); {
            ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"101";" 'else' without 'if'
            else if (newSymbols2 > 26); {
            ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"129";" illegal start of expression
   public static int shift(int ourSymbol, int offset) { 
   ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"129";" illegal start of expression
   public static int shift(int ourSymbol, int offset) { 
          ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"129";" ';' expected
   public static int shift(int ourSymbol, int offset) { 
                ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"129";" '.class' expected
   public static int shift(int ourSymbol, int offset) { 
                               ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"129";" ';' expected
   public static int shift(int ourSymbol, int offset) { 
                                        ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"129";" ';' expected
   public static int shift(int ourSymbol, int offset) { 
                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"134";" ')' expected
				offsetted = offsetted + shift(ourSymbol.charAt(i), 6;		           
				                                                    ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"141";" 'else' without 'if'
            else if (newSymbols3 > 26); {
            ^
/"
"1f6649cfa736c67eb2271da4a3afea2c55db34e6";"2020-10-09T04_34_10.303Z";"hw3.java";"222";" class, interface, or enum expected
    }
    ^
11 errors
"
"20c9374598da999068e755c6651799d960f81954";"2020-10-05T18_58_55.495Z";"hw3.java";"99";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                            ^
  symbol"
"20c9374598da999068e755c6651799d960f81954";"2020-10-05T18_58_55.495Z";"hw3.java";"100";" cannot find symbol
            System.out.print(str[i]);
                             ^
  symbol"
"20c9374598da999068e755c6651799d960f81954";"2020-10-05T19_10_45.518Z";"hw3.java";"100";" cannot find symbol
        for (int i = 0; i < test.length; i++) {
                                ^
  symbol"
"20c9374598da999068e755c6651799d960f81954";"2020-10-05T19_10_45.518Z";"hw3.java";"101";" array required, but String found
            System.out.print(test[i]);
                                 ^
2 errors
"
"20c9374598da999068e755c6651799d960f81954";"2020-10-05T21_27_08.691Z";"hw3.java";"39";" unexpected type
            newString.charAt(i) = (char)(symbols[i] + 'A');
                            ^
  required"
"20c9374598da999068e755c6651799d960f81954";"2020-10-07T01_15_13.725Z";"hw3.java";"162";" incompatible types"
"20c9374598da999068e755c6651799d960f81954";"2020-10-07T01_15_13.725Z";"hw3.java";"182";" variable key is already defined in method main(String[])
                int key = Integer.parseInt(args[2]);
                    ^
2 errors
"
"20ece659e4a299b8be3c7d42aadc6edbdf358d08";"2020-10-04T22_07_05.197Z";"hw3.java";"158";" ';' expected
    public static String crack()
                                ^
1 error
"
"20ece659e4a299b8be3c7d42aadc6edbdf358d08";"2020-10-05T00_05_36.126Z";"hw3.java";"160";" missing return statement
    }
    ^
1 error
"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"175";" '(' expected
        for 
           ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"177";" illegal start of expression
        return cipherFrequencies;
        ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"178";" illegal start of expression
    }
    ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" ')' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
          ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                         ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" variable declaration not allowed here
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                         ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" <identifier> expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                           ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                  ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                   ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" not a statement
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                     ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"183";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T00_14_24.999Z";"hw3.java";"190";" reached end of file while parsing
}
 ^
13 errors
"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T22_47_32.892Z";"hw3.java";"135";" cannot find symbol
        int[] modifiedM = new int[m.length];
                                  ^
  symbol"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T22_47_32.892Z";"hw3.java";"137";" cannot find symbol
        for (int i = 0; i < m.length; i++) {
                            ^
  symbol"
"21dab4c1463f923623b244ac4c19f58c41bc46bc";"2020-10-07T22_47_32.892Z";"hw3.java";"138";" cannot find symbol
            modifiedM[i] = unshift(m[i], key);
                                   ^
  symbol"
"223e47f9cba0cfb0c1fd36160189bdcdd5fb3ae0";"2020-10-06T19_53_45.423Z";"hw3.java";"133";" incompatible types"
"223e47f9cba0cfb0c1fd36160189bdcdd5fb3ae0";"2020-10-06T22_34_52.407Z";"hw3.java";"180";" incompatible types"
"223e47f9cba0cfb0c1fd36160189bdcdd5fb3ae0";"2020-10-06T22_34_52.407Z";"hw3.java";"181";" incompatible types"
"223e47f9cba0cfb0c1fd36160189bdcdd5fb3ae0";"2020-10-06T23_41_04.457Z";"hw3.java";"201";" ';' expected
            stringToSymbolArray(decrypted)
                                          ^
1 error
"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-04T17_58_20.941Z";"hw3.java";"22";" not a statement
        int[] = new int[]
           ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-04T17_58_20.941Z";"hw3.java";"22";" ';' expected
        int[] = new int[]
             ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-04T17_58_20.941Z";"hw3.java";"22";" not a statement
        int[] = new int[]
                       ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-04T17_58_20.941Z";"hw3.java";"22";" ';' expected
        int[] = new int[]
                         ^
4 errors
"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-04T18_56_03.240Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-04T19_09_16.819Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-04T21_06_27.824Z";"hw3.java";"114";" ';' expected
        String symbolsToMessage = symbolArrayToString();
              ^
1 error
"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-05T22_00_22.870Z";"hw3.java";"79";" cannot find symbol
        for (i = 0; i < encryptionArray.length; i++) {
             ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-05T22_00_22.870Z";"hw3.java";"79";" cannot find symbol
        for (i = 0; i < encryptionArray.length; i++) {
                    ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-05T22_00_22.870Z";"hw3.java";"79";" cannot find symbol
        for (i = 0; i < encryptionArray.length; i++) {
                                                ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-05T22_00_22.870Z";"hw3.java";"80";" cannot find symbol
            encryptionArray[i] = shift(encriptionnArray[i], key);
                            ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-05T22_00_22.870Z";"hw3.java";"80";" cannot find symbol
            encryptionArray[i] = shift(encriptionnArray[i], key);
                                       ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-05T22_00_22.870Z";"hw3.java";"80";" cannot find symbol
            encryptionArray[i] = shift(encriptionnArray[i], key);
                                                        ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T00_36_31.348Z";"hw3.java";"176";" cannot find symbol
        String message = inStream.readAll();
                         ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"143";" ';' expected
        for (int i = 0; i < myFrequencies.length, i++) {
                                                ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"143";" ')' expected
        for (int i = 0; i < myFrequencies.length, i++) {
                                                 ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"143";" illegal start of expression
        for (int i = 0; i < myFrequencies.length, i++) {
                                                     ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"154";" illegal start of expression
        }
        ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"162";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"162";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"162";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"162";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"162";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"162";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"167";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"167";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"167";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"167";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"167";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_22_12.260Z";"hw3.java";"236";" reached end of file while parsing
}
 ^
16 errors
"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_53_32.177Z";"hw3.java";"140";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_53_32.177Z";"hw3.java";"144";" cannot find symbol
        for (int i = 0; i < s.length(); i++) {
                            ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_53_32.177Z";"hw3.java";"145";" cannot find symbol
            char current = s.charAt(i);
                           ^
  symbol"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_53_32.177Z";"hw3.java";"151";" incompatible types"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_53_32.177Z";"hw3.java";"223";" variable inStream is already defined in method main(String[])
        In inStream = new In(filename2);
           ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-07T04_53_32.177Z";"hw3.java";"227";" incompatible types"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-08T00_46_15.246Z";"hw3.java";"188";" repeated modifier
    public static void main(String[] args) {
    ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-08T00_46_15.246Z";"hw3.java";"188";" repeated modifier
    public static void main(String[] args) {
           ^
2 errors
"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-08T01_30_58.616Z";"hw3.java";"189";" ')' expected
        double uncrackedFreqScore = (____, uncrackedFreqArray);
                                         ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-08T01_30_58.616Z";"hw3.java";"189";" ';' expected
        double uncrackedFreqScore = (____, uncrackedFreqArray);
                                                             ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-08T01_30_58.616Z";"hw3.java";"195";" '.class' expected
            double crackedScore = scoreFrequencies(double[] english, crackedFreqs);
                                                            ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-08T01_30_58.616Z";"hw3.java";"195";" ';' expected
            double crackedScore = scoreFrequencies(double[] english, crackedFreqs);
                                                                                 ^
/"
"24d8a641417c3d9b096f69b4afc2f647c5dc1265";"2020-10-08T01_30_58.616Z";"hw3.java";"197";" illegal start of expression
            if (crackedScore < ) {
                               ^
5 errors
"
"250f90922642dce6892783fe11a3cbaf5e917cb1";"2020-10-05T02_23_35.122Z";"hw3.java";"225";" ';' expected
    public static String crack(String cipher, String english)
                                                             ^
1 error
"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T01_38_46.437Z";"hw3.java";"21";" cannot find symbol
        str = str.toUpperCase;
                 ^
  symbol"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T01_38_46.437Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T02_23_18.559Z";"hw3.java";"13";" <identifier> expected
    System.out.println(testCode);
                      ^
/"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T02_23_18.559Z";"hw3.java";"13";" <identifier> expected
    System.out.println(testCode);
                               ^
2 errors
"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T02_46_01.157Z";"hw3.java";"13";" <identifier> expected
    System.out.println(testCode);
                      ^
/"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T02_46_01.157Z";"hw3.java";"13";" <identifier> expected
    System.out.println(testCode);
                               ^
/"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T02_46_01.157Z";"hw3.java";"26";" not a statement
        int 
        ^
/"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T02_46_01.157Z";"hw3.java";"26";" ';' expected
        int 
           ^
4 errors
"
"25fe012692240da59936ab2cd702848f6ab41d7f";"2020-10-07T14_53_09.963Z";"hw3.java";"208";" ';' expected
    public static String Crack ()
                                 ^
1 error
"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-05T22_54_36.068Z";"hw3.java";"11";" illegal start of type
    String stringToSymbolArray('CONSUL');
                               ^
1 error
"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-05T23_55_53.741Z";"hw3.java";"48";" bad operand types for binary operator '<='
        if(0 <= symbol <= 25){
                       ^
  first type"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-05T23_55_53.741Z";"hw3.java";"62";" bad operand types for binary operator '<='
        if(0 <= symbol <= 25){
                       ^
  first type"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"87";" ';' expected
        String encryptedMessage = symbolArrayToString()
                                                       ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"95";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-06T22_37_47.776Z";"hw3.java";"103";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
17 errors
"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"181";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"197";" class, interface, or enum expected
     String inputText = inStream.readAll();
     ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"199";" class, interface, or enum expected
        if (args[0].equals('encrypt')){
        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"201";" class, interface, or enum expected
           System.out.println(encrypt(inputText, offset));
           ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"202";" class, interface, or enum expected
        }
        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"205";" class, interface, or enum expected
            System.out.println(decrypt(inputText, offset));
            ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"206";" class, interface, or enum expected
        }
        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"209";" class, interface, or enum expected
        }
        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"212";" class, interface, or enum expected
        }
        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"215";" class, interface, or enum expected
        System.out.println(findFrequencies(k));
        ^
/"
"260bb5e515632f23d4a975dca9caff206e84bb87";"2020-10-08T00_02_08.053Z";"hw3.java";"217";" class, interface, or enum expected
    }
    ^
11 errors
"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-04T18_00_23.906Z";"hw3.java";"55";" illegal start of expression
        if (symbol % ) {
                     ^
1 error
"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-08T00_47_56.309Z";"hw3.java";"91";" method shift in class Caesar cannot be applied to given types;
            shift = shift(array); 
                    ^
  required"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-08T01_31_03.673Z";"hw3.java";"78";" method shift in class Caesar cannot be applied to given types;
             symbol = shift(26 + (symbol - offset) % 26);
                      ^
  required"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-08T20_25_36.119Z";"hw3.java";"144";" cannot find symbol
        In inStream = new In(fileName); 
                             ^
  symbol"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-08T21_47_11.455Z";"hw3.java";"149";" incompatible types"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-09T00_20_30.690Z";"hw3.java";"167";" cannot find symbol
            score += Math.abs(currentFreqs[i] - english[i]);
            ^
  symbol"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-09T00_20_30.690Z";"hw3.java";"169";" cannot find symbol
        return message;
               ^
  symbol"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-09T00_39_41.451Z";"hw3.java";"170";" cannot find symbol
        return message;
               ^
  symbol"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-09T01_04_15.314Z";"hw3.java";"171";" incompatible types"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-09T16_56_31.773Z";"hw3.java";"231";" variable inStream is already defined in method main(String[])
            In inStream = new In(args[2]); 
               ^
/"
"26455cd1ecb5229a5e1d69f5c4c845da30ed54c9";"2020-10-09T16_56_31.773Z";"hw3.java";"232";" variable allText is already defined in method main(String[])
            String allText = inStream.readAll();
                   ^
2 errors
"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-05T22_21_51.814Z";"hw3.java";"113";" illegal start of expression
                break;
                ^
1 error
"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-06T03_23_29.922Z";"hw3.java";"131";" illegal start of expression
                break;
                ^
1 error
"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-06T03_58_31.269Z";"hw3.java";"124";" method encrypt in class Caesar cannot be applied to given types;
                String encryptedMessage = encrypt(inputString);
                                          ^
  required"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-06T03_58_31.269Z";"hw3.java";"127";" method decrypt in class Caesar cannot be applied to given types;
                String decryptedMessage = decrypt(inputString);
                                          ^
  required"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-06T03_58_31.269Z";"hw3.java";"130";" cannot find symbol
                String crackedMessage = crack(inputString);
                                        ^
  symbol"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-06T06_22_31.584Z";"hw3.java";"26";" cannot find symbol
            int[] test = new test[str.length];
                             ^
  symbol"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-06T06_22_31.584Z";"hw3.java";"26";" cannot find symbol
            int[] test = new test[str.length];
                                     ^
  symbol"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-07T01_05_37.969Z";"hw3.java";"162";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-07T01_05_37.969Z";"hw3.java";"166";" bad operand types for binary operator '<'
        for (int i = 0; i < dictionaryFreq; i++) {
                          ^
  first type"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-07T05_13_23.762Z";"hw3.java";"162";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-07T05_13_23.762Z";"hw3.java";"166";" bad operand types for binary operator '<'
        for (int i = 0; i < dictionaryFreq; i++) {
                          ^
  first type"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-07T05_29_33.678Z";"hw3.java";"162";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-07T05_29_33.678Z";"hw3.java";"166";" bad operand types for binary operator '<'
        for (int i = 0; i < dictionaryFreq; i++) {
                          ^
  first type"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T02_53_01.027Z";"hw3.java";"214";" not a statement
        double[]
              ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T02_53_01.027Z";"hw3.java";"214";" ';' expected
        double[]
                ^
2 errors
"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T06_40_41.661Z";"hw3.java";"254";" cannot find symbol
        return FILLLINNNNNN;
               ^
  symbol"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T07_06_09.057Z";"hw3.java";"247";" ';' expected
                FILLLLL INNNNNN
                               ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T07_06_09.057Z";"hw3.java";"250";" ';' expected
        return FILLL INNNNNN;
                    ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T07_06_09.057Z";"hw3.java";"250";" not a statement
        return FILLL INNNNNN;
                     ^
3 errors
"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T17_46_09.888Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                             ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T17_46_09.888Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                              ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T17_46_09.888Z";"hw3.java";"268";" ')' expected
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                     ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T17_46_09.888Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                         ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T17_46_09.888Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                           ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T17_46_09.888Z";"hw3.java";"268";" not a statement
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                          ^
6 errors
"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                             ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                              ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"268";" ')' expected
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                     ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                         ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"268";" illegal start of expression
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                           ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"268";" not a statement
        String crackedCode = decrypt(cipher, **LOWEST KEY**);
                                                          ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"303";" illegal start of expression
            break;*/
                  ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"303";" illegal start of expression
            break;*/
                   ^
/"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"304";" illegal start of expression
            default"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"304";" illegal start of expression
            default"
"270e0b07846ed7becbdb27ff75dffe53de21d3e0";"2020-10-08T18_42_09.290Z";"hw3.java";"305";" ';' expected
            System.out.println('Invalid Argument.');
                  ^
11 errors
"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T18_59_44.231Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T20_42_47.673Z";"hw3.java";"21";" cannot find symbol
        char letter = (char) (ourSymbolRepresentation + 'A');
                              ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T20_42_47.673Z";"hw3.java";"25";" incompatible types"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_19_06.642Z";"hw3.java";"26";" variable str is already defined in method stringToSymbolArray(String)
        String str = new String[26];
               ^
/"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_19_06.642Z";"hw3.java";"26";" incompatible types"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_19_06.642Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_19_06.642Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_19_06.642Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_19_06.642Z";"hw3.java";"29";" cannot find symbol
            System.out.println(str.charAt(i));
                                          ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_47_33.111Z";"hw3.java";"26";" variable str is already defined in method stringToSymbolArray(String)
        String str = new String[str.length];
               ^
/"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_47_33.111Z";"hw3.java";"26";" cannot find symbol
        String str = new String[str.length];
                                   ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_47_33.111Z";"hw3.java";"26";" incompatible types"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_47_33.111Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_47_33.111Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_47_33.111Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_47_33.111Z";"hw3.java";"29";" cannot find symbol
            System.out.println(str.charAt(i));
                                          ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_58_20.940Z";"hw3.java";"26";" variable str is already defined in method stringToSymbolArray(String)
        String str = new String[str.length()];
               ^
/"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_58_20.940Z";"hw3.java";"26";" incompatible types"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_58_20.940Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_58_20.940Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_58_20.940Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"27f00efeac6eafc4281f76529fd10d11c1827f52";"2020-10-07T21_58_20.940Z";"hw3.java";"29";" cannot find symbol
            System.out.println(str.charAt(i));
                                          ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-04T03_20_18.120Z";"hw3.java";"26";" class expected
            symbolArray[i] = char.stringLength[i];
                                  ^
1 error
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-04T18_37_35.820Z";"hw3.java";"21";" cannot find symbol
        for (i = 1; i = str.length(); i++) {
             ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-04T18_37_35.820Z";"hw3.java";"21";" cannot find symbol
        for (i = 1; i = str.length(); i++) {
                    ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-04T18_37_35.820Z";"hw3.java";"21";" cannot find symbol
        for (i = 1; i = str.length(); i++) {
                                      ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-04T18_37_35.820Z";"hw3.java";"22";" cannot find symbol
            symbolArray[i] = str.charAt(i);
                        ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-04T18_37_35.820Z";"hw3.java";"22";" cannot find symbol
            symbolArray[i] = str.charAt(i);
                                        ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T01_03_49.792Z";"hw3.java";"37";" <identifier> expected
        String string = new 
                           ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T01_03_49.792Z";"hw3.java";"39";" '(' or '[' expected
        return null;
        ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T01_03_49.792Z";"hw3.java";"39";" ';' expected
        return null;
              ^
3 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T04_08_46.409Z";"hw3.java";"23";" '.class' expected
            symbolArray[i] = int str.charAt(i); 
                                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T04_08_46.409Z";"hw3.java";"23";" illegal start of expression
            symbolArray[i] = int str.charAt(i); 
                                    ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T04_08_46.409Z";"hw3.java";"23";" ';' expected
            symbolArray[i] = int str.charAt(i); 
                                           ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T04_08_46.409Z";"hw3.java";"23";" not a statement
            symbolArray[i] = int str.charAt(i); 
                                            ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T04_08_46.409Z";"hw3.java";"23";" ';' expected
            symbolArray[i] = int str.charAt(i); 
                                             ^
5 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T04_56_31.230Z";"hw3.java";"51";" ';' expected
        int resultant = (symbol + offset) % 26
                                              ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T04_56_31.230Z";"hw3.java";"60";" ';' expected
        int resultant = (symbol - offset) % 26
                                              ^
2 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T16_58_06.806Z";"hw3.java";"51";" ';' expected
        int resultant = (symbol + offset) % 26
                                              ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T16_58_06.806Z";"hw3.java";"60";" ';' expected
        int resultant = (symbol - offset) % 26
                                              ^
2 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T23_49_14.501Z";"hw3.java";"106";" illegal start of expression
        String testString = symbolArrayToString([2 5 3 7 2]);
                                                ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T23_49_14.501Z";"hw3.java";"106";" ';' expected
        String testString = symbolArrayToString([2 5 3 7 2]);
                                                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T23_49_14.501Z";"hw3.java";"106";" not a statement
        String testString = symbolArrayToString([2 5 3 7 2]);
                                                   ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T23_49_14.501Z";"hw3.java";"106";" ';' expected
        String testString = symbolArrayToString([2 5 3 7 2]);
                                                    ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-05T23_49_14.501Z";"hw3.java";"112";" class, interface, or enum expected
}
^
5 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-06T00_48_10.429Z";"hw3.java";"41";" '.class' expected
            charArray[i] = char (symbols[i]);
                                ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-06T00_48_10.429Z";"hw3.java";"41";" not a statement
            charArray[i] = char (symbols[i]);
                                        ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-06T00_48_10.429Z";"hw3.java";"41";" ';' expected
            charArray[i] = char (symbols[i]);
                                           ^
3 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-06T03_47_54.730Z";"hw3.java";"41";" incompatible types"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-06T05_20_29.527Z";"hw3.java";"88";" ';' expected
            resultantArray[i] = unshift(symbolArray[i], key)
                                                            ^
1 error
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-06T06_13_06.494Z";"hw3.java";"59";" cannot find symbol
        return resultant;
               ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-06T06_13_06.494Z";"hw3.java";"73";" cannot find symbol
        return resultant;
               ^
  symbol"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"127";" illegal start of expression
        }
        ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"134";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"139";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"139";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"139";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"139";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"139";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T02_47_30.399Z";"hw3.java";"147";" reached end of file while parsing
    }
     ^
13 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"127";" illegal start of expression
        }
        ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"134";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"139";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"139";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"139";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"139";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"139";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T03_38_18.092Z";"hw3.java";"147";" reached end of file while parsing
    }
     ^
13 errors
"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T18_07_42.307Z";"hw3.java";"126";" not a statement
        double[] 
              ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T18_07_42.307Z";"hw3.java";"126";" ';' expected
        double[] 
                ^
/"
"2892d3dbc857f6742361415ebd37d0dde3eeb077";"2020-10-07T18_07_42.307Z";"hw3.java";"161";" integer number too large"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_22_27.093Z";"hw3.java";"61";" illegal start of statement
        } else {
        ^
1 error
"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"79";" illegal start of expression
            }
            ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"80";" 'else' without 'if'
        } else 
          ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"104";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T08_41_32.778Z";"hw3.java";"122";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
26 errors
"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T10_08_52.920Z";"hw3.java";"149";" illegal start of expression
        if (test !=)
                   ^
1 error
"
"2ac9c3d2e2b75c154ab4ea8cc2bad9087497e779";"2020-10-05T10_50_49.389Z";"hw3.java";"148";" cannot find symbol
        System.out.println(args[0].length);
                                  ^
  symbol"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-04T05_01_03.317Z";"hw3.java";"21";" cannot find symbol
        for (int i = 0; i < stringToSymbolArray.length; i++){
                            ^
  symbol"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-04T05_01_03.317Z";"hw3.java";"22";" incompatible types"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-04T18_35_19.095Z";"hw3.java";"56";" incompatible types"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"29";" ';' expected
         Load the specified text file
                 ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"29";" ';' expected
         Load the specified text file
                                ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"30";" ';' expected
         In inStream = new In(filename);
           ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"31";" ';' expected
         Call the appropriate function to encrypt/decrypt/crack the message
                 ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"31";" ';' expected
         Call the appropriate function to encrypt/decrypt/crack the message
                                      ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"31";" ';' expected
         Call the appropriate function to encrypt/decrypt/crack the message
                                                 ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"31";" not a statement
         Call the appropriate function to encrypt/decrypt/crack the message
                                                         ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"31";" ';' expected
         Call the appropriate function to encrypt/decrypt/crack the message
                                                               ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"31";" ';' expected
         Call the appropriate function to encrypt/decrypt/crack the message
                                                                           ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"40";" ';' expected
               String cracked = crack()  
                                       ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"41";" ';' expected
                 String filename, String cipherMessage, double[] scoreFrequency
                                        ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"41";" not a statement
                 String filename, String cipherMessage, double[] scoreFrequency
                                         ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"41";" ';' expected
                 String filename, String cipherMessage, double[] scoreFrequency
                                                      ^
/"
"2adc3e45fc704d8286cf0b39376b823871ed8484";"2020-10-06T08_41_38.195Z";"hw3.java";"41";" ';' expected
                 String filename, String cipherMessage, double[] scoreFrequency
                                                                               ^
14 errors
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-07T14_42_38.470Z";"hw3.java";"22";" method stringToSymbolArray in class Caesar cannot be applied to given types;
        stringToSymbolArray();
        ^
  required"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-07T15_00_23.533Z";"hw3.java";"22";" method stringToSymbolArray in class Caesar cannot be applied to given types;
        String phrase = stringToSymbolArray();
                        ^
  required"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-07T15_00_23.533Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < phrase.length; i++) {
                                  ^
  symbol"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-07T20_50_08.857Z";"hw3.java";"40";" cannot find symbol
        char[] y = new char[symbols.length()];
                                   ^
  symbol"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-07T20_50_08.857Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-07T20_50_08.857Z";"hw3.java";"42";" cannot find symbol
            y[i] = (char) symbols.intAt(i);
                                 ^
  symbol"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-07T20_50_08.857Z";"hw3.java";"44";" incompatible types"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T00_15_56.268Z";"hw3.java";"56";" not a statement
                (int) symbol.charAt(i) + offset;
                                       ^
1 error
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T02_02_14.892Z";"hw3.java";"57";" not a statement
                (int) symbol.charAt(i) + offset;
                                       ^
1 error
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T02_25_33.217Z";"hw3.java";"57";" not a statement
                symbol[i] + offset;
                          ^
1 error
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"86";" not a statement
        String final = new String();
        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"86";" ';' expected
        String final = new String();
              ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"86";" illegal start of type
        String final = new String();
                     ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"86";" ';' expected
        String final = new String();
                      ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"88";" illegal start of expression
            public static int[] stringToSymbolArray(String str);
            ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"88";" illegal start of expression
            public static int[] stringToSymbolArray(String str);
                   ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"88";" ';' expected
            public static int[] stringToSymbolArray(String str);
                         ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"88";" illegal start of expression
            public static int[] stringToSymbolArray(String str);
                             ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"88";" ';' expected
            public static int[] stringToSymbolArray(String str);
                              ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"88";" ')' expected
            public static int[] stringToSymbolArray(String str);
                                                          ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"88";" illegal start of expression
            public static int[] stringToSymbolArray(String str);
                                                              ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"89";" illegal start of expression
            public static int shift(int symbol, int offset);
            ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"89";" illegal start of expression
            public static int shift(int symbol, int offset);
                   ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"89";" ';' expected
            public static int shift(int symbol, int offset);
                         ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"89";" '.class' expected
            public static int shift(int symbol, int offset);
                                        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"89";" ';' expected
            public static int shift(int symbol, int offset);
                                              ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"89";" ';' expected
            public static int shift(int symbol, int offset);
                                                          ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"90";" illegal start of expression
            public static String symbolArrayToString(int[] symbols);
            ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"90";" illegal start of expression
            public static String symbolArrayToString(int[] symbols);
                   ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"90";" ';' expected
            public static String symbolArrayToString(int[] symbols);
                                ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"90";" '.class' expected
            public static String symbolArrayToString(int[] symbols);
                                                           ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_18_03.829Z";"hw3.java";"90";" ';' expected
            public static String symbolArrayToString(int[] symbols);
                                                                  ^
22 errors
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_35_14.715Z";"hw3.java";"86";" not a statement
        String final = new String();
        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_35_14.715Z";"hw3.java";"86";" ';' expected
        String final = new String();
              ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_35_14.715Z";"hw3.java";"86";" illegal start of type
        String final = new String();
                     ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_35_14.715Z";"hw3.java";"86";" ';' expected
        String final = new String();
                      ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T03_35_14.715Z";"hw3.java";"93";" illegal start of expression
        return final;
               ^
5 errors
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T04_45_49.785Z";"hw3.java";"86";" not a statement
        String final = new String;
        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T04_45_49.785Z";"hw3.java";"86";" ';' expected
        String final = new String;
              ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T04_45_49.785Z";"hw3.java";"86";" illegal start of type
        String final = new String;
                     ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T04_45_49.785Z";"hw3.java";"86";" ';' expected
        String final = new String;
                      ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T04_45_49.785Z";"hw3.java";"86";" not a statement
        String final = new String;
                           ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T04_45_49.785Z";"hw3.java";"93";" illegal start of expression
        return final;
               ^
6 errors
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
               ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                     ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                         ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                          ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" ')' expected
        public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                                                          ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"86";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                                                           ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"134";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"137";" class, interface, or enum expected
    }
    ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"142";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"145";" class, interface, or enum expected
    }
    ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"150";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"153";" class, interface, or enum expected
    }
    ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"158";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"161";" class, interface, or enum expected
    }
    ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"163";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"165";" class, interface, or enum expected
        int[] x = stringToSymbolArray('APPLE');
        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"166";" class, interface, or enum expected
        for (int i = 0; i < x.length; i++) {
        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"166";" class, interface, or enum expected
        for (int i = 0; i < x.length; i++) {
                        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"166";" class, interface, or enum expected
        for (int i = 0; i < x.length; i++) {
                                      ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"168";" class, interface, or enum expected
        }
        ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"171";" class, interface, or enum expected
            System.out.println(y);
            ^
/"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T14_21_05.506Z";"hw3.java";"174";" class, interface, or enum expected
    }
    ^
24 errors
"
"2c22b20e671dbf5ab6f9c84da21690f72cbed8ef";"2020-10-08T21_59_50.573Z";"hw3.java";"122";" ';' expected
            String encrypted = encrypt(text, key)
                                                 ^
1 error
"
"2d1e7e329d49709107b3cc3a54e79ecd10734d88";"2020-10-08T04_15_00.398Z";"hw3.java";"150";" cannot find symbol
        symbols = stringToSymbolArray(message);
                                      ^
  symbol"
"2d1e7e329d49709107b3cc3a54e79ecd10734d88";"2020-10-09T01_28_21.736Z";"hw3.java";"194";" missing return statement
    }
    ^
1 error
"
"2d7848bb411c2d1dfe75ddd2c095195b42110776";"2020-10-07T16_26_56.175Z";"hw3.java";"121";" ';' expected
        double[] englishFrequencies = new double[26]
                                                    ^
1 error
"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-04T06_11_49.249Z";"hw3.java";"23";" cannot find symbol
        str = str.toUpperCase;
                 ^
  symbol"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-04T19_40_08.909Z";"hw3.java";"114";" illegal start of expression
        System.out.println(symbolArrayToString([2, 14, 13, 18, 20, 11]));
                                               ^
/"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-04T19_40_08.909Z";"hw3.java";"114";" ')' expected
        System.out.println(symbolArrayToString([2, 14, 13, 18, 20, 11]));
                                                ^
/"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-04T19_40_08.909Z";"hw3.java";"114";" ';' expected
        System.out.println(symbolArrayToString([2, 14, 13, 18, 20, 11]));
                                                 ^
/"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-04T19_40_08.909Z";"hw3.java";"114";" not a statement
        System.out.println(symbolArrayToString([2, 14, 13, 18, 20, 11]));
                                                   ^
/"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-04T19_40_08.909Z";"hw3.java";"114";" ';' expected
        System.out.println(symbolArrayToString([2, 14, 13, 18, 20, 11]));
                                                     ^
5 errors
"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-04T20_08_04.406Z";"hw3.java";"48";" unexpected type
            stringFromArray.charAt(i) = (char) (symbols[i] + 'A');;
                                  ^
  required"
"2d8ae2ab222603a73f98853020208a89c7cef84d";"2020-10-05T16_15_07.812Z";"hw3.java";"143";" ';' expected
            dictFreq[i] = inStream.readDouble
                                             ^
1 error
"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-03T18_54_32.924Z";"hw3.java";"66";" incompatible types"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-03T18_54_32.924Z";"hw3.java";"74";" incompatible types"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-03T18_54_32.924Z";"hw3.java";"82";" incompatible types"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-03T18_54_32.924Z";"hw3.java";"90";" incompatible types"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-03T21_30_21.832Z";"hw3.java";"122";" ';' expected
        for (int i = 0; i < 26, i++) {
                              ^
/"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-03T21_30_21.832Z";"hw3.java";"122";" ')' expected
        for (int i = 0; i < 26, i++) {
                               ^
/"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-03T21_30_21.832Z";"hw3.java";"122";" illegal start of expression
        for (int i = 0; i < 26, i++) {
                                   ^
3 errors
"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-04T21_35_14.383Z";"hw3.java";"122";" ';' expected
        for (int i = 0; i < 26, i++) {
                              ^
/"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-04T21_35_14.383Z";"hw3.java";"122";" ')' expected
        for (int i = 0; i < 26, i++) {
                               ^
/"
"2e26f875a0ef7b1f5682286d9dd0543997d7c42c";"2020-10-04T21_35_14.383Z";"hw3.java";"122";" illegal start of expression
        for (int i = 0; i < 26, i++) {
                                   ^
3 errors
"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-09T20_53_10.353Z";"hw3.java";"23";" array dimension missing
        int[] arr = new int[];
                             ^
1 error
"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-09T21_16_37.027Z";"hw3.java";"21";" not a statement
        String [] = new stringToSymbolArray('CONSUL');
               ^
/"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-09T21_16_37.027Z";"hw3.java";"21";" ';' expected
        String [] = new stringToSymbolArray('CONSUL');
                 ^
2 errors
"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T01_06_34.422Z";"hw3.java";"40";" ';' expected
            str[i] = symbols charAt(i) + 0;
                            ^
/"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T01_06_34.422Z";"hw3.java";"40";" not a statement
            str[i] = symbols charAt(i) + 0;
                                       ^
2 errors
"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T21_51_23.036Z";"hw3.java";"63";" '(' expected
        if 
          ^
/"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T21_51_23.036Z";"hw3.java";"64";" illegal start of expression
        return 0;
        ^
/"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T21_51_23.036Z";"hw3.java";"64";" ')' expected
        return 0;
              ^
3 errors
"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T22_25_32.649Z";"hw3.java";"80";" not a statement
        arr[] = arr[] shift;
           ^
/"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T22_25_32.649Z";"hw3.java";"80";" ';' expected
        arr[] = arr[] shift;
             ^
2 errors
"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T23_47_59.103Z";"hw3.java";"42";" cannot find symbol
        for (int i = 0; i < arr.length; i++) {
                            ^
  symbol"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T23_47_59.103Z";"hw3.java";"43";" cannot find symbol
            ans += (char)(arr[i] + 'A');
                          ^
  symbol"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T23_47_59.103Z";"hw3.java";"84";" cannot find symbol
        int[] ints = new int[ints.length()];
                                 ^
  symbol"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T23_47_59.103Z";"hw3.java";"90";" incompatible types"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T23_47_59.103Z";"hw3.java";"136";" cannot find symbol
        int[] sh = new int[ints.length];
                           ^
  symbol"
"2e5d899ce757dacb028d693fd162f019e1d137b9";"2020-10-10T23_47_59.103Z";"hw3.java";"137";" cannot find symbol
        sh = shift(ints);
                   ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T09_35_18.273Z";"hw3.java";"13";" cannot find symbol
      for (int i = 0; i < str.length; i++) {
                          ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T09_35_18.273Z";"hw3.java";"14";" cannot find symbol
      System.out.print(symbols[i] + ', ');
                       ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T14_45_38.220Z";"hw3.java";"13";" cannot find symbol
      int[] symbols = new int[str.length()]; 
                              ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T14_45_38.220Z";"hw3.java";"15";" cannot find symbol
      for (int i = 0; i < str.length; i++) {
                          ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T14_45_38.220Z";"hw3.java";"34";" cannot find symbol
            symbols[i] = (int) letter; 
            ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T21_20_23.694Z";"hw3.java";"14";" cannot find symbol
      for (int i = 0; i < stringToSymbol.length; i++) {
                          ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T21_20_23.694Z";"hw3.java";"15";" cannot find symbol
      System.out.print(stringToSymbol[i] + ', ');
                       ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T21_20_23.694Z";"hw3.java";"49";" cannot find symbol
        String[] symbolToString = new int[symbols.length()];
                                                 ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T21_20_23.694Z";"hw3.java";"49";" incompatible types"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T21_20_23.694Z";"hw3.java";"50";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T21_20_23.694Z";"hw3.java";"52";" incompatible types"
"2fcd57e994ce4e99ea705980aa0f47d3307e3ab7";"2020-10-08T21_20_23.694Z";"hw3.java";"54";" incompatible types"
"3041a53686abd2d37493352be2b24a14c40071a8";"2020-10-03T22_41_11.562Z";"hw3.java";"303";" ';' expected
        String keyFound = ''
                            ^
1 error
"
"31581b9b01d2fa566b8c69efc227c6bd676e574e";"2020-10-05T01_48_24.828Z";"hw3.java";"284";" cannot find symbol
            String encrypted = encrypt(text, (int) letter.charAt(0) - 'A');
                                                   ^
  symbol"
"31581b9b01d2fa566b8c69efc227c6bd676e574e";"2020-10-05T01_48_24.828Z";"hw3.java";"289";" cannot find symbol
            String decrypted = decrypt(text, (int) letter.charAt(0) - 'A');
                                                   ^
  symbol"
"347d33b6e5785dc56109485ce720e361d0a4a675";"2020-10-09T16_30_39.507Z";"hw3.java";"167";" missing return statement
    }
    ^
1 error
"
"347d33b6e5785dc56109485ce720e361d0a4a675";"2020-10-09T16_42_49.957Z";"hw3.java";"166";" ';' expected
        int key = min
                     ^
1 error
"
"347d33b6e5785dc56109485ce720e361d0a4a675";"2020-10-09T17_24_34.868Z";"hw3.java";"170";" incompatible types"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"21";" ';' expected
        public static int countDigits(String str) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"21";" ')' expected
        public static int countDigits(String str) {
                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
                                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"21";" ';' expected
        public static int countDigits(String str) {
                                                 ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"31";" <identifier> expected
        counter = int symbolArrayLength
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"31";" '.class' expected
        counter = int symbolArrayLength
                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"33";" illegal start of type
        for (int i = 0; i < symbolArrayLength; i++) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"33";" ')' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"33";" illegal start of type
        for (int i = 0; i < symbolArrayLength; i++) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"33";" <identifier> expected
        for (int i = 0; i < symbolArrayLength; i++) {
                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"33";" ';' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"33";" > expected
        for (int i = 0; i < symbolArrayLength; i++) {
                                             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"33";" '(' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"50";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"53";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"58";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"61";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"66";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"69";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"74";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"77";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"82";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"85";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"90";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"93";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"98";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"101";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"106";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"111";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"113";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"114";" class, interface, or enum expected
        String three = args[2];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"116";" class, interface, or enum expected
        if (three >= 65 && three <= 90) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"118";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"121";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"123";" unclosed character literal
        if (function = 'encrpyt') {
                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"123";" unclosed character literal
        if (function = 'encrpyt') {
                               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"126";" unclosed character literal
        else if (function = 'decrypt') {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"126";" unclosed character literal
        else if (function = 'decrypt') {
                                    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"134";" class, interface, or enum expected
         for (int i = 0; )
         ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"134";" class, interface, or enum expected
         for (int i = 0; )
                         ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-06T21_52_23.198Z";"hw3.java";"137";" class, interface, or enum expected
    }
    ^
44 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"21";" ';' expected
        public static int countDigits(String str) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"21";" ')' expected
        public static int countDigits(String str) {
                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
                                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"21";" ';' expected
        public static int countDigits(String str) {
                                                 ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"31";" <identifier> expected
        counter = int symbolArrayLength
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"31";" '.class' expected
        counter = int symbolArrayLength
                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"33";" illegal start of type
        for (int i = 0; i < symbolArrayLength; i++) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"33";" ')' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"33";" illegal start of type
        for (int i = 0; i < symbolArrayLength; i++) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"33";" <identifier> expected
        for (int i = 0; i < symbolArrayLength; i++) {
                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"33";" ';' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"33";" > expected
        for (int i = 0; i < symbolArrayLength; i++) {
                                             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"33";" '(' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"35";" '.class' expected
     return symbolArray[]; // how do we store each array entry into one 
                         ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"50";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"53";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"58";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"61";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"66";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"69";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"74";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"77";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"82";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"85";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"90";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"93";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"98";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"101";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"106";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"111";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"113";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"114";" class, interface, or enum expected
        String three = args[2];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"116";" class, interface, or enum expected
        if (three >= 65 && three <= 90) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"118";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"121";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"123";" unclosed character literal
        if (function = 'encrpyt') {
                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"123";" unclosed character literal
        if (function = 'encrpyt') {
                               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"125";" class, interface, or enum expected
        }    
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"126";" unclosed character literal
        else if (function = 'decrypt') {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"126";" unclosed character literal
        else if (function = 'decrypt') {
                                    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"128";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T02_30_48.808Z";"hw3.java";"131";" class, interface, or enum expected
        }
        ^
45 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"21";" ';' expected
        public static int countDigits(String str) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"21";" ')' expected
        public static int countDigits(String str) {
                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"21";" illegal start of expression
        public static int countDigits(String str) {
                                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"21";" ';' expected
        public static int countDigits(String str) {
                                                 ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"31";" <identifier> expected
        counter = int symbolArrayLength
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"31";" '.class' expected
        counter = int symbolArrayLength
                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"33";" illegal start of type
        for (int i = 0; i < symbolArrayLength; i++) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"33";" ')' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"33";" illegal start of type
        for (int i = 0; i < symbolArrayLength; i++) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"33";" <identifier> expected
        for (int i = 0; i < symbolArrayLength; i++) {
                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"33";" ';' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"33";" > expected
        for (int i = 0; i < symbolArrayLength; i++) {
                                             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"33";" '(' expected
        for (int i = 0; i < symbolArrayLength; i++) {
                                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"35";" '.class' expected
     return symbolArray[]; // how do we store each array entry into one 
                         ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"50";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"52";" class, interface, or enum expected
        for (int i = 0; i < symbolArrayLength; i++) {
                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"52";" class, interface, or enum expected
        for (int i = 0; i < symbolArrayLength; i++) {
                                               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"54";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"57";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"62";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"67";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"72";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"75";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"80";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"83";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"88";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"91";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"96";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"99";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"104";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"107";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"112";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"115";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"117";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"119";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"120";" class, interface, or enum expected
        String three = args[2];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"122";" class, interface, or enum expected
        if (three >= 65 && three <= 90) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"124";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"127";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"129";" unclosed character literal
        if (function = 'encrpyt') {
                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"129";" unclosed character literal
        if (function = 'encrpyt') {
                               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"131";" class, interface, or enum expected
        }    
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"132";" unclosed character literal
        else if (function = 'decrypt') {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"132";" unclosed character literal
        else if (function = 'decrypt') {
                                    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"134";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_01_19.262Z";"hw3.java";"137";" class, interface, or enum expected
        }
        ^
48 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_30_38.310Z";"hw3.java";"28";" '.class' expected
        return symbolArray[]; 
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_30_38.310Z";"hw3.java";"112";" ';' expected
            three = String key;
                          ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_30_38.310Z";"hw3.java";"112";" not a statement
            three = String key;
                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_30_38.310Z";"hw3.java";"115";" ';' expected
            three = String resultFile; 
                          ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_30_38.310Z";"hw3.java";"115";" not a statement
            three = String resultFile; 
                           ^
5 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_42_14.878Z";"hw3.java";"28";" '.class' expected
        return symbolArray[]; 
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_42_14.878Z";"hw3.java";"112";" ';' expected
            three = String key;
                          ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_42_14.878Z";"hw3.java";"112";" not a statement
            three = String key;
                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_42_14.878Z";"hw3.java";"115";" ';' expected
            three = String resultFile; 
                          ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T03_42_14.878Z";"hw3.java";"115";" not a statement
            three = String resultFile; 
                           ^
5 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T04_14_04.233Z";"hw3.java";"24";" ')' expected
            symbolArray[i] = Integer.parseInt(str.charAt(i););
                                                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T04_14_04.233Z";"hw3.java";"24";" illegal start of expression
            symbolArray[i] = Integer.parseInt(str.charAt(i););
                                                            ^
2 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T04_47_55.863Z";"hw3.java";"42";" '.class' expected
            char w = char(symbols[i]);
                         ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T04_47_55.863Z";"hw3.java";"42";" not a statement
            char w = char(symbols[i]);
                                 ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T04_47_55.863Z";"hw3.java";"42";" ';' expected
            char w = char(symbols[i]);
                                    ^
3 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T13_54_44.568Z";"hw3.java";"114";" cannot find symbol
            for (int i = 0; i < str.length; i++) {
                                ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T13_54_44.568Z";"hw3.java";"116";" cannot find symbol
                System.out.println(symbolArray[i]);
                                   ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T16_56_50.549Z";"hw3.java";"116";" '.class' expected
        stringToSymbolArray('CONSUL') = int[] res = ;
                                              ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T16_56_50.549Z";"hw3.java";"116";" illegal start of expression
        stringToSymbolArray('CONSUL') = int[] res = ;
                                                  ^
2 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"70";" illegal start of expression
        public static int unshift(int symbol, int offset) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"70";" illegal start of expression
        public static int unshift(int symbol, int offset) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"70";" ';' expected
        public static int unshift(int symbol, int offset) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"70";" '.class' expected
        public static int unshift(int symbol, int offset) {
                                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"70";" ';' expected
        public static int unshift(int symbol, int offset) {
                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"70";" ';' expected
        public static int unshift(int symbol, int offset) {
                                                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" illegal start of expression
        public static String encrypt(String message, int key) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" illegal start of expression
        public static String encrypt(String message, int key) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" ';' expected
        public static String encrypt(String message, int key) {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" ')' expected
        public static String encrypt(String message, int key) {
                                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" illegal start of expression
        public static String encrypt(String message, int key) {
                                                   ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" ';' expected
        public static String encrypt(String message, int key) {
                                                    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" not a statement
        public static String encrypt(String message, int key) {
                                                         ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"85";" ';' expected
        public static String encrypt(String message, int key) {
                                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" illegal start of expression
        public static String decrypt(String cipher, int key) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" illegal start of expression
        public static String decrypt(String cipher, int key) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" ';' expected
        public static String decrypt(String cipher, int key) {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" ')' expected
        public static String decrypt(String cipher, int key) {
                                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" illegal start of expression
        public static String decrypt(String cipher, int key) {
                                                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" ';' expected
        public static String decrypt(String cipher, int key) {
                                                   ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" not a statement
        public static String decrypt(String cipher, int key) {
                                                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"93";" ';' expected
        public static String decrypt(String cipher, int key) {
                                                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" ';' expected
        public static double[] getDictionaryFrequencies(String filename) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" ';' expected
        public static double[] getDictionaryFrequencies(String filename) {
                             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" ')' expected
        public static double[] getDictionaryFrequencies(String filename) {
                                                              ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
                                                                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"101";" ';' expected
        public static double[] getDictionaryFrequencies(String filename) {
                                                                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T17_30_20.181Z";"hw3.java";"127";" '.class' expected
            stringToSymbolArray('CONSUL') = int[] res;
                                                  ^
31 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"70";" illegal start of expression
        public static int unshift(int symbol, int offset) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"70";" illegal start of expression
        public static int unshift(int symbol, int offset) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"70";" ';' expected
        public static int unshift(int symbol, int offset) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"70";" '.class' expected
        public static int unshift(int symbol, int offset) {
                                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"70";" ';' expected
        public static int unshift(int symbol, int offset) {
                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"70";" ';' expected
        public static int unshift(int symbol, int offset) {
                                                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" illegal start of expression
        public static String encrypt(String message, int key) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" illegal start of expression
        public static String encrypt(String message, int key) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" ';' expected
        public static String encrypt(String message, int key) {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" ')' expected
        public static String encrypt(String message, int key) {
                                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" illegal start of expression
        public static String encrypt(String message, int key) {
                                                   ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" ';' expected
        public static String encrypt(String message, int key) {
                                                    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" not a statement
        public static String encrypt(String message, int key) {
                                                         ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"85";" ';' expected
        public static String encrypt(String message, int key) {
                                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" illegal start of expression
        public static String decrypt(String cipher, int key) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" illegal start of expression
        public static String decrypt(String cipher, int key) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" ';' expected
        public static String decrypt(String cipher, int key) {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" ')' expected
        public static String decrypt(String cipher, int key) {
                                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" illegal start of expression
        public static String decrypt(String cipher, int key) {
                                                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" ';' expected
        public static String decrypt(String cipher, int key) {
                                                   ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" not a statement
        public static String decrypt(String cipher, int key) {
                                                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"93";" ';' expected
        public static String decrypt(String cipher, int key) {
                                                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
               ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" ';' expected
        public static double[] getDictionaryFrequencies(String filename) {
                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" ';' expected
        public static double[] getDictionaryFrequencies(String filename) {
                             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" ')' expected
        public static double[] getDictionaryFrequencies(String filename) {
                                                              ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" illegal start of expression
        public static double[] getDictionaryFrequencies(String filename) {
                                                                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T19_47_48.427Z";"hw3.java";"101";" ';' expected
        public static double[] getDictionaryFrequencies(String filename) {
                                                                        ^
30 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_00_38.479Z";"hw3.java";"89";" cannot find symbol
                for (int i = 0; i < box.length(); i++) {
                                       ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_00_38.479Z";"hw3.java";"93";" cannot find symbol
                    et = symbol1 + et;
                         ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_00_38.479Z";"hw3.java";"96";" cannot find symbol
        return et;
               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_00_38.479Z";"hw3.java";"104";" cannot find symbol
        for (int i = 0; i < kap.length(); i++) {
                               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_00_38.479Z";"hw3.java";"107";" cannot find symbol
            ex = symbol2 + ex;
                 ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_00_38.479Z";"hw3.java";"109";" cannot find symbol
        return ex;
               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_30_24.050Z";"hw3.java";"89";" cannot find symbol
                for (int i = 0; i < box.length(); i++) {
                                       ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_30_24.050Z";"hw3.java";"93";" cannot find symbol
                    et = symbol + et;
                         ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_30_24.050Z";"hw3.java";"96";" cannot find symbol
        return et;
               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_30_24.050Z";"hw3.java";"104";" cannot find symbol
        for (int i = 0; i < kap.length(); i++) {
                               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_30_24.050Z";"hw3.java";"107";" cannot find symbol
            ex = symbol2 + ex;
                 ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_30_24.050Z";"hw3.java";"109";" cannot find symbol
        return ex;
               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_40_27.545Z";"hw3.java";"89";" cannot find symbol
                for (int i = 0; i < box.length(); i++) {
                                       ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_40_27.545Z";"hw3.java";"93";" cannot find symbol
                    et = symbol + et;
                         ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_40_27.545Z";"hw3.java";"96";" cannot find symbol
        return et;
               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_40_27.545Z";"hw3.java";"104";" cannot find symbol
        for (int i = 0; i < kap.length(); i++) {
                               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_40_27.545Z";"hw3.java";"107";" cannot find symbol
            ex = symbol2 + ex;
                 ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T22_40_27.545Z";"hw3.java";"109";" cannot find symbol
        return ex;
               ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-07T23_03_20.039Z";"hw3.java";"92";" ';' expected
            int et = symbol
                           ^
1 error
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T00_02_14.920Z";"hw3.java";"97";" cannot find symbol
        for (int i = 0; i < symbolArray.length; i++) {
                            ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T00_02_14.920Z";"hw3.java";"98";" cannot find symbol
            symbolArray[i] = shift(symbolArray[i], key);
            ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T00_02_14.920Z";"hw3.java";"98";" cannot find symbol
            symbolArray[i] = shift(symbolArray[i], key);
                                   ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T00_02_14.920Z";"hw3.java";"100";" cannot find symbol
        String k = symbolArrayToString(symbolArray);      
                                       ^
  symbol"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T14_24_08.940Z";"hw3.java";"137";" not a statement
            str.charAt[i]
                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T14_24_08.940Z";"hw3.java";"137";" ';' expected
            str.charAt[i]
                         ^
2 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"143";" illegal start of type
       return res;
       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"143";" ';' expected
       return res;
             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"149";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"152";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"154";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"157";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"158";" class, interface, or enum expected
        String three = args[2];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"195";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"197";" class, interface, or enum expected
            String message = inStream.readAll();
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"198";" class, interface, or enum expected
            int key = Integer.parseInt(three);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"199";" class, interface, or enum expected
            String fin = encrypt(message, key);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"200";" class, interface, or enum expected
            System.out.println(fin);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"201";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"204";" class, interface, or enum expected
            String cipher = inStream.readAll();
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"205";" class, interface, or enum expected
            int key = Integer.parseInt(three);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"206";" class, interface, or enum expected
            String fin = decrypt(cipher, key);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"207";" class, interface, or enum expected
            System.out.println(fin);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T16_15_59.020Z";"hw3.java";"208";" class, interface, or enum expected
        }
        ^
18 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"140";" class expected
           res[i] = double.parseDouble(let) / symbols.length;
                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"140";" ';' expected
           res[i] = double.parseDouble(let) / symbols.length;
                                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"140";" not a statement
           res[i] = double.parseDouble(let) / symbols.length;
                                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"140";" ';' expected
           res[i] = double.parseDouble(let) / symbols.length;
                                          ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"140";" not a statement
           res[i] = double.parseDouble(let) / symbols.length;
                                                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"145";" illegal start of type
       return res;
       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"145";" ';' expected
       return res;
             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"151";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"152";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) {
                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"152";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) {
                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"154";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"156";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"158";" class, interface, or enum expected
    public static String crack(String filename) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"159";" class, interface, or enum expected
        for (int i = 0; i < 25; i ++) {
                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"159";" class, interface, or enum expected
        for (int i = 0; i < 25; i ++) {
                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"161";" class, interface, or enum expected
        int[] symbols = stringToSymbolArray(filename);
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"162";" class, interface, or enum expected
        double[] res = findFrequencies(symbols); 
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"163";" class, interface, or enum expected
        scoreFrequencies(df, res);
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"164";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"167";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"169";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"172";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"173";" class, interface, or enum expected
        String three = args[2];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"210";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"212";" class, interface, or enum expected
            String message = inStream.readAll();
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"213";" class, interface, or enum expected
            int key = Integer.parseInt(three);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"214";" class, interface, or enum expected
            String fin = encrypt(message, key);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"215";" class, interface, or enum expected
            System.out.println(fin);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"216";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"219";" class, interface, or enum expected
            String cipher = inStream.readAll();
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"220";" class, interface, or enum expected
            int key = Integer.parseInt(three);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"221";" class, interface, or enum expected
            String fin = decrypt(cipher, key);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"222";" class, interface, or enum expected
            System.out.println(fin);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"223";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_03_25.442Z";"hw3.java";"226";" class, interface, or enum expected
                       }
                       ^
35 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"140";" class expected
           res[i] = double.parseDouble(let) / symbols.length;
                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"140";" ';' expected
           res[i] = double.parseDouble(let) / symbols.length;
                                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"140";" not a statement
           res[i] = double.parseDouble(let) / symbols.length;
                                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"140";" ';' expected
           res[i] = double.parseDouble(let) / symbols.length;
                                          ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"140";" not a statement
           res[i] = double.parseDouble(let) / symbols.length;
                                                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"145";" illegal start of type
       return res;
       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"145";" ';' expected
       return res;
             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"151";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"152";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) {
                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"152";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) {
                                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"154";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"156";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"158";" class, interface, or enum expected
    public static String crack(String filename) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"159";" class, interface, or enum expected
        for (int i = 0; i < 25; i ++) {
                        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"159";" class, interface, or enum expected
        for (int i = 0; i < 25; i ++) {
                                ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"161";" class, interface, or enum expected
        int[] symbols = stringToSymbolArray(filename);
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"162";" class, interface, or enum expected
        double[] res = findFrequencies(symbols); 
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"163";" class, interface, or enum expected
        double sf = scoreFrequencies(df, res);
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"164";" class, interface, or enum expected
            double bm = 1;
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"165";" class, interface, or enum expected
            while (sf < bm) {
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"167";" class, interface, or enum expected
            }
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"170";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"173";" class, interface, or enum expected
    }
    ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"175";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"178";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"179";" class, interface, or enum expected
        String three = args[2];
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"216";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"218";" class, interface, or enum expected
            String message = inStream.readAll();
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"219";" class, interface, or enum expected
            int key = Integer.parseInt(three);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"220";" class, interface, or enum expected
            String fin = encrypt(message, key);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"221";" class, interface, or enum expected
            System.out.println(fin);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"222";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"225";" class, interface, or enum expected
            String cipher = inStream.readAll();
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"226";" class, interface, or enum expected
            int key = Integer.parseInt(three);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"227";" class, interface, or enum expected
            String fin = decrypt(cipher, key);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"228";" class, interface, or enum expected
            System.out.println(fin);
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"229";" class, interface, or enum expected
        }
        ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"232";" class, interface, or enum expected
            String filename = inStream.readAll(); 
            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"233";" class, interface, or enum expected
                            String code = crack(filename);
                            ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"234";" class, interface, or enum expected
                             System.out.println(code);
                             ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T17_34_35.758Z";"hw3.java";"236";" class, interface, or enum expected
                       }
                       ^
41 errors
"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T18_32_36.408Z";"hw3.java";"140";" class expected
           res[i] = double.parseDouble(let) / symbols.length;
                           ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T18_32_36.408Z";"hw3.java";"140";" ';' expected
           res[i] = double.parseDouble(let) / symbols.length;
                                      ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T18_32_36.408Z";"hw3.java";"140";" not a statement
           res[i] = double.parseDouble(let) / symbols.length;
                                       ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T18_32_36.408Z";"hw3.java";"140";" ';' expected
           res[i] = double.parseDouble(let) / symbols.length;
                                          ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T18_32_36.408Z";"hw3.java";"140";" not a statement
           res[i] = double.parseDouble(let) / symbols.length;
                                                     ^
/"
"34be5a53134a4e68dae61bf2fac1ba4c91030569";"2020-10-08T18_32_36.408Z";"hw3.java";"169";" not a statement
            bm;
            ^
6 errors
"
"36705719323335eb34505b09f49cefde478d0252";"2020-10-07T01_10_20.273Z";"hw3.java";"80";" illegal start of expression
        return null;
        ^
/"
"36705719323335eb34505b09f49cefde478d0252";"2020-10-07T01_10_20.273Z";"hw3.java";"80";" not a statement
        return null;
               ^
2 errors
"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_36_51.383Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
            ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_36_51.383Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
                   ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_36_51.383Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
                           ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_36_51.383Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
                                     ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_36_51.383Z";"hw3.java";"28";" method stringToSymbolArray in class Caesar cannot be applied to given types;
            stringToSymbolArray();  
            ^
  required"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_36_51.383Z";"hw3.java";"34";" method stringToSymbolArray in class Caesar cannot be applied to given types;
       stringToSymbolArray();     
       ^
  required"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_53_50.754Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
            ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_53_50.754Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
                   ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_53_50.754Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
                           ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_53_50.754Z";"hw3.java";"27";" cannot find symbol
        for(i = 0; i <= str.length ; i++){
                                     ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_53_50.754Z";"hw3.java";"28";" method stringToSymbolArray in class Caesar cannot be applied to given types;
            stringToSymbolArray();  
            ^
  required"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T18_53_50.754Z";"hw3.java";"34";" method stringToSymbolArray in class Caesar cannot be applied to given types;
       stringToSymbolArray();     
       ^
  required"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T20_45_53.762Z";"hw3.java";"45";" cannot find symbol
        int symbolsLength = symbols.length();
                                   ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T20_45_53.762Z";"hw3.java";"47";" cannot find symbol
        for (i = 0; i < symbolsLength; i++){
             ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T20_45_53.762Z";"hw3.java";"47";" cannot find symbol
        for (i = 0; i < symbolsLength; i++){
                    ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T20_45_53.762Z";"hw3.java";"47";" cannot find symbol
        for (i = 0; i < symbolsLength; i++){
                                       ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T20_45_53.762Z";"hw3.java";"48";" cannot find symbol
            message += (char) symbols[i] + 'A';
                                      ^
  symbol"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"46";" <identifier> expected
        System.out.println(message);
                          ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"46";" <identifier> expected
        System.out.println(message);
                                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"47";" illegal start of type
        return message;
        ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"47";" ';' expected
        return message;
              ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"53";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"56";" class, interface, or enum expected
    }
    ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"61";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"64";" class, interface, or enum expected
    }
    ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"69";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"72";" class, interface, or enum expected
    }
    ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"77";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"80";" class, interface, or enum expected
    }
    ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"85";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"88";" class, interface, or enum expected
    }
    ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"93";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"101";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"104";" class, interface, or enum expected
    }
    ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"106";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"112";" class, interface, or enum expected
        String message = symbolArrayToString(stringToSymbolArray('CONSUL'));
        ^
/"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-05T21_02_30.428Z";"hw3.java";"117";" class, interface, or enum expected
    }
    ^
21 errors
"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-08T20_37_51.169Z";"hw3.java";"57";" bad operand types for binary operator '<='
            if (0 <= symbol + offset <= 25){
                                     ^
  first type"
"36e1da1b027e8da8c46ffbb07b0a8d1e7d197a86";"2020-10-08T20_37_51.169Z";"hw3.java";"75";" unexpected type
            if ((symbol - offset) % 25 = 0){
                                  ^
  required"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"19";" ';' expected
    public static int[] stringToSymbolArray(String str) 
                                                       ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"32";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"35";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"40";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"43";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"48";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"51";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"56";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"59";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"64";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"67";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"72";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"75";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"80";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"83";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"88";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"91";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-05T05_08_09.368Z";"hw3.java";"93";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
18 errors
"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"19";" ';' expected
    public static int[] stringToSymbolArray(String str) 
                                                       ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"35";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"38";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"43";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"46";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"51";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"54";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"59";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"62";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"67";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"70";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"75";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"78";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"83";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"86";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"91";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"94";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T03_55_11.834Z";"hw3.java";"96";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
18 errors
"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"19";" ';' expected
    public static int[] stringToSymbolArray(String str) 
                                                       ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"36";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"39";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"44";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"47";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"52";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"55";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"60";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"63";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"68";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"71";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"76";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"79";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"84";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"87";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"92";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"95";" class, interface, or enum expected
    }
    ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T19_00_52.657Z";"hw3.java";"97";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
18 errors
"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T21_36_57.440Z";"hw3.java";"65";" unreachable statement
        return null;
        ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T21_36_57.440Z";"hw3.java";"51";" variable stringOfSymbolArray might not have been initialized
            stringOfSymbolArray = stringOfSymbolArray + current;
                                  ^
/"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-06T21_36_57.440Z";"hw3.java";"57";" variable stringOfSymbolArray might not have been initialized
        return stringOfSymbolArray;
               ^
3 errors
"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-09T00_35_44.173Z";"hw3.java";"151";" cannot find symbol
        return decrypt;
               ^
  symbol"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-09T01_41_57.554Z";"hw3.java";"217";" cannot find symbol
        File newTextFile = new File('newmessage.txt');
        ^
  symbol"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-09T01_41_57.554Z";"hw3.java";"217";" cannot find symbol
        File newTextFile = new File('newmessage.txt');
                               ^
  symbol"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-09T01_41_57.554Z";"hw3.java";"218";" cannot find symbol
        FileWriter fw = new FileWriter(newTextFile);
        ^
  symbol"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-09T01_41_57.554Z";"hw3.java";"218";" cannot find symbol
        FileWriter fw = new FileWriter(newTextFile);
                            ^
  symbol"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-10T15_42_54.309Z";"hw3.java";"199";" cannot find symbol
                key = i;
                ^
  symbol"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-10T15_42_54.309Z";"hw3.java";"203";" cannot find symbol
        return decrypt(cipher, key);
                               ^
  symbol"
"3822f5f3419d90d1d6abd392e34252539867b977";"2020-10-10T15_56_57.741Z";"hw3.java";"270";" ';' expected
                String englishFile = args[2]
                                            ^
1 error
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T02_45_23.869Z";"hw3.java";"42";" <identifier> expected
        int [] symbols = new 
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T02_45_23.869Z";"hw3.java";"43";" '(' or '[' expected
        for (int i = 0; i < array.length(); i++) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T02_45_23.869Z";"hw3.java";"43";" ';' expected
        for (int i = 0; i < array.length(); i++) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T02_45_23.869Z";"hw3.java";"43";" > expected
        for (int i = 0; i < array.length(); i++) {
                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T02_45_23.869Z";"hw3.java";"43";" not a statement
        for (int i = 0; i < array.length(); i++) {
                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T02_45_23.869Z";"hw3.java";"43";" illegal start of expression
        for (int i = 0; i < array.length(); i++) {
                                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T02_45_23.869Z";"hw3.java";"43";" ';' expected
        for (int i = 0; i < array.length(); i++) {
                                               ^
7 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T03_22_34.955Z";"hw3.java";"41";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T03_22_34.955Z";"hw3.java";"42";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T03_22_34.955Z";"hw3.java";"43";" cannot find symbol
            String currInt = (String) symbols.charAt(i) + 'A';
                                             ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T03_22_34.955Z";"hw3.java";"44";" array required, but String found
            symbToStr[i] = currInt;
                     ^
4 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T22_01_49.946Z";"hw3.java";"27";" ';' expected
                System.out.print ln(currChar);
                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T22_01_49.946Z";"hw3.java";"27";" not a statement
                System.out.print ln(currChar);
                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T22_01_49.946Z";"hw3.java";"27";" ';' expected
                System.out.print ln(currChar);
                                            ^
3 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T22_29_03.588Z";"hw3.java";"109";" ']' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]));
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T22_29_03.588Z";"hw3.java";"109";" ')' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]));
                                                                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T22_29_03.588Z";"hw3.java";"109";" ';' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]));
                                                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T22_29_03.588Z";"hw3.java";"109";" illegal start of expression
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]));
                                                                           ^
4 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T23_02_26.394Z";"hw3.java";"111";" ']' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]);
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T23_02_26.394Z";"hw3.java";"111";" ')' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]);
                                                                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-07T23_02_26.394Z";"hw3.java";"111";" ';' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]);
                                                                          ^
3 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T18_02_07.958Z";"hw3.java";"112";" ']' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]);
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T18_02_07.958Z";"hw3.java";"112";" ')' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]);
                                                                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T18_02_07.958Z";"hw3.java";"112";" ';' expected
        System.out.println(symbolArrayToString(int [2, 14, 13, 18, 20, 11]);
                                                                          ^
3 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"64";" illegal start of expression
            if ()
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"65";" illegal start of expression
                += 
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"66";" illegal start of expression
            else ()
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"66";" -> expected
            else ()
                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"67";" illegal start of expression
                +=
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"66";" not a statement
            else ()
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"67";" ';' expected
                +=
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"77";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"77";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"77";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T19_27_16.667Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
37 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"62";" not a statement
        int 
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"62";" ';' expected
        int 
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"64";" illegal start of expression
            if ()
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"65";" illegal start of expression
                += 
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"66";" illegal start of expression
            else
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"67";" illegal start of expression
                +=
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"67";" ';' expected
                +=
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"83";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"83";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"83";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_22_47.996Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
37 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"63";" illegal start of expression
        for (int i = 0; i < symbol.length; i++) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"63";" ')' expected
        for (int i = 0; i < symbol.length; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"63";" not a statement
        for (int i = 0; i < symbol.length; i++) {
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"63";" > expected
        for (int i = 0; i < symbol.length; i++) {
                                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"63";" not a statement
        for (int i = 0; i < symbol.length; i++) {
                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"63";" ';' expected
        for (int i = 0; i < symbol.length; i++) {
                                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"64";" illegal start of expression
            if ()
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"65";" illegal start of expression
                += 
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"66";" illegal start of expression
            else
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"67";" illegal start of expression
                +=
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"67";" ';' expected
                +=
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"83";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"83";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"83";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"83";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T20_35_54.161Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
41 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T21_33_45.779Z";"hw3.java";"62";" not a statement
        int 
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T21_33_45.779Z";"hw3.java";"62";" ';' expected
        int 
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T21_33_45.779Z";"hw3.java";"68";" 'else' without 'if'
            else;
            ^
3 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T21_53_09.882Z";"hw3.java";"64";" ';' expected
                int newPos = (symbol - offset) % 26
                                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-08T21_53_09.882Z";"hw3.java";"66";" 'else' without 'if'
            else;
            ^
2 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_01_21.956Z";"hw3.java";"64";" ';' expected
                int newPos = (symbol + offset + 26) % 26
                                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_01_21.956Z";"hw3.java";"66";" 'else' without 'if'
            else;
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_01_21.956Z";"hw3.java";"83";" ';' expected
                int newPos = (symbol + offset) % 26
                                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_01_21.956Z";"hw3.java";"85";" 'else' without 'if'
            else;
            ^
4 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_27_20.156Z";"hw3.java";"64";" ';' expected
                int newPos = (symbol + offset + 26) % 26
                                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_27_20.156Z";"hw3.java";"66";" 'else' without 'if'
            else;
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_27_20.156Z";"hw3.java";"83";" ';' expected
                int newPos = (symbol + offset) % 26
                                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T01_27_20.156Z";"hw3.java";"85";" 'else' without 'if'
            else;
            ^
4 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_21_34.904Z";"hw3.java";"62";" ';' expected
                int newPos = (symbol + offset + 25) % 25
                                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_21_34.904Z";"hw3.java";"64";" 'else' without 'if'
            else;
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_21_34.904Z";"hw3.java";"141";" ';' expected
        inStream.readAll()
                          ^
3 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"62";" ';' expected
                int newPos = (symbol + offset + 25) % 25
                                                        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"64";" 'else' without 'if'
            else;
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" illegal start of type
        for (int i = 0; i < message.length; i++) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" ')' expected
        for (int i = 0; i < message.length; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                      ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" ';' expected
        for (int i = 0; i < message.length; i++) {
                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" > expected
        for (int i = 0; i < message.length; i++) {
                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" '(' expected
        for (int i = 0; i < message.length; i++) {
                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"92";" ';' expected
        for (int i = 0; i < message.length; i++) {
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"93";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"93";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"93";" invalid method declaration; return type required
            messageEncrypted[i] = shift(message[i], key);
                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"93";" ']' expected
            messageEncrypted[i] = shift(message[i], key);
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"93";" ')' expected
            messageEncrypted[i] = shift(message[i], key);
                                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"93";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"93";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"96";" class, interface, or enum expected
        return symbolArrayToString(messageEncrypted);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"97";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"106";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"108";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"113";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"116";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"121";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"124";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"129";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"132";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"134";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"137";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"138";" class, interface, or enum expected
        String key = Int.parseInt(args[2]);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"141";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"143";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"145";" class, interface, or enum expected
            System.out.println(encrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"146";" class, interface, or enum expected
        }
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"149";" class, interface, or enum expected
            System.out.println(decrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T03_51_25.272Z";"hw3.java";"150";" class, interface, or enum expected
        }
        ^
39 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"61";" ';' expected
            int newPos = (symbol + offset + 26) % 26
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" illegal start of type
        for (int i = 0; i < message.length; i++) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" ')' expected
        for (int i = 0; i < message.length; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                      ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" ';' expected
        for (int i = 0; i < message.length; i++) {
                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" > expected
        for (int i = 0; i < message.length; i++) {
                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" '(' expected
        for (int i = 0; i < message.length; i++) {
                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"93";" ';' expected
        for (int i = 0; i < message.length; i++) {
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"94";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"94";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"94";" invalid method declaration; return type required
            messageEncrypted[i] = shift(message[i], key);
                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"94";" ']' expected
            messageEncrypted[i] = shift(message[i], key);
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"94";" ')' expected
            messageEncrypted[i] = shift(message[i], key);
                                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"94";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"94";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"97";" class, interface, or enum expected
        return symbolArrayToString(messageEncrypted);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"98";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"107";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"114";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"117";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"122";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"125";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"130";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"133";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"135";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"138";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"139";" class, interface, or enum expected
        String key = Int.parseInt(args[2]);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"142";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"144";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"146";" class, interface, or enum expected
            System.out.println(encrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"147";" class, interface, or enum expected
        }
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"150";" class, interface, or enum expected
            System.out.println(decrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_38_20.773Z";"hw3.java";"151";" class, interface, or enum expected
        }
        ^
38 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"59";" ';' expected
            int newPos = (symbol + offset + 26) % 26
                                                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" illegal start of type
        for (int i = 0; i < message.length; i++) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" ')' expected
        for (int i = 0; i < message.length; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                      ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" ';' expected
        for (int i = 0; i < message.length; i++) {
                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" > expected
        for (int i = 0; i < message.length; i++) {
                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" '(' expected
        for (int i = 0; i < message.length; i++) {
                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"91";" ';' expected
        for (int i = 0; i < message.length; i++) {
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"92";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"92";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"92";" invalid method declaration; return type required
            messageEncrypted[i] = shift(message[i], key);
                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"92";" ']' expected
            messageEncrypted[i] = shift(message[i], key);
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"92";" ')' expected
            messageEncrypted[i] = shift(message[i], key);
                                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"92";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"92";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"95";" class, interface, or enum expected
        return symbolArrayToString(messageEncrypted);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"105";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"107";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"112";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"115";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"120";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"123";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"128";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"131";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"133";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"136";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"137";" class, interface, or enum expected
        String key = Int.parseInt(args[2]);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"140";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"142";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"144";" class, interface, or enum expected
            System.out.println(encrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"145";" class, interface, or enum expected
        }
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"148";" class, interface, or enum expected
            System.out.println(decrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T04_51_42.205Z";"hw3.java";"149";" class, interface, or enum expected
        }
        ^
38 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" illegal start of type
        for (int i = 0; i < message.length; i++) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" ')' expected
        for (int i = 0; i < message.length; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                      ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" ';' expected
        for (int i = 0; i < message.length; i++) {
                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" > expected
        for (int i = 0; i < message.length; i++) {
                                   ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" '(' expected
        for (int i = 0; i < message.length; i++) {
                                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" illegal start of type
        for (int i = 0; i < message.length; i++) {
                                               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" <identifier> expected
        for (int i = 0; i < message.length; i++) {
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"91";" ';' expected
        for (int i = 0; i < message.length; i++) {
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"92";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"92";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"92";" invalid method declaration; return type required
            messageEncrypted[i] = shift(message[i], key);
                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"92";" ']' expected
            messageEncrypted[i] = shift(message[i], key);
                                                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"92";" ')' expected
            messageEncrypted[i] = shift(message[i], key);
                                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"92";" illegal start of type
            messageEncrypted[i] = shift(message[i], key);
                                                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"92";" ';' expected
            messageEncrypted[i] = shift(message[i], key);
                                                       ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"95";" class, interface, or enum expected
        return symbolArrayToString(messageEncrypted);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"105";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"107";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"112";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"115";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"120";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"123";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"128";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"131";" class, interface, or enum expected
    }
    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"133";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"136";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"137";" class, interface, or enum expected
        String key = Int.parseInt(args[2]);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"140";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"142";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"144";" class, interface, or enum expected
            System.out.println(encrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"145";" class, interface, or enum expected
        }
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"148";" class, interface, or enum expected
            System.out.println(decrypted);
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_05_04.819Z";"hw3.java";"149";" class, interface, or enum expected
        }
        ^
37 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_36_41.289Z";"hw3.java";"145";" '(' expected
        if else (function.equals('decrypt')) {
          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_36_41.289Z";"hw3.java";"145";" illegal start of expression
        if else (function.equals('decrypt')) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_36_41.289Z";"hw3.java";"145";" ')' expected
        if else (function.equals('decrypt')) {
               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T05_36_41.289Z";"hw3.java";"145";" ';' expected
        if else (function.equals('decrypt')) {
                                           ^
4 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_07_13.106Z";"hw3.java";"145";" '(' expected
        if else (function.equals('decrypt')) {
          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_07_13.106Z";"hw3.java";"145";" illegal start of expression
        if else (function.equals('decrypt')) {
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_07_13.106Z";"hw3.java";"145";" ')' expected
        if else (function.equals('decrypt')) {
               ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_07_13.106Z";"hw3.java";"145";" ';' expected
        if else (function.equals('decrypt')) {
                                           ^
4 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_46_09.310Z";"hw3.java";"88";" variable message is already defined in method encrypt(String,int)
        int[] message = stringToSymbolArray(message);
              ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_46_09.310Z";"hw3.java";"88";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_46_09.310Z";"hw3.java";"142";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T06_46_09.310Z";"hw3.java";"146";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" not a statement
        for (int = 0; i < 26; i++) {
             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" ';' expected
        for (int = 0; i < 26; i++) {
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" ';' expected
        for (int = 0; i < 26; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" ')' expected
        for (int = 0; i < 26; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" illegal start of type
        for (int = 0; i < 26; i++) {
                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" ';' expected
        for (int = 0; i < 26; i++) {
                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"136";" not a statement
            double 
            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"136";" ';' expected
            double 
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"138";" not a statement
                char 
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T19_26_08.719Z";"hw3.java";"138";" ';' expected
                char 
                    ^
14 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" not a statement
        for (int = 0; i < 26; i++) {
             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" ';' expected
        for (int = 0; i < 26; i++) {
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" ';' expected
        for (int = 0; i < 26; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" ')' expected
        for (int = 0; i < 26; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" illegal start of type
        for (int = 0; i < 26; i++) {
                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" ';' expected
        for (int = 0; i < 26; i++) {
                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"118";" illegal start of expression
        for (int = 0; i < 26; i++) {
                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"141";" illegal start of expression
                if ()
                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T20_18_50.537Z";"hw3.java";"142";" illegal start of statement
            }
            ^
12 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" not a statement
        for (int = 0; i < 26; i++) {
             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" ';' expected
        for (int = 0; i < 26; i++) {
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" illegal start of expression
        for (int = 0; i < 26; i++) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" ';' expected
        for (int = 0; i < 26; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" illegal start of expression
        for (int = 0; i < 26; i++) {
                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" ')' expected
        for (int = 0; i < 26; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" illegal start of type
        for (int = 0; i < 26; i++) {
                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" illegal start of expression
        for (int = 0; i < 26; i++) {
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" ';' expected
        for (int = 0; i < 26; i++) {
                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"119";" illegal start of expression
        for (int = 0; i < 26; i++) {
                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" not a statement
        for (int = 0; i < 26; i++) {
             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" ';' expected
        for (int = 0; i < 26; i++) {
                ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" illegal start of expression
        for (int = 0; i < 26; i++) {
                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" ';' expected
        for (int = 0; i < 26; i++) {
                  ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" illegal start of expression
        for (int = 0; i < 26; i++) {
                    ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" ')' expected
        for (int = 0; i < 26; i++) {
                     ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" illegal start of type
        for (int = 0; i < 26; i++) {
                          ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" illegal start of expression
        for (int = 0; i < 26; i++) {
                            ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" ';' expected
        for (int = 0; i < 26; i++) {
                             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"160";" illegal start of expression
        for (int = 0; i < 26; i++) {
                                 ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_22_11.266Z";"hw3.java";"166";" invalid method declaration; return type required
    public static crack(String cipher, double[] score) {
                  ^
21 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_37_30.677Z";"hw3.java";"90";" cannot find symbol
            for (int i = 0; i < messageInt.length; i++) {
                                ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_37_30.677Z";"hw3.java";"159";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_37_30.677Z";"hw3.java";"161";" bad operand types for binary operator '+'
            score += Math.abs(currentFreqs[i] - english[i]);
                  ^
  first type"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_37_30.677Z";"hw3.java";"163";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_37_30.677Z";"hw3.java";"177";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T21_37_30.677Z";"hw3.java";"182";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T22_13_21.733Z";"hw3.java";"167";" not a statement
        int 
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T22_13_21.733Z";"hw3.java";"167";" ';' expected
        int 
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T22_13_21.733Z";"hw3.java";"168";" not a statement
        int
        ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T22_13_21.733Z";"hw3.java";"168";" ';' expected
        int
           ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T22_13_21.733Z";"hw3.java";"195";" not a statement
        else (function.equals('crack')) {
             ^
/"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T22_13_21.733Z";"hw3.java";"195";" ';' expected
        else (function.equals('crack')) {
                                       ^
6 errors
"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_13_04.242Z";"hw3.java";"90";" cannot find symbol
            for (int i = 0; i < messageInt.length; i++) {
                                ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_13_04.242Z";"hw3.java";"159";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_13_04.242Z";"hw3.java";"161";" bad operand types for binary operator '+'
            score += Math.abs(currentFreqs[i] - english[i]);
                  ^
  first type"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_13_04.242Z";"hw3.java";"163";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_13_04.242Z";"hw3.java";"189";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_13_04.242Z";"hw3.java";"194";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_13_04.242Z";"hw3.java";"199";" cannot find symbol
            String cracked = crack(inStream.readAll(), getDictionaryFrequencies);
                                                       ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_40_59.069Z";"hw3.java";"141";" cannot find symbol
                    if (i == array) {
                             ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_40_59.069Z";"hw3.java";"164";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_40_59.069Z";"hw3.java";"166";" cannot find symbol
            score += Math.abs(currentFreqs[i] - english[i]);
            ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_40_59.069Z";"hw3.java";"168";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_40_59.069Z";"hw3.java";"202";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_40_59.069Z";"hw3.java";"207";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-09T23_40_59.069Z";"hw3.java";"212";" cannot find symbol
            String cracked = crack(inStream.readAll(), getDictionaryFrequencies);
                                                       ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"117";" cannot find symbol
        double[] frequency = new double[filename.length];
                                                ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"141";" cannot find symbol
                    if (i == array) {
                             ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"164";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"166";" cannot find symbol
            score += Math.abs(currentFreqs[i] - english[i]);
            ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"169";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"205";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"210";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T00_23_12.787Z";"hw3.java";"215";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T01_16_10.548Z";"hw3.java";"141";" cannot find symbol
                    if (i == array) {
                             ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T01_16_10.548Z";"hw3.java";"164";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T01_16_10.548Z";"hw3.java";"166";" bad operand types for binary operator '+'
            scoredFrq += Math.abs(currentFreqs[i] - english[i]);
                      ^
  first type"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T01_16_10.548Z";"hw3.java";"169";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T01_16_10.548Z";"hw3.java";"186";" cannot find symbol
            score[i] = scoreFrequencies(findFrequencies(posAdj), english);
                                                                 ^
  symbol"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T01_16_10.548Z";"hw3.java";"217";" incompatible types"
"38a2e1976989130b93cd07a1336fb4a7f6d78ccd";"2020-10-10T02_13_36.802Z";"hw3.java";"188";" method readAll in class In cannot be applied to given types;
                                        inStream.readAll(text));
                                                ^
  required"
"38da134c1fae87f8777176da8840445f10def983";"2020-10-04T22_58_01.185Z";"hw3.java";"73";" ';' expected
                symbol += offset % 25
                                     ^
1 error
"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-02T19_08_44.106Z";"hw3.java";"27";" ';' expected
        for (int i = 0; i < str.length)
                                      ^
1 error
"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-02T21_45_43.874Z";"hw3.java";"42";" cannot find symbol
            str2 = '' + String.parseString(symbols[i]);
                              ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-03T19_50_58.260Z";"hw3.java";"57";" ';' expected
        symbol = symbol   
                       ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-03T19_50_58.260Z";"hw3.java";"112";" illegal start of expression
        for (int i = 0; )
                        ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-03T19_50_58.260Z";"hw3.java";"118";" illegal start of expression
    }
    ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-03T19_50_58.260Z";"hw3.java";"118";" ')' expected
    }
     ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-03T19_50_58.260Z";"hw3.java";"119";" illegal start of statement
}
 ^
5 errors
"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"57";" cannot find symbol
        symbol = stringToSymbolArray (str);
                                      ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"58";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                            ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"59";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                          ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"59";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                                       ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"60";" array required, but int found
               symbol[i] = (symbol[i] + offset) % 26;
                     ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"60";" array required, but int found
               symbol[i] = (symbol[i] + offset) % 26;
                                  ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"74";" cannot find symbol
        symbol = stringToSymbolArray (str);
                                      ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"75";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                            ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"76";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                          ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"76";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                                       ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"77";" array required, but int found
               symbol[i] = (symbol[i] - offset) % 26;
                     ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T15_25_35.766Z";"hw3.java";"77";" array required, but int found
               symbol[i] = (symbol[i] - offset) % 26;
                                  ^
12 errors
"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"57";" cannot find symbol
        symbol = stringToSymbolArray(str);
                                     ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"58";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                            ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"59";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                          ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"59";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                                       ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"60";" array required, but int found
               symbol[i] = (symbol[i] + offset) % 26;
                     ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"60";" array required, but int found
               symbol[i] = (symbol[i] + offset) % 26;
                                  ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"74";" cannot find symbol
        symbol = stringToSymbolArray(str);
                                     ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"75";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                            ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"76";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                          ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"76";" array required, but int found
           if (64 < symbol[i] || symbol[i] < 91) {
                                       ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"77";" array required, but int found
               symbol[i] = (symbol[i] - offset) % 26;
                     ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-04T19_41_37.161Z";"hw3.java";"77";" array required, but int found
               symbol[i] = (symbol[i] - offset) % 26;
                                  ^
12 errors
"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-05T11_12_26.641Z";"hw3.java";"86";" cannot find symbol
        for (int i = 0; i < message.length; i++) {
                                   ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-05T11_12_26.641Z";"hw3.java";"87";" array required, but String found
            shift(message[i], key);
                         ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-05T11_12_26.641Z";"hw3.java";"89";" incompatible types"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-05T11_38_54.377Z";"hw3.java";"89";" cannot find symbol
        for (int i = 0; i < message.length; i++) {
                                   ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-05T11_38_54.377Z";"hw3.java";"90";" array required, but String found
            shift(message[i], key);
                         ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-05T11_38_54.377Z";"hw3.java";"92";" incompatible types"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-05T15_41_43.698Z";"hw3.java";"116";" cannot find symbol
        In instream = newIn (filename);
                      ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-06T14_06_49.022Z";"hw3.java";"155";" cannot find symbol
        english = getDictionaryFrequencies(filename);
                                           ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-06T14_06_49.022Z";"hw3.java";"156";" cannot find symbol
        currentFreqs = findFrequencies(stringToSymbolArray(str));
                                                           ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-06T15_21_50.435Z";"hw3.java";"155";" cannot find symbol
        english = getDictionaryFrequencies(english.txt);
                                                  ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-06T15_21_50.435Z";"hw3.java";"156";" cannot find symbol
        currentFreqs = findFrequencies(stringToSymbolArray(str));
                                                           ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-06T19_52_52.121Z";"hw3.java";"168";" unclosed comment
    /**
    ^
/"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-06T19_52_52.121Z";"hw3.java";"197";" reached end of file while parsing
}
 ^
2 errors
"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-06T20_13_44.181Z";"hw3.java";"174";" cannot find symbol
     public static string crack(String cipher) {
                   ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-07T04_02_03.787Z";"hw3.java";"163";" cannot find symbol
            score += Math.abs(currentFreqs[i] - e*glish[i]);
                                                ^
  symbol"
"3932b8c4b8eceb9304e1273203288b7344a72e1c";"2020-10-07T04_02_03.787Z";"hw3.java";"163";" cannot find symbol
            score += Math.abs(currentFreqs[i] - e*glish[i]);
                                                  ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-07T04_53_18.160Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < args.length(); i++) {
                            ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-07T04_53_18.160Z";"hw3.java";"44";" incompatible types"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-07T04_53_18.160Z";"hw3.java";"47";" cannot find symbol
        return str;
               ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T01_48_47.484Z";"hw3.java";"154";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T03_24_55.611Z";"hw3.java";"162";" cannot find symbol
        if (function.equals(encrypt)) { // if they call encrypt 
                            ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T03_24_55.611Z";"hw3.java";"163";" incompatible types"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T13_34_35.492Z";"hw3.java";"160";" ';' expected
        In inStream = new In(filename); // variable inStream reads file
          ^
1 error
"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T17_19_30.469Z";"hw3.java";"158";" incompatible types"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T19_44_28.437Z";"hw3.java";"151";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
             ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T19_44_28.437Z";"hw3.java";"151";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                    ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T19_44_28.437Z";"hw3.java";"151";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                                        ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T20_19_03.076Z";"hw3.java";"153";" ';' expected
            countSymbol[i] = countSymbol[i] + 1 
                                               ^
1 error
"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T21_58_27.454Z";"hw3.java";"153";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
             ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T21_58_27.454Z";"hw3.java";"153";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                    ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T21_58_27.454Z";"hw3.java";"153";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                                        ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T21_58_27.454Z";"hw3.java";"162";" cannot find symbol
            count[symbols[i]] = count[symbols[i]] + 1;
                          ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T21_58_27.454Z";"hw3.java";"162";" cannot find symbol
            count[symbols[i]] = count[symbols[i]] + 1;
                                              ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-08T23_33_40.992Z";"hw3.java";"189";" incompatible types"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-09T01_04_03.105Z";"hw3.java";"186";" incompatible types"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-09T01_04_03.105Z";"hw3.java";"187";" cannot find symbol
            double score = scoreFrequencies(getDictionaryFrequencies, allFreq);
                                            ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-09T02_08_24.754Z";"hw3.java";"191";" variable score is already defined in method crack(String)
            double score = scoreFrequencies(englishFreq, allFreq);
                   ^
1 error
"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-09T03_10_33.781Z";"hw3.java";"201";" cannot find symbol
        String crack = decrypt(file, i);
                                     ^
  symbol"
"39d054a15ed725d77edf691e802c5b3222f42c9f";"2020-10-09T21_33_05.627Z";"hw3.java";"205";" cannot find symbol
        String crack = symbolArrayToString(stringToSymbolArray(allDecrypt));
                                                               ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-06T22_05_31.524Z";"hw3.java";"31";" missing return statement
    }
    ^
1 error
"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T17_42_37.465Z";"hw3.java";"29";" cannot find symbol
           int symbol = (int) str.CharAt(i) - 'A';
                                 ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T17_42_37.465Z";"hw3.java";"54";" cannot find symbol
        int [] integer = new int [str.length ()];
                                  ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T21_10_24.689Z";"hw3.java";"37";" ';' expected
            int[] symbolArrayToString()
                                     ^
1 error
"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T21_56_15.813Z";"hw3.java";"29";" cannot find symbol
           int symbol = (int) str.CharAt(i) - 'A';
                                 ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T21_56_15.813Z";"hw3.java";"58";" cannot find symbol
        int [] integer = new int [str.length ()];
                                  ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T22_47_04.805Z";"hw3.java";"57";" cannot find symbol
        int[] symbol = new int[str.length()]; 
                               ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T22_47_04.805Z";"hw3.java";"58";" cannot find symbol
        str = str.toUpperCase();
        ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T22_47_04.805Z";"hw3.java";"58";" cannot find symbol
        str = str.toUpperCase();
              ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T22_47_04.805Z";"hw3.java";"61";" cannot find symbol
        for ( int i=0 ; i < str.length(); i++){
                            ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T22_47_04.805Z";"hw3.java";"62";" variable symbol is already defined in method symbolArrayToString(int[])
           int symbol = (int) str.charAt(i) + 'A';
               ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-07T22_47_04.805Z";"hw3.java";"62";" cannot find symbol
           int symbol = (int) str.charAt(i) + 'A';
                              ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T12_45_33.481Z";"hw3.java";"58";" ';' expected
         String str = ''
                        ^
1 error
"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"53";" ';' expected
         String str = ''
                        ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"77";" ';' expected
             int change = stringToSymbolArray(symbol) + offset
                                                              ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"106";" illegal start of type
    /
    ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"106";" ';' expected
    /
     ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"107";" <identifier> expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"107";" ';' expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"107";" <identifier> expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"108";" illegal start of type
    */
     ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"108";" <identifier> expected
    */
      ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"109";" ';' expected
    public static String encrypt(String message, int key) {
          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"111";" ')' expected
        for ( int i = 0; i<= message.length(); i++;) {
                                                  ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"111";" illegal start of expression
        for ( int i = 0; i<= message.length(); i++;) {
                                                   ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"123";" ')' expected
         for ( int i = 0; i<= message.length(); i++;) {
                                                   ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_21_55.212Z";"hw3.java";"123";" illegal start of expression
         for ( int i = 0; i<= message.length(); i++;) {
                                                    ^
14 errors
"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"53";" ';' expected
         String str = ''
                        ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"77";" ';' expected
             int change = stringToSymbolArray(symbol) + offset
                                                              ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"106";" illegal start of type
    /
    ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"106";" ';' expected
    /
     ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"107";" <identifier> expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"107";" ';' expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"107";" <identifier> expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"108";" illegal start of type
    */
     ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"108";" <identifier> expected
    */
      ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"109";" ';' expected
    public static String encrypt(String message, int key) {
          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"111";" ')' expected
        for ( int i = 0; i<= message.length(); i++;) {
                                                  ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"111";" illegal start of expression
        for ( int i = 0; i<= message.length(); i++;) {
                                                   ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"123";" ')' expected
         for ( int i = 0; i<= message.length(); i++;) {
                                                   ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"123";" illegal start of expression
         for ( int i = 0; i<= message.length(); i++;) {
                                                    ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"152";" ';' expected
        for(int i = 0; i < currentFreq.length)
                                             ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"156";" ';' expected
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"156";" variable declaration not allowed here
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
      ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"156";" <identifier> expected
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
                          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_41_09.849Z";"hw3.java";"156";" ';' expected
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
                                                                             ^
19 errors
"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"49";" ';' expected
         String str = ''
                        ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"73";" ';' expected
             int change = stringToSymbolArray(symbol) + offset
                                                              ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"102";" illegal start of type
    /
    ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"102";" ';' expected
    /
     ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"103";" <identifier> expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"103";" ';' expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"103";" <identifier> expected
    * TODO"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"104";" illegal start of type
    */
     ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"104";" <identifier> expected
    */
      ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"105";" ';' expected
    public static String encrypt(String message, int key) {
          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"107";" ')' expected
        for ( int i = 0; i<= message.length(); i++;) {
                                                  ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"107";" illegal start of expression
        for ( int i = 0; i<= message.length(); i++;) {
                                                   ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"119";" ')' expected
         for ( int i = 0; i<= message.length(); i++;) {
                                                   ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"119";" illegal start of expression
         for ( int i = 0; i<= message.length(); i++;) {
                                                    ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"148";" ';' expected
        for(int i = 0; i < currentFreq.length)
                                             ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"152";" ';' expected
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"152";" variable declaration not allowed here
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
      ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"152";" <identifier> expected
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
                          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T20_56_43.751Z";"hw3.java";"152";" ';' expected
      Math.abs(0.2 - 0.1). + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15
                                                                             ^
19 errors
"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"52";" incompatible types"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"70";" incompatible types"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"73";" incompatible types"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"76";" incompatible types"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"87";" missing method body, or declare abstract
    public static int unshift(int symbol, int offset); {
                      ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"88";" cannot find symbol
        if  ( symbol <= 25 && symbol >= 0){
              ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"88";" cannot find symbol
        if  ( symbol <= 25 && symbol >= 0){
                              ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"89";" cannot find symbol
          if (symbol - offset < 0) {
              ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"89";" cannot find symbol
          if (symbol - offset < 0) {
                       ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"90";" cannot find symbol
             int wrap = 25 + (symbol - offset);
                              ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"90";" cannot find symbol
             int wrap = 25 + (symbol - offset);
                                       ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"91";" cannot find symbol
               int change = wrap - offset ;
                                   ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"92";" cannot find symbol
               symbol = symbolArrayToString(change);
               ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"92";" incompatible types"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"94";" cannot find symbol
           symbol = symbol - offset;
           ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"94";" cannot find symbol
           symbol = symbol - offset;
                    ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"94";" cannot find symbol
           symbol = symbol - offset;
                             ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"99";" return outside method
      return symbol;
      ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"108";" array required, but String found
         message = message + shift(message[i], key);
                                          ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"119";" cannot find symbol
         for ( int i = 0; i<= message.length(); i++) {
                              ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"120";" array required, but String found
         cipher = cipher + unshift(cipher[i], key);
                                         ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"148";" cannot find symbol
        for(int i = 0; i < currentFreq.length; i++){
                           ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-08T22_50_13.993Z";"hw3.java";"153";" unexpected type
      Math.abs(0.2 - 0.1) + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15;
                                                ^
  required"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_40_39.813Z";"hw3.java";"155";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_40_39.813Z";"hw3.java";"126";" cannot find symbol
        In instream = new In(filename.txt );
                                     ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_40_39.813Z";"hw3.java";"143";" cannot find symbol
        for(int i = 0; i < currentFreq.length; i++){
                           ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_40_39.813Z";"hw3.java";"149";" unexpected type
      Math.abs(0.2 - 0.1) + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15;
                                                ^
  required"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_53_09.431Z";"hw3.java";"155";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_53_09.431Z";"hw3.java";"126";" cannot find symbol
        In instream = new In(filename.txt );
                                     ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_53_09.431Z";"hw3.java";"143";" cannot find symbol
        for(int i = 0; i < currentFreq.length; i++){
                           ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T01_53_09.431Z";"hw3.java";"149";" unexpected type
      Math.abs(0.2 - 0.1) + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15;
                                                ^
  required"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T02_52_41.019Z";"hw3.java";"179";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T02_52_41.019Z";"hw3.java";"136";" cannot find symbol
            frequencies[i] = inStream.readDouble();
                             ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T02_52_41.019Z";"hw3.java";"167";" cannot find symbol
        for(int i = 0; i < currentFreq.length; i++){
                           ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T02_52_41.019Z";"hw3.java";"173";" unexpected type
      Math.abs(0.2 - 0.1) + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15;
                                                ^
  required"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T03_04_38.955Z";"hw3.java";"179";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T03_04_38.955Z";"hw3.java";"136";" cannot find symbol
            frequencies[i] = inStream.readDouble();
                             ^
  symbol"
"39f90f24f85a2f93c9d839d03aba91f924f421b8";"2020-10-09T03_04_38.955Z";"hw3.java";"173";" unexpected type
      Math.abs(0.2 - 0.1) + Math.abs(0.1 - 0.1) + Math.abs(0.0 - 0.5) = 0.15;
                                                ^
  required"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T14_29_44.975Z";"hw3.java";"20";" <identifier> expected
    str = str.toUpperCase(); 
       ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T14_29_44.975Z";"hw3.java";"26";" ';' expected
        for (i = 0; i < str.length, i++){
                                  ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T14_29_44.975Z";"hw3.java";"26";" ')' expected
        for (i = 0; i < str.length, i++){
                                   ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T14_29_44.975Z";"hw3.java";"26";" illegal start of expression
        for (i = 0; i < str.length, i++){
                                       ^
4 errors
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T21_48_39.754Z";"hw3.java";"25";" cannot find symbol
        for (i = 0; i < str.length; i++){
             ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T21_48_39.754Z";"hw3.java";"25";" cannot find symbol
        for (i = 0; i < str.length; i++){
                    ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T21_48_39.754Z";"hw3.java";"25";" cannot find symbol
        for (i = 0; i < str.length; i++){
                           ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T21_48_39.754Z";"hw3.java";"25";" cannot find symbol
        for (i = 0; i < str.length; i++){
                                    ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T21_48_39.754Z";"hw3.java";"26";" cannot find symbol
            str.charAt(i); 
                       ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T21_48_39.754Z";"hw3.java";"27";" cannot find symbol
            int ourSymbolRepresentation = (int) letter - 'A'; 
                                                ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T21_48_39.754Z";"hw3.java";"27";" bad operand types for binary operator '-'
            int ourSymbolRepresentation = (int) letter - 'A'; 
                                                       ^
  first type"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T22_06_08.781Z";"hw3.java";"25";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T22_06_08.781Z";"hw3.java";"27";" bad operand types for binary operator '-'
            int ourSymbolRepresentation = str.charAt(i) - 'A'; 
                                                        ^
  first type"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T22_26_22.100Z";"hw3.java";"30";" bad operand types for binary operator '-'
            int ourSymbolRepresentation = (og - 'A'); 
                                              ^
  first type"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-08T23_53_58.161Z";"hw3.java";"118";" incompatible types"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T02_53_48.166Z";"hw3.java";"60";" ';' expected
            int temp = offset 
                             ^
1 error
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"71";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"83";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"91";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T03_54_39.629Z";"hw3.java";"99";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
30 errors
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"71";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"137";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"145";" illegal start of expression
        */
        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"145";" illegal start of expression
        */
         ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"147";" '.class' expected
        int g = unshift(shift(3, 5), 5); 
            ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"147";" illegal start of expression
        int g = unshift(shift(3, 5), 5); 
              ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"147";" ';' expected
        int g = unshift(shift(3, 5), 5); 
                       ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"147";" ';' expected
        int g = unshift(shift(3, 5), 5); 
                                   ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T04_11_56.743Z";"hw3.java";"152";" reached end of file while parsing
}
 ^
18 errors
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T06_22_37.546Z";"hw3.java";"170";" incompatible types"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T06_22_37.546Z";"hw3.java";"176";" incompatible types"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T06_22_37.546Z";"hw3.java";"180";" incompatible types"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T14_04_37.228Z";"hw3.java";"141";" illegal start of expression
        return englishFrequency;
        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T14_04_37.228Z";"hw3.java";"141";" not a statement
        return englishFrequency;
               ^
2 errors
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T20_46_42.283Z";"hw3.java";"200";" class, interface, or enum expected
}
^
1 error
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T22_25_37.279Z";"hw3.java";"184";" repeated modifier
    public static void main(String[] args) {
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T22_25_37.279Z";"hw3.java";"184";" repeated modifier
    public static void main(String[] args) {
           ^
2 errors
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"180";" ';' expected
    public static String crack(String cipher, String file) 
                                                          ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" illegal start of type
        for (int i = 0; i < allKeys.length; i++){
        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" ')' expected
        for (int i = 0; i < allKeys.length; i++){
                  ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" illegal start of type
        for (int i = 0; i < allKeys.length; i++){
                     ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" <identifier> expected
        for (int i = 0; i < allKeys.length; i++){
                      ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" ';' expected
        for (int i = 0; i < allKeys.length; i++){
                       ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" > expected
        for (int i = 0; i < allKeys.length; i++){
                                   ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" '(' expected
        for (int i = 0; i < allKeys.length; i++){
                                          ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" <identifier> expected
        for (int i = 0; i < allKeys.length; i++){
                                             ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" illegal start of type
        for (int i = 0; i < allKeys.length; i++){
                                               ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" <identifier> expected
        for (int i = 0; i < allKeys.length; i++){
                                                ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"185";" ';' expected
        for (int i = 0; i < allKeys.length; i++){
                                                 ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"187";" illegal start of type
            int[] ourSymbolRepresentation = decrypt(cipher, i); 
               ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"187";" <identifier> expected
            int[] ourSymbolRepresentation = decrypt(cipher, i); 
                ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"187";" ';' expected
            int[] ourSymbolRepresentation = decrypt(cipher, i); 
                 ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"187";" illegal start of type
            int[] ourSymbolRepresentation = decrypt(cipher, i); 
                                          ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"187";" <identifier> expected
            int[] ourSymbolRepresentation = decrypt(cipher, i); 
                                                          ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"187";" <identifier> expected
            int[] ourSymbolRepresentation = decrypt(cipher, i); 
                                                             ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" ']' expected
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                          ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" ';' expected
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                           ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" invalid method declaration; return type required
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                               ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" <identifier> expected
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                                                                        ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" ';' expected
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                                                                         ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" illegal start of type
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                                                                             ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" <identifier> expected
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                                                                              ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"189";" ';' expected
            absValueScore[i] = scoreFrequencies(getDictionaryFrequencies(file), 
                                                                               ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"190";" illegal start of type
                                               findFrequencies(symbols)); 
                                                              ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"190";" ';' expected
                                               findFrequencies(symbols)); 
                                                                      ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"202";" class, interface, or enum expected
    }
    ^
/"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-09T23_30_37.643Z";"hw3.java";"206";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
30 errors
"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-10T03_52_40.622Z";"hw3.java";"301";" cannot find symbol
            System.out.println(encrypt(cipher, key));
                                               ^
  symbol"
"3d5924dc0067c7236dc1c9317ce16d9c52cd3c14";"2020-10-10T03_52_40.622Z";"hw3.java";"305";" cannot find symbol
            System.out.println(decrypt(cipher, key));
                                               ^
  symbol"
"3e11348b68914f93fc74cde47fbcf05cc4b2867d";"2020-10-09T03_54_29.331Z";"hw3.java";"178";" cannot find symbol
        double[] dictFreq = getDictionaryFrequencies(english.txt);
                                                     ^
  symbol"
"3e11348b68914f93fc74cde47fbcf05cc4b2867d";"2020-10-09T03_54_29.331Z";"hw3.java";"179";" cannot find symbol
        double minScore = Double.Max_VALUE;
                                ^
  symbol"
"3e11348b68914f93fc74cde47fbcf05cc4b2867d";"2020-10-09T03_54_29.331Z";"hw3.java";"187";" incompatible types"
"3e11348b68914f93fc74cde47fbcf05cc4b2867d";"2020-10-09T03_54_29.331Z";"hw3.java";"189";" cannot find symbol
            if(testScore[i] < min) {
                              ^
  symbol"
"3e11348b68914f93fc74cde47fbcf05cc4b2867d";"2020-10-09T03_54_29.331Z";"hw3.java";"194";" incompatible types"
"3e153ba5e93176a5402d30722e402771b771bf55";"2020-10-06T15_53_03.600Z";"hw3.java";"148";" illegal start of expression
        System.out.println('24 shifted by one is"
"3e153ba5e93176a5402d30722e402771b771bf55";"2020-10-06T15_53_03.600Z";"hw3.java";"148";" ';' expected
        System.out.println('24 shifted by one is"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-05T11_31_22.380Z";"hw3.java";"106";" ';' expected
            H[i] = stringToSymbolArray[i](input);
                                         ^
/"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-05T11_31_22.380Z";"hw3.java";"106";" not a statement
            H[i] = stringToSymbolArray[i](input);
                                          ^
/"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-05T11_31_22.380Z";"hw3.java";"106";" ';' expected
            H[i] = stringToSymbolArray[i](input);
                                               ^
3 errors
"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-07T11_30_05.164Z";"hw3.java";"107";" ';' expected
        shift()
               ^
1 error
"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-08T18_08_44.611Z";"hw3.java";"185";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-09T00_41_03.312Z";"hw3.java";"255";" cannot find symbol
        for (int i = 0; i < args.length(); i++) {
                                ^
  symbol"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-09T00_41_03.312Z";"hw3.java";"265";" variable input is already defined in method main(String[])
        int[] input = new int[1000];
              ^
/"
"406d5a7eb8631d2290294c40711318b956ed54fd";"2020-10-09T00_41_03.312Z";"hw3.java";"269";" array required, but int found
            frequency[i] = input[i] / 26;
                                ^
3 errors
"
"409cbf4bc16c594da820d29c743f14a10e7919f1";"2020-10-04T04_42_22.451Z";"hw3.java";"39";" incompatible types"
"409cbf4bc16c594da820d29c743f14a10e7919f1";"2020-10-04T04_42_22.451Z";"hw3.java";"42";" incompatible types"
"409cbf4bc16c594da820d29c743f14a10e7919f1";"2020-10-06T00_28_11.470Z";"hw3.java";"41";" int cannot be dereferenced
            newString = newString + (symbols[i].charAt(0) - 'A');
                                               ^
1 error
"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-06T02_32_56.630Z";"hw3.java";"112";" variable test is already defined in method main(String[])
        int test[] = symbolArrayToString();
            ^
/"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-06T02_32_56.630Z";"hw3.java";"112";" method symbolArrayToString in class Caesar cannot be applied to given types;
        int test[] = symbolArrayToString();
                     ^
  required"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-06T03_08_36.517Z";"hw3.java";"112";" cannot find symbol
        int test[] = symbolArrayToString[5];
                     ^
  symbol"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-06T21_31_06.711Z";"hw3.java";"64";" incompatible types"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-06T22_25_07.781Z";"hw3.java";"136";" method unshift in class Caesar cannot be applied to given types;
        System.out.println(unshift(shift(8, 5))); //unshift works, but it doesnt work when shift is inside
                           ^
  required"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-08T22_30_50.467Z";"hw3.java";"145";" incompatible types"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-09T00_32_16.281Z";"hw3.java";"186";" incompatible types"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-09T00_52_06.715Z";"hw3.java";"186";" incompatible types"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-09T03_07_46.710Z";"hw3.java";"165";" missing return statement
    }
    ^
1 error
"
"4128c27a816942a5871946e8691a7183b59429a9";"2020-10-09T04_02_19.219Z";"hw3.java";"173";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T16_58_46.799Z";"hw3.java";"131";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T16_58_46.799Z";"hw3.java";"133";" array required, but Double found
            letterFrequencies[i] = Double.parseDouble(inStream.readLine());
                             ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T16_58_46.799Z";"hw3.java";"135";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T17_43_34.478Z";"hw3.java";"131";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T17_43_34.478Z";"hw3.java";"133";" array required, but Double found
            letterFrequencies[i] = Double.parseDouble(inStream.readLine());
                             ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T17_43_34.478Z";"hw3.java";"135";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T17_43_34.478Z";"hw3.java";"143";" no suitable constructor found for In(int[])
        In inStream = new In(symbols);
                      ^
    constructor In.In(Socket) is not applicable
      (argument mismatch; int[] cannot be converted to Socket)
    constructor In.In(URL) is not applicable
      (argument mismatch; int[] cannot be converted to URL)
    constructor In.In(File) is not applicable
      (argument mismatch; int[] cannot be converted to File)
    constructor In.In(String) is not applicable
      (argument mismatch; int[] cannot be converted to String)
    constructor In.In(Scanner) is not applicable
      (argument mismatch; int[] cannot be converted to Scanner)
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-07T17_43_34.478Z";"hw3.java";"144";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"131";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"133";" array required, but Double found
            letterFrequencies[i] = Double.parseDouble(inStream.readLine());
                             ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"135";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"143";" no suitable constructor found for In(int[])
        In inStream = new In(symbols);
                      ^
    constructor In.In(Socket) is not applicable
      (argument mismatch; int[] cannot be converted to Socket)
    constructor In.In(URL) is not applicable
      (argument mismatch; int[] cannot be converted to URL)
    constructor In.In(File) is not applicable
      (argument mismatch; int[] cannot be converted to File)
    constructor In.In(String) is not applicable
      (argument mismatch; int[] cannot be converted to String)
    constructor In.In(Scanner) is not applicable
      (argument mismatch; int[] cannot be converted to Scanner)
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"144";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"147";" array required, but Double found
                frequencies[symbols[i]] += 1;
                           ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"150";" cannot find symbol
        for (int i = 0; i < frequencies.length; i++){
                                       ^
  symbol"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"151";" array required, but Double found
            frequencies[i] /= symbols.length;
                       ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T21_24_37.026Z";"hw3.java";"153";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"125";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"127";" array required, but Double found
            letterFrequencies[i] = Double.parseDouble(inStream.readLine());
                             ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"129";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"137";" no suitable constructor found for In(int[])
        In inStream = new In(symbols);
                      ^
    constructor In.In(Socket) is not applicable
      (argument mismatch; int[] cannot be converted to Socket)
    constructor In.In(URL) is not applicable
      (argument mismatch; int[] cannot be converted to URL)
    constructor In.In(File) is not applicable
      (argument mismatch; int[] cannot be converted to File)
    constructor In.In(String) is not applicable
      (argument mismatch; int[] cannot be converted to String)
    constructor In.In(Scanner) is not applicable
      (argument mismatch; int[] cannot be converted to Scanner)
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"138";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"141";" array required, but Double found
                frequencies[symbols[i]] += 1;
                           ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"144";" cannot find symbol
        for (int i = 0; i < frequencies.length; i++){
                                       ^
  symbol"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"145";" array required, but Double found
            frequencies[i] /= symbols.length;
                       ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"147";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"155";" incompatible types"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"157";" cannot find symbol
        for (int i = 0; i < scores.length; i++) {
                                  ^
  symbol"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"158";" array required, but Double found
            scores[i] = Math.abs(currentFreqs[i] - english[i]);
                  ^
/"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-08T23_19_53.158Z";"hw3.java";"159";" array required, but Double found
            totalScore += scores[i];
                                ^
Note"
"42fe0cd21665026551f4802887b10b11b48e883a";"2020-10-09T00_11_58.873Z";"hw3.java";"24";" illegal start of expression
            crack(text, );
                        ^
1 error
"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T21_17_33.707Z";"hw3.java";"164";" invalid method declaration; return type required
    public static crack()
                  ^
/"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T21_17_33.707Z";"hw3.java";"164";" ';' expected
    public static crack()
                         ^
2 errors
"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T21_27_47.397Z";"hw3.java";"164";" invalid method declaration; return type required
    public static crack()
                  ^
/"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T21_27_47.397Z";"hw3.java";"164";" ';' expected
    public static crack()
                         ^
2 errors
"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T22_38_17.709Z";"hw3.java";"170";" incompatible types"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T22_38_17.709Z";"hw3.java";"171";" incompatible types"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T22_38_17.709Z";"hw3.java";"172";" incompatible types"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T22_38_17.709Z";"hw3.java";"180";" incompatible types"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T22_38_17.709Z";"hw3.java";"224";" variable letter is already defined in method main(String[])
                char letter = key.charAt(0);
                     ^
/"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T22_38_17.709Z";"hw3.java";"225";" variable ourKey is already defined in method main(String[])
                int ourKey = (int) letter - 'A';
                    ^
Note"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T23_12_48.422Z";"hw3.java";"170";" incompatible types"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T23_12_48.422Z";"hw3.java";"171";" incompatible types"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T23_12_48.422Z";"hw3.java";"172";" incompatible types"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T23_12_48.422Z";"hw3.java";"226";" variable letter is already defined in method main(String[])
                char letter = key.charAt(0);
                     ^
/"
"43ddbe9de85fe609a1ecc56a76dbcddb0f52d8c1";"2020-10-04T23_12_48.422Z";"hw3.java";"227";" variable ourKey is already defined in method main(String[])
                int ourKey = (int) letter - 'A';
                    ^
Note"
"444500e9b1f9ba58a2d0653d8ccdb0cf46debca7";"2020-10-07T03_58_59.784Z";"hw3.java";"56";" incompatible types"
"444500e9b1f9ba58a2d0653d8ccdb0cf46debca7";"2020-10-07T03_58_59.784Z";"hw3.java";"57";" unexpected type
            symbolToString.charAt(i) = current;
                                 ^
  required"
"444500e9b1f9ba58a2d0653d8ccdb0cf46debca7";"2020-10-08T01_55_04.671Z";"hw3.java";"57";" unexpected type
            symbolToString.charAt(i) = current;
                                 ^
  required"
"444500e9b1f9ba58a2d0653d8ccdb0cf46debca7";"2020-10-08T04_56_46.910Z";"hw3.java";"14";" cannot find symbol
        System.out.println(getDictionaryFrequencies(english.txt));
                                                    ^
  symbol"
"444500e9b1f9ba58a2d0653d8ccdb0cf46debca7";"2020-10-08T17_11_57.467Z";"hw3.java";"235";" class, interface, or enum expected
}
^
1 error
"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-07T16_23_13.752Z";"hw3.java";"24";" not a statement
            char 
            ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-07T16_23_13.752Z";"hw3.java";"24";" ';' expected
            char 
                ^
2 errors
"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T01_34_07.902Z";"hw3.java";"64";" ';' expected
            return (26 + symbol + offset) % 26 // account for wrap
                                              ^
1 error
"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T01_56_45.864Z";"hw3.java";"64";" ';' expected
            return (26 + symbol + offset) % 26 // account for wrap
                                              ^
1 error
"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T02_46_16.478Z";"hw3.java";"65";" ';' expected
            return (26 + symbol + offset) % 26 // account for wrap
                                              ^
1 error
"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"80";" -> expected
            return ()
                     ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"81";" illegal start of expression
        }
        ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"81";" ';' expected
        }
         ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"82";" not a statement
        return 0;
               ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"88";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"96";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"4542f79f46c1e57daf32196b082986d08d6addda";"2020-10-08T03_25_49.262Z";"hw3.java";"104";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
28 errors
"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"109";" illegal start of type
        return letterFrequency;
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"109";" ';' expected
        return letterFrequency;
              ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"115";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"118";" class, interface, or enum expected
    }
    ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"123";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"126";" class, interface, or enum expected
    }
    ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"128";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"130";" class, interface, or enum expected
        In inStream = new In(args[1]);
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"131";" class, interface, or enum expected
        String message = inStream.readAll();
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"132";" class, interface, or enum expected
        String offsetString = args[2];
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"133";" class, interface, or enum expected
        int offset = (int) offsetString.charAt(0) - 'A';
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"134";" class, interface, or enum expected
        switch (task) {
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"137";" class, interface, or enum expected
                break;
                ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"138";" class, interface, or enum expected
            case 'decrypt'"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"140";" class, interface, or enum expected
                break;
                ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T01_58_43.310Z";"hw3.java";"141";" class, interface, or enum expected
        }
        ^
16 errors
"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"110";" illegal start of type
        return letterFrequency;
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"110";" ';' expected
        return letterFrequency;
              ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"120";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"123";" class, interface, or enum expected
    }
    ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"128";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"131";" class, interface, or enum expected
    }
    ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"133";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"135";" class, interface, or enum expected
        In inStream = new In(args[1]);
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"136";" class, interface, or enum expected
        String message = inStream.readAll();
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"137";" class, interface, or enum expected
        String offsetString = args[2];
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"138";" class, interface, or enum expected
        int offset = (int) offsetString.charAt(0) - 'A';
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"139";" class, interface, or enum expected
        switch (task) {
        ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"142";" class, interface, or enum expected
                break;
                ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"143";" class, interface, or enum expected
            case 'decrypt'"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"145";" class, interface, or enum expected
                break;
                ^
/"
"469ce5ae9862c2ae31c75a1404a8b03af40db5ba";"2020-10-07T02_20_00.012Z";"hw3.java";"146";" class, interface, or enum expected
        }
        ^
16 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T13_33_00.135Z";"hw3.java";"102";" '.class' expected
        System.out.println(values[]);
                                   ^
1 error
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T14_59_26.849Z";"hw3.java";"105";" cannot find symbol
        System.out.println(values);
                           ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T17_47_24.778Z";"hw3.java";"105";" '.class' expected
        int result = int[] stringToSymbolArray;
                           ^
1 error
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T19_59_13.899Z";"hw3.java";"50";" variable result might not have been initialized
            result = result + finalLetter;
                     ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T19_59_13.899Z";"hw3.java";"55";" variable result might not have been initialized
        return result;
               ^
2 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T20_10_05.869Z";"hw3.java";"117";" cannot find symbol
        symbolArraytoString(values);
                            ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T20_30_24.171Z";"hw3.java";"117";" cannot find symbol
        symbolArraytoString(stringToSymbolArray('APPLE'));
        ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T23_13_11.795Z";"hw3.java";"68";" ';' expected
            position = (symbol + offset) % 26
                                             ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T23_13_11.795Z";"hw3.java";"70";" 'else' without 'if'
        else
        ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T23_13_11.795Z";"hw3.java";"87";" ';' expected
            otherPosition = (symbol - offset) % 26
                                                  ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-05T23_13_11.795Z";"hw3.java";"89";" 'else' without 'if'
        else
        ^
4 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-06T19_25_07.073Z";"hw3.java";"167";" ';' expected
        encrypt()
                 ^
1 error
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-07T20_38_23.905Z";"hw3.java";"186";" incompatible types"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-07T22_09_52.529Z";"hw3.java";"187";" incompatible types"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-07T22_34_54.471Z";"hw3.java";"187";" incompatible types"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T00_45_47.618Z";"hw3.java";"187";" incompatible types"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_08_57.712Z";"hw3.java";"212";" not a statement
        findFrequenciesResult[j]
                             ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_08_57.712Z";"hw3.java";"212";" ';' expected
        findFrequenciesResult[j]
                                ^
2 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_29_18.172Z";"hw3.java";"212";" not a statement
        findFrequenciesResult[j]
                             ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_29_18.172Z";"hw3.java";"212";" ';' expected
        findFrequenciesResult[j]
                                ^
2 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" '[' expected
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                        ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" illegal start of expression
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                         ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" ']' expected
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                          ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" <identifier> expected
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                            ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" illegal start of expression
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                             ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" ';' expected
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                              ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" illegal start of expression
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                               ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" ';' expected
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                                ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" illegal start of expression
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                                 ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"246";" ';' expected
        int [] symbolArrayTest = new int {2,3,4,5,6};
                                                  ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"247";" invalid method declaration; return type required
        findFrequencies(symbolArrayTest);
        ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"247";" <identifier> expected
        findFrequencies(symbolArrayTest);
                                       ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T01_57_15.247Z";"hw3.java";"251";" class, interface, or enum expected
}
^
13 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T02_27_08.520Z";"hw3.java";"187";" incompatible types"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T02_27_08.520Z";"hw3.java";"203";" cannot find symbol
        System.out.println(resultant);
                           ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T02_27_08.520Z";"hw3.java";"205";" cannot find symbol
        return resultant;
               ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T02_53_36.549Z";"hw3.java";"187";" incompatible types"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T02_53_36.549Z";"hw3.java";"210";" cannot find symbol
        System.out.println(resultant);
                           ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T02_53_36.549Z";"hw3.java";"212";" cannot find symbol
        return resultant;
               ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T14_57_55.360Z";"hw3.java";"239";" ';' expected
    public static void crack()
                              ^
1 error
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T15_30_13.364Z";"hw3.java";"248";" illegal start of expression
            if ()
                ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T15_30_13.364Z";"hw3.java";"249";" illegal start of statement
        }
        ^
2 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T20_52_42.310Z";"hw3.java";"245";" ']' expected
            double scoreResults[i] = scoreFrequencies(getDictionaryFrequencies
                                ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T20_52_42.310Z";"hw3.java";"245";" illegal start of expression
            double scoreResults[i] = scoreFrequencies(getDictionaryFrequencies
                                 ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T20_52_42.310Z";"hw3.java";"259";" illegal start of statement
        }
        ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T20_52_42.310Z";"hw3.java";"302";" ';' expected
        In instea
                 ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T20_52_42.310Z";"hw3.java";"312";" ')' expected
        crack(filename1, filename 2);
                                 ^
/"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T20_52_42.310Z";"hw3.java";"312";" illegal start of expression
        crack(filename1, filename 2);
                                   ^
6 errors
"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T23_25_21.257Z";"hw3.java";"325";" cannot find symbol
            String finalFrequency = crack(readFile1, filenameArgument2);
                                          ^
  symbol"
"4a181b8a0daafd8c1c8b971d48fb20139cc2e58e";"2020-10-08T23_25_21.257Z";"hw3.java";"325";" cannot find symbol
            String finalFrequency = crack(readFile1, filenameArgument2);
                                                     ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
           ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                 ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                     ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                      ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" ')' expected
    public static int[] stringToSymbolArray(String str) {
                                                  ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"22";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                                                       ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"24";" ';' expected
        int symbolArray = -1
                            ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"26";" '(' expected
           if     
             ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"27";" '.class' expected
        int ourSymbolRepresentation = (int) letter - 'A'
            ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"27";" illegal start of expression
        int ourSymbolRepresentation = (int) letter - 'A'
                                    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"27";" ';' expected
        int ourSymbolRepresentation = (int) letter - 'A'
                                     ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"27";" not a statement
        int ourSymbolRepresentation = (int) letter - 'A'
                                       ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"27";" ';' expected
        int ourSymbolRepresentation = (int) letter - 'A'
                                          ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"27";" not a statement
        int ourSymbolRepresentation = (int) letter - 'A'
                                                   ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_12_31.536Z";"hw3.java";"27";" ';' expected
        int ourSymbolRepresentation = (int) letter - 'A'
                                                        ^
17 errors
"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_45_46.826Z";"hw3.java";"23";" cannot find symbol
        for (int i = 0; i < stringToSymbolArray.length; i++) {
                            ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T13_45_46.826Z";"hw3.java";"25";" incompatible types"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T15_55_17.001Z";"hw3.java";"44";" cannot find symbol
        str = str.toUpperCase();
        ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T15_55_17.001Z";"hw3.java";"44";" cannot find symbol
        str = str.toUpperCase();
              ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T15_55_17.001Z";"hw3.java";"45";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T15_55_17.001Z";"hw3.java";"48";" cannot find symbol
        System.out.println(str.charAt(i) - 'A');           
                           ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T16_13_42.767Z";"hw3.java";"44";" cannot find symbol
        symbols = str.toUpperCase();
                  ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T16_13_42.767Z";"hw3.java";"45";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T16_13_42.767Z";"hw3.java";"48";" cannot find symbol
        System.out.println(str.charAt(i) - 'A');           
                           ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T17_27_17.231Z";"hw3.java";"44";" bad operand types for binary operator '<'
        for (int i = 0; i < symbols; i++) {
                          ^
  first type"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T17_27_17.231Z";"hw3.java";"45";" incompatible types"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"45";" illegal start of expression
            String letter = ;
                            ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"54";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"63";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"63";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"63";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"63";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"63";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"63";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"71";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"79";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T22_24_23.418Z";"hw3.java";"87";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
37 errors
"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T23_49_11.742Z";"hw3.java";"23";" cannot find symbol
        int [] results = new int [str.length];
                                     ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-08T23_49_11.742Z";"hw3.java";"48";" incompatible types"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-09T00_03_48.686Z";"hw3.java";"23";" cannot find symbol
        int [] results = new int [str.length];
                                     ^
  symbol"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-09T00_03_48.686Z";"hw3.java";"48";" incompatible types"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-09T00_38_19.538Z";"hw3.java";"48";" incompatible types"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-09T02_22_26.931Z";"hw3.java";"80";" '(' expected
        if
          ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-09T02_22_26.931Z";"hw3.java";"81";" illegal start of expression
        return 0;
        ^
/"
"4b1bdce4f691e61e6694450ed8852dd984473389";"2020-10-09T02_22_26.931Z";"hw3.java";"81";" ')' expected
        return 0;
              ^
3 errors
"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-06T19_26_44.999Z";"hw3.java";"22";" cannot find symbol
        str = str.tuUpperCase();
                 ^
  symbol"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-06T22_45_10.230Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < s.length(); i++) {
                            ^
  symbol"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-06T22_45_10.230Z";"hw3.java";"25";" cannot find symbol
            char current = str.CharAt(i);
                              ^
  symbol"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-06T22_45_10.230Z";"hw3.java";"29";" cannot find symbol
        return asciiRepresentation;
               ^
  symbol"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-07T01_40_40.210Z";"hw3.java";"27";" not a statement
            symbol[i] 
                  ^
/"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-07T01_40_40.210Z";"hw3.java";"27";" ';' expected
            symbol[i] 
                     ^
2 errors
"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T02_34_15.154Z";"hw3.java";"105";" ']' expected
             stringToSymbolArray('CONSUL');
                                          ^
1 error
"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T04_27_00.347Z";"hw3.java";"56";" ';' expected
            return (offset + symbol )
                                     ^
1 error
"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T05_45_00.773Z";"hw3.java";"139";" cannot find symbol
      String message = inStream.readAll();
                       ^
  symbol"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T17_13_31.356Z";"hw3.java";"145";" ';' expected
Ya know 
       ^
1 error
"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T18_53_39.726Z";"hw3.java";"123";" ']' expected
        if (int[i] < 41 
                ^
/"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T18_53_39.726Z";"hw3.java";"123";" ')' expected
        if (int[i] < 41 
                 ^
/"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T18_53_39.726Z";"hw3.java";"123";" illegal start of type
        if (int[i] < 41 
                     ^
/"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T18_53_39.726Z";"hw3.java";"124";" illegal start of expression
        return null;
        ^
/"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T18_53_39.726Z";"hw3.java";"124";" ';' expected
        return null;
              ^
5 errors
"
"4b8cafbb2f0acbe010290da14340378e9c684d75";"2020-10-08T23_33_35.322Z";"hw3.java";"170";" cannot find symbol
        return minimum;
               ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T22_43_03.679Z";"hw3.java";"20";" self-reference in initializer
    String str = str.toUpperCase;
                 ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T22_43_03.679Z";"hw3.java";"20";" cannot find symbol
    String str = str.toUpperCase;
                    ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T23_12_15.004Z";"hw3.java";"20";" self-reference in initializer
    String str = str.toUpperCase;
                 ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T23_12_15.004Z";"hw3.java";"20";" cannot find symbol
    String str = str.toUpperCase;
                    ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T23_12_15.004Z";"hw3.java";"26";" variable letter is already defined in method stringToSymbolArray(String)
        char letter = 'C';
             ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T23_12_15.004Z";"hw3.java";"30";" variable ourSymbolRepresentation is already defined in method stringToSymbolArray(String)
        int ourSymbolRepresentation = 2;
            ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T23_12_15.004Z";"hw3.java";"31";" variable letter is already defined in method stringToSymbolArray(String)
        char letter = (char) (ourSymbolRepresentation + 'A');
             ^
5 errors
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T23_45_16.576Z";"hw3.java";"22";" not a statement
        double 
        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-07T23_45_16.576Z";"hw3.java";"22";" ';' expected
        double 
              ^
2 errors
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_10_50.942Z";"hw3.java";"22";" not a statement
       for (int = 0, )
            ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_10_50.942Z";"hw3.java";"22";" ';' expected
       for (int = 0, )
               ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_10_50.942Z";"hw3.java";"22";" illegal start of expression
       for (int = 0, )
                ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_10_50.942Z";"hw3.java";"22";" ';' expected
       for (int = 0, )
                 ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_10_50.942Z";"hw3.java";"22";" illegal start of expression
       for (int = 0, )
                   ^
5 errors
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"22";" not a statement
       for (i = 0, i < (str.length), i++) {
                     ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"22";" ';' expected
       for (i = 0, i < (str.length), i++) {
                                        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"22";" ';' expected
       for (i = 0, i < (str.length), i++) {
                                         ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"23";" '.class' expected
        char letter = 'A';
             ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"23";" not a statement
        char letter = 'A';
        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"23";" illegal start of expression
        char letter = 'A';
                    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"23";" ';' expected
        char letter = 'A';
                     ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"26";" ';' expected
        char str.charAt(i) = 'C';
                ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"32";" illegal start of type
        return null;
        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"32";" ';' expected
        return null;
              ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"43";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"46";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"51";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"54";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"59";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"62";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"67";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"70";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"75";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"78";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"83";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"86";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"91";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"94";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"99";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"102";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T00_41_34.349Z";"hw3.java";"104";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
27 errors
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"22";" not a statement
       for (i = 0, i < (str.length), i++) {
                     ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"22";" ';' expected
       for (i = 0, i < (str.length), i++) {
                                        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"22";" ';' expected
       for (i = 0, i < (str.length), i++) {
                                         ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"23";" '.class' expected
        int ourSymbolRepresentation = (int) letter - 'A';
            ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"23";" not a statement
        int ourSymbolRepresentation = (int) letter - 'A';
        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"23";" illegal start of expression
        int ourSymbolRepresentation = (int) letter - 'A';
                                    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"23";" ';' expected
        int ourSymbolRepresentation = (int) letter - 'A';
                                     ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"23";" not a statement
        int ourSymbolRepresentation = (int) letter - 'A';
                                       ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"23";" ';' expected
        int ourSymbolRepresentation = (int) letter - 'A';
                                          ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"23";" not a statement
        int ourSymbolRepresentation = (int) letter - 'A';
                                                   ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"26";" illegal start of type
        return null;
        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"26";" ';' expected
        return null;
              ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"37";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"40";" class, interface, or enum expected
          char letter = (char) (ourSymbolRepresentation + 'A');  
          ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"41";" class, interface, or enum expected
        }
        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"44";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"49";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"52";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"57";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"60";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"65";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"68";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"73";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"76";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"81";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"84";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"89";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"92";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"97";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"100";" class, interface, or enum expected
    }
    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T06_46_11.295Z";"hw3.java";"102";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
31 errors
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T07_54_03.132Z";"hw3.java";"42";" empty character literal
          int ourSymbolRepresentation = '';
                                        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T07_54_03.132Z";"hw3.java";"42";" unclosed character literal
          int ourSymbolRepresentation = '';
                                         ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T07_54_03.132Z";"hw3.java";"42";" ';' expected
          int ourSymbolRepresentation = '';
                                           ^
3 errors
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"21";" cannot find symbol
       str = str.toUpperCase;
                ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"22";" cannot find symbol
       int [] array = new int[str.length];
                                 ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
            ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
                   ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
                           ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"23";" illegal start of type
       for (i = 0; i < (str.length); i++) {
                       ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
                                     ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"24";" cannot find symbol
        array[i] = str.charAt(i);
              ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"24";" cannot find symbol
        array[i] = str.charAt(i);
                              ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"25";" cannot find symbol
        int ourSymbolRepresentation = (int) letter - 'A';
                                            ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < (str.length); i++) {
             ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < (str.length); i++) {
                    ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < (str.length); i++) {
                         ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"41";" illegal start of type
        for (i = 0; i < (str.length); i++) {
                        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < (str.length); i++) {
                                      ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T13_40_59.957Z";"hw3.java";"42";" incompatible types"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"41";" <identifier> expected
    System.out.println(alphabet);
                      ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"41";" <identifier> expected
    System.out.println(alphabet);
                               ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"42";" <identifier> expected
    alphabet += 'abc';
                     ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"43";" <identifier> expected
    System.out.println(alphabet);
                      ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"43";" <identifier> expected
    System.out.println(alphabet);
                               ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"44";" <identifier> expected
    alphabet += 'd';
                   ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"45";" <identifier> expected
    System.out.print(alphabet);
                    ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"45";" <identifier> expected
    System.out.print(alphabet);
                             ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-08T19_32_46.253Z";"hw3.java";"50";" ';' expected
          int ourSymbolRepresentation = symbols[i]
                                                  ^
9 errors
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"21";" cannot find symbol
       str = str.toUpperCase;
                ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"22";" cannot find symbol
       int [] array = new int[str.length];
                                 ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
            ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
                   ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
                           ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"23";" illegal start of type
       for (i = 0; i < (str.length); i++) {
                       ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"23";" cannot find symbol
       for (i = 0; i < (str.length); i++) {
                                     ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"24";" cannot find symbol
        array[i] = str.charAt(i);
              ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"24";" cannot find symbol
        array[i] = str.charAt(i);
                              ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"25";" cannot find symbol
        int ourSymbolRepresentation = (int) letter - 'A';
                                            ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"42";" cannot find symbol
        for (i = 0; i < (symbol.length); i++) {
             ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"42";" cannot find symbol
        for (i = 0; i < (symbol.length); i++) {
                    ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"42";" cannot find symbol
        for (i = 0; i < (symbol.length); i++) {
                         ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"42";" illegal start of type
        for (i = 0; i < (symbol.length); i++) {
                        ^
/"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"42";" cannot find symbol
        for (i = 0; i < (symbol.length); i++) {
                                         ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T02_13_35.118Z";"hw3.java";"43";" cannot find symbol
          int ourSymbolRepresentation = symbols[i];
                                                ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T06_57_07.783Z";"hw3.java";"65";" unreachable statement
        return symbol;
        ^
1 error
"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T14_13_48.644Z";"hw3.java";"73";" cannot find symbol
        if (offet < 0 || offset > 25) {
            ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-09T22_56_57.387Z";"hw3.java";"144";" cannot find symbol
        encrypt('KZ ZA, HXAZK?', G);
                                 ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-10T03_51_07.763Z";"hw3.java";"244";" cannot find symbol
            String cipher = inStream.readAll();
                            ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-10T03_51_07.763Z";"hw3.java";"245";" cannot find symbol
            String message = System.out.println(crack(file, dictFreqs));
                                                            ^
  symbol"
"4be2bd63e16a633b451b15c7c4721b46d35da827";"2020-10-10T06_15_26.108Z";"hw3.java";"247";" incompatible types"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-06T17_01_38.392Z";"hw3.java";"166";" cannot find symbol
        Int key = (int) args[1] - 'A';
        ^
  symbol"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-06T17_01_38.392Z";"hw3.java";"166";" incompatible types"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-06T18_53_00.891Z";"hw3.java";"215";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-08T14_03_41.980Z";"hw3.java";"88";" illegal start of expression
            return decryptedSymbol;
            ^
/"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-08T14_03_41.980Z";"hw3.java";"88";" not a statement
            return decryptedSymbol;
                   ^
2 errors
"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-09T02_12_12.904Z";"hw3.java";"138";" incompatible types"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-09T02_12_12.904Z";"hw3.java";"139";" int cannot be dereferenced
        for (int i = 0; i < decryptedArray.length; i++) {
                                          ^
/"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-09T02_12_12.904Z";"hw3.java";"140";" array required, but int found
            decryptedArray[i] = unshift(decryptedArray[i], key);
                          ^
/"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-09T02_12_12.904Z";"hw3.java";"140";" array required, but int found
            decryptedArray[i] = unshift(decryptedArray[i], key);
                                                      ^
/"
"4c0e060545d21fcedf84f937c59a97bbc71a69e3";"2020-10-09T02_12_12.904Z";"hw3.java";"146";" incompatible types"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T22_34_11.590Z";"hw3.java";"109";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T22_34_11.590Z";"hw3.java";"20";" cannot find symbol
        str = str.toUpperCase();
        ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T22_34_11.590Z";"hw3.java";"20";" cannot find symbol
        str = str.toUpperCase();
              ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T22_34_11.590Z";"hw3.java";"22";" cannot find symbol
        char[] ch = new char[str.length()];
                             ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T22_34_11.590Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T22_34_11.590Z";"hw3.java";"25";" cannot find symbol
            ch[i] = str.charAt(i);
                    ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T23_36_55.841Z";"hw3.java";"111";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T23_36_55.841Z";"hw3.java";"20";" cannot find symbol
        str = str.toUpperCase();
        ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T23_36_55.841Z";"hw3.java";"20";" cannot find symbol
        str = str.toUpperCase();
              ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T23_36_55.841Z";"hw3.java";"22";" cannot find symbol
        char[] ch = new char[str.length()];
                             ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T23_36_55.841Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-05T23_36_55.841Z";"hw3.java";"25";" cannot find symbol
            ch[i] = str.charAt(i);
                    ^
  symbol"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T01_21_01.373Z";"hw3.java";"1";" class, interface, or enum expected
i/**
^
1 error
"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T20_20_59.298Z";"hw3.java";"165";" ';' expected
        getDictionaryFrequencies(english.txt)
                                             ^
1 error
"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T20_36_49.703Z";"hw3.java";"165";" ';' expected
        getDictionaryFrequencies(english.txt)
                                             ^
1 error
"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T21_28_35.775Z";"hw3.java";"184";" array dimension missing
        int[] cipherArray = new int[];
                                     ^
/"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T21_28_35.775Z";"hw3.java";"185";" ';' expected
            findFrequencies(symbols)
                                    ^
/"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T21_28_35.775Z";"hw3.java";"187";" ';' expected
        findFrequencies()
                         ^
3 errors
"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T21_59_16.019Z";"hw3.java";"193";" array dimension missing
        int[] cipherArray = new int[];
                                     ^
/"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T21_59_16.019Z";"hw3.java";"194";" ';' expected
            findFrequencies(symbols)
                                    ^
/"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-07T21_59_16.019Z";"hw3.java";"196";" ';' expected
        findFrequencies()
                         ^
3 errors
"
"4c948f488d593c3e166696d2b6f6347110516450";"2020-10-08T00_17_29.769Z";"hw3.java";"287";" ')' expected
        scoreFrequencies(getDictionaryFrequencies(fileName), findFrequencies();
                                                                              ^
1 error
"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-07T17_22_50.684Z";"hw3.java";"114";" incompatible types"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-07T19_11_38.064Z";"hw3.java";"147";" incompatible types"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T09_37_08.885Z";"hw3.java";"198";" not a statement
        double[] 
              ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T09_37_08.885Z";"hw3.java";"198";" ';' expected
        double[] 
                ^
2 errors
"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"202";" illegal start of expression
        for (int i = 0; i < 26; i++) {
        ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"202";" ')' expected
        for (int i = 0; i < 26; i++) {
                  ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"202";" not a statement
        for (int i = 0; i < 26; i++) {
            ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"202";" illegal start of type
        for (int i = 0; i < 26; i++) {
                            ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"202";" not a statement
        for (int i = 0; i < 26; i++) {
                          ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"202";" ';' expected
        for (int i = 0; i < 26; i++) {
                                   ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"203";" illegal start of expression
            receivedMessage = decrypt(cT, [i]);
                                          ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"203";" ';' expected
            receivedMessage = decrypt(cT, [i]);
                                           ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"203";" illegal start of expression
            receivedMessage = decrypt(cT, [i]);
                                            ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_01_42.054Z";"hw3.java";"203";" ';' expected
            receivedMessage = decrypt(cT, [i]);
                                             ^
10 errors
"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_21_53.772Z";"hw3.java";"204";" illegal start of expression
            receivedMessage = decrypt(cT, [i]);
                                          ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_21_53.772Z";"hw3.java";"204";" ';' expected
            receivedMessage = decrypt(cT, [i]);
                                           ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_21_53.772Z";"hw3.java";"204";" illegal start of expression
            receivedMessage = decrypt(cT, [i]);
                                            ^
/"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T10_21_53.772Z";"hw3.java";"204";" ';' expected
            receivedMessage = decrypt(cT, [i]);
                                             ^
4 errors
"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T19_56_30.228Z";"hw3.java";"240";" incompatible types"
"4d304d0fc8d7287703d7e1350a77470f66984e3a";"2020-10-08T21_49_12.127Z";"hw3.java";"240";" incompatible types"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T08_11_38.726Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
             ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T08_11_38.726Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
                    ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T08_11_38.726Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
                                ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T08_11_38.726Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
                                           ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T08_11_38.726Z";"hw3.java";"29";" cannot find symbol
            System.out.print(strArray[i]);
                                      ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
             ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
                    ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
                                ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"28";" cannot find symbol
        for (i = 0; i < strArray.length(); i++) {
                                           ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"29";" cannot find symbol
            System.out.print(strArray[i]);
                                      ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"45";" cannot find symbol
        String [] symbolsArray = new String[symbols.length()];
                                                   ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"46";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
             ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"46";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                    ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"46";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                               ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"46";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                                          ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"47";" cannot find symbol
            symbolsArray[i] = (char) symbols[i] + 'A';
                         ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"47";" cannot find symbol
            symbolsArray[i] = (char) symbols[i] + 'A';
                                             ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T09_27_08.069Z";"hw3.java";"47";" incompatible types"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T23_34_20.405Z";"hw3.java";"151";" incompatible types"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T23_34_20.405Z";"hw3.java";"182";" cannot find symbol
                System.out.println(encryptionString);
                                   ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-08T23_34_20.405Z";"hw3.java";"186";" cannot find symbol
                System.out.println(decryptionString);
                                   ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-09T00_01_32.294Z";"hw3.java";"152";" incompatible types"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-09T00_01_32.294Z";"hw3.java";"186";" cannot find symbol
                System.out.println(encryptionString);
                                   ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-09T00_01_32.294Z";"hw3.java";"190";" cannot find symbol
                System.out.println(decryptionString);
                                   ^
  symbol"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-09T00_18_29.768Z";"hw3.java";"152";" incompatible types"
"4d3e16e24096cd5e30e393ecb9f049662806f603";"2020-10-09T00_18_29.768Z";"hw3.java";"186";" cannot find symbol
                System.out.println(result);
                                   ^
  symbol"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-03T17_49_22.370Z";"hw3.java";"43";" unexpected type
            toString.charAt(i) = (char) symbols[i] + 65;
                           ^
  required"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"77";" illegal start of expression
        }
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"85";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"93";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-04T07_41_45.106Z";"hw3.java";"101";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
25 errors
"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"117";" ';' expected
        for (int i = 0, i < letterFreq.length, i++) {
                         ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"117";" > expected
        for (int i = 0, i < letterFreq.length, i++) {
                                                ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"117";" ';' expected
        for (int i = 0, i < letterFreq.length, i++) {
                                                  ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"117";" illegal start of expression
        for (int i = 0, i < letterFreq.length, i++) {
                                                    ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"117";" ')' expected
        for (int i = 0, i < letterFreq.length, i++) {
                                                     ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"118";" illegal start of expression
            letterFreq[i] = inStream.readDouble();
                      ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"118";" ';' expected
            letterFreq[i] = inStream.readDouble();
                        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"118";" variable declaration not allowed here
            letterFreq[i] = inStream.readDouble();
                       ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"120";" illegal start of type
        return letterFreq;
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"120";" ';' expected
        return letterFreq;
              ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"126";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"129";" class, interface, or enum expected
    }
    ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"134";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"137";" class, interface, or enum expected
    }
    ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"139";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"157";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"158";" class, interface, or enum expected
        String keyString = args[2];
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"159";" class, interface, or enum expected
        int shiftKey = (int) (keyString.charAt(0) - 'A');
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"160";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"161";" class, interface, or enum expected
        String text = inStream.readAll();
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"163";" class, interface, or enum expected
        if (command.equals('encrypt')) {
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"165";" class, interface, or enum expected
        }
        ^
/"
"4e6375572baa7b596e96b115bbff4f03ff44ed9a";"2020-10-06T03_21_35.300Z";"hw3.java";"168";" class, interface, or enum expected
        }
        ^
23 errors
"
"4ee624ba618e49234700248189f5f77acf310f5a";"2020-10-05T22_29_03.374Z";"hw3.java";"88";" not a statement
        string
        ^
/"
"4ee624ba618e49234700248189f5f77acf310f5a";"2020-10-05T22_29_03.374Z";"hw3.java";"88";" ';' expected
        string
              ^
2 errors
"
"4ee624ba618e49234700248189f5f77acf310f5a";"2020-10-05T23_00_55.974Z";"hw3.java";"95";" cannot find symbol
        int[] arr = new int[message.length()];
                            ^
  symbol"
"4ee624ba618e49234700248189f5f77acf310f5a";"2020-10-05T23_00_55.974Z";"hw3.java";"97";" cannot find symbol
        arr = stringToSymbolArray(message);
                                  ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T04_04_57.038Z";"hw3.java";"19";" <identifier> expected
    str = str.toUpperCase();
       ^
1 error
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_27_31.164Z";"hw3.java";"11";" <identifier> expected
    str = str.toUpperCase();
       ^
1 error
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" ')' expected
    public static int[] stringToSymbolArray(String str) {
                                                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"35";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                                                       ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"36";" not a statement
        int ? = 0;
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"36";" ';' expected
        int ? = 0;
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"38";" not a statement
            char ?? = str.charAt(i);
            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"38";" ';' expected
            char ?? = str.charAt(i);
                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"39";" unclosed character literal
            if (current >= '???') {
                           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"39";" illegal start of expression
            if (current >= '???') {
                             ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"39";" unclosed character literal
            if (current >= '???') {
                               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"39";" illegal start of expression
            if (current >= '???') {
                                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"41";" illegal start of expression
            }
            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"42";" illegal start of expression
        }
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"39";" not a statement
            if (current >= '???') {
                              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"42";" ';' expected
        }
         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"44";" not a statement
        return null;
               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"55";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"55";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"55";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"55";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"55";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"63";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"63";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"63";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"63";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"63";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"63";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"71";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"79";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"87";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"95";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"103";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"103";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"103";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"103";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"103";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"103";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"103";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"111";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"111";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"111";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"111";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"111";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"111";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"116";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"116";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"116";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"116";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"116";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T20_57_31.256Z";"hw3.java";"119";" reached end of file while parsing
}
 ^
81 errors
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"27";" case, default, or '}' expected
                str = str.toUpperCase();
                                       ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"29";" case, default, or '}' expected
                stringToSymbolArray();
                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"29";" case, default, or '}' expected
                stringToSymbolArray();
                                   ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"29";" case, default, or '}' expected
                stringToSymbolArray();
                                    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"29";" case, default, or '}' expected
                stringToSymbolArray();
                                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                                           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                                            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                                                   ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"38";" case, default, or '}' expected
    public static int[] stringToSymbolArray(String str) {
                                                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"39";" case, default, or '}' expected
        int symbol = 0;
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"39";" case, default, or '}' expected
        int symbol = 0;
            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"39";" case, default, or '}' expected
        int symbol = 0;
                   ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"39";" case, default, or '}' expected
        int symbol = 0;
                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"39";" case, default, or '}' expected
        int symbol = 0;
                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
             ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                   ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                                           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                                            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                                             ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                                               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                                                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                                                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"40";" case, default, or '}' expected
        for (int i = 0; i < findFrequencies(); i++) {
                                                    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                 ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                                     ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                                       ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"41";" case, default, or '}' expected
            char current = str.charAt(i);
                                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
            ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                               ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                                             ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                                                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"42";" case, default, or '}' expected
            if (current >= 'A' && current <= 'Z') {
                                                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"43";" case, default, or '}' expected
                symbol++;
                ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"43";" case, default, or '}' expected
                symbol++;
                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"43";" case, default, or '}' expected
                symbol++;
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"47";" illegal start of type
        return symbol;
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"47";" ';' expected
        return symbol;
              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"58";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"61";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"66";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"69";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"74";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"77";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"82";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"85";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"90";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"93";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"98";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"101";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"106";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"114";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"117";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T21_17_52.304Z";"hw3.java";"119";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
88 errors
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T22_11_54.613Z";"hw3.java";"23";" cannot find symbol
        int asciiRepresentation = (int) letter;
                                        ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T22_11_54.613Z";"hw3.java";"24";" cannot find symbol
        char letter = A;
                      ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T22_11_54.613Z";"hw3.java";"26";" incompatible types"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T23_34_24.196Z";"hw3.java";"10";" invalid method declaration; return type required
    stringToSymbolArray('CONSUL');
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-07T23_34_24.196Z";"hw3.java";"10";" illegal start of type
    stringToSymbolArray('CONSUL');
                        ^
2 errors
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T02_50_11.851Z";"hw3.java";"55";" incompatible types"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T02_50_11.851Z";"hw3.java";"60";" cannot find symbol
            shiftedSymbols = shiftedSymbols;
            ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T02_50_11.851Z";"hw3.java";"60";" cannot find symbol
            shiftedSymbols = shiftedSymbols;
                             ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T04_41_24.728Z";"hw3.java";"71";" not a statement
        int 
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T04_41_24.728Z";"hw3.java";"71";" ';' expected
        int 
           ^
2 errors
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"71";" '.class' expected
        int unshift = int (shift + 26 - offset)
                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"71";" not a statement
        int unshift = int (shift + 26 - offset)
                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"71";" ';' expected
        int unshift = int (shift + 26 - offset)
                                              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"75";" illegal start of type
        return 0;
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"75";" ';' expected
        return 0;
              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"81";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"84";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"89";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"92";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"97";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"100";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"105";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"108";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"113";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"116";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"118";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"120";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"120";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"120";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
                                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_03_06.777Z";"hw3.java";"123";" class, interface, or enum expected
        }
        ^
20 errors
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"71";" '.class' expected
        int unshift = int (((shift + 1) % 26) - offset);
                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"71";" not a statement
        int unshift = int (((shift + 1) % 26) - offset);
                                              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"71";" ';' expected
        int unshift = int (((shift + 1) % 26) - offset);
                                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"75";" illegal start of type
        return 0;
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"75";" ';' expected
        return 0;
              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"81";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"84";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"89";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"92";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"97";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"100";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"105";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"108";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"113";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"116";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"118";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"120";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"120";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"120";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
                                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_20_14.703Z";"hw3.java";"123";" class, interface, or enum expected
        }
        ^
20 errors
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"67";" '.class' expected
        int unshift = int (((shift + 1) % 26) - offset);
                          ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"67";" not a statement
        int unshift = int (((shift + 1) % 26) - offset);
                                              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"67";" ';' expected
        int unshift = int (((shift + 1) % 26) - offset);
                                                      ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"71";" illegal start of type
        return 0;
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"71";" ';' expected
        return 0;
              ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"77";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"80";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"85";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"88";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"93";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"101";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"104";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"109";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"112";" class, interface, or enum expected
    }
    ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"114";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"116";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"116";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
                        ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"116";" class, interface, or enum expected
        for (int i = 0; i < test.length; i++) {
                                         ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T05_42_54.833Z";"hw3.java";"119";" class, interface, or enum expected
        }
        ^
20 errors
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T06_03_35.652Z";"hw3.java";"71";" cannot find symbol
        int unshift = (((shift + 1) % 26) - offset);
                         ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T06_50_17.536Z";"hw3.java";"80";" '.class' expected
        symbol = int[] symbol;
                       ^
1 error
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T07_27_20.185Z";"hw3.java";"80";" '.class' expected
        symbol = int[] symbol;
                       ^
1 error
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T08_44_44.059Z";"hw3.java";"96";" incompatible types"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T19_47_46.025Z";"hw3.java";"140";" method decrypt in class Caesar cannot be applied to given types;
        System.out.ln(decrypt());
                      ^
  required"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-08T21_13_18.809Z";"hw3.java";"126";" ';' expected
        double[] cipherRepresentation = new double [(int)str.charAt(i) - 'A']
                                                                             ^
1 error
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-09T00_24_23.307Z";"hw3.java";"160";" variable cracked is already defined in method crack(double[],int[])
       int cracked = 0;
           ^
/"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-09T00_24_23.307Z";"hw3.java";"162";" cannot find symbol
            if (scores[i] <= minScoreKey) {
                ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-09T00_24_23.307Z";"hw3.java";"187";" cannot find symbol
        else if (funtion.equals('crack')) {
                 ^
  symbol"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-09T00_24_23.307Z";"hw3.java";"188";" incompatible types"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-09T01_08_45.597Z";"hw3.java";"197";" ';' expected
            int unshift
                       ^
1 error
"
"50a9d11d5eaae9d4ded85ab934739b0729868a9b";"2020-10-09T01_22_39.724Z";"hw3.java";"197";" ';' expected
            int unshift
                       ^
1 error
"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"77";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"77";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"77";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"98";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"106";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-02T20_40_07.659Z";"hw3.java";"114";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
30 errors
"
"50fa24df3a840e16ab9aac65494fb39960a78ac3";"2020-10-04T15_48_18.184Z";"hw3.java";"207";" missing return statement
    }
    ^
1 error
"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-07T22_44_28.467Z";"hw3.java";"38";" method readAll in class In cannot be applied to given types;
        String inputMessage = inStream.readAll(args[1]);
                                      ^
  required"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-07T23_20_44.921Z";"hw3.java";"41";" incompatible types"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-07T23_20_44.921Z";"hw3.java";"45";" incompatible types"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T00_38_25.041Z";"hw3.java";"41";" cannot find symbol
        if (args[0].equals(encrypt)) {
                           ^
  symbol"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T00_38_25.041Z";"hw3.java";"44";" cannot find symbol
        else if (args[0].equals(decrypt)) {
                                ^
  symbol"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T01_46_03.190Z";"hw3.java";"50";" cannot find symbol
        System.out.println(foundFreq);
                           ^
  symbol"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T17_16_12.679Z";"hw3.java";"190";" illegal start of expression
            decrypy(cipher, );
                            ^
1 error
"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T18_44_48.472Z";"hw3.java";"67";" cannot find symbol
        String originalMessage = crack(cipher, testKey);
                                               ^
  symbol"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T18_44_48.472Z";"hw3.java";"208";" variable testKey is already defined in method crack(String,int)
        for (int testKey = 0; testKey < 26; testKey++) {
                 ^
/"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T18_44_48.472Z";"hw3.java";"210";" cannot find symbol
            if (Math.abs(scoreFreqInput[i] - scoreFreqInput1[i]) < minValue) {
                                        ^
  symbol"
"542af3c2f80579d059d762834b7c212e25ee3e33";"2020-10-08T18_44_48.472Z";"hw3.java";"210";" cannot find symbol
            if (Math.abs(scoreFreqInput[i] - scoreFreqInput1[i]) < minValue) {
                                                             ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-05T20_17_24.401Z";"hw3.java";"25";" ';' expected
            int [] str.length(i) = (str.charAt(i) - 'A');    
                      ^
1 error
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T15_32_55.069Z";"hw3.java";"26";" ';' expected
            int [] symbolArray(i) == int [] str.charAt(i);
                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T15_32_55.069Z";"hw3.java";"26";" not a statement
            int [] symbolArray(i) == int [] str.charAt(i);
                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T15_32_55.069Z";"hw3.java";"26";" ';' expected
            int [] symbolArray(i) == int [] str.charAt(i);
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T15_32_55.069Z";"hw3.java";"26";" ';' expected
            int [] symbolArray(i) == int [] str.charAt(i);
                                               ^
4 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"27";" ';' expected
            int stringToSymbolArray(i) = int [] symbolArray(i);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"27";" not a statement
            int stringToSymbolArray(i) = int [] symbolArray(i);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"27";" ';' expected
            int stringToSymbolArray(i) = int [] symbolArray(i);
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"27";" ';' expected
            int stringToSymbolArray(i) = int [] symbolArray(i);
                                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"27";" not a statement
            int stringToSymbolArray(i) = int [] symbolArray(i);
                                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"27";" ';' expected
            int stringToSymbolArray(i) = int [] symbolArray(i);
                                                             ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"28";" ';' expected
            int [] symbolArray(i) == str.charAt(i);
                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"28";" not a statement
            int [] symbolArray(i) == str.charAt(i);
                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T16_33_02.879Z";"hw3.java";"28";" ';' expected
            int [] symbolArray(i) == str.charAt(i);
                                ^
9 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"26";" -> expected
        return (int [] symbolArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"26";" ';' expected
        return (int [] symbolArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"45";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"45";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"45";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"53";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"53";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"53";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"99";" ']' expected
        int [] result[i] = stringToSymbolArray('CONSUL');
                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"99";" illegal start of expression
        int [] result[i] = stringToSymbolArray('CONSUL');
                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"99";" unclosed character literal
        int [] result[i] = stringToSymbolArray('CONSUL');
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"99";" ';' expected
        int [] result[i] = stringToSymbolArray('CONSUL');
                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-06T21_27_47.815Z";"hw3.java";"99";" unclosed character literal
        int [] result[i] = stringToSymbolArray('CONSUL');
                                                      ^
47 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"26";" -> expected
        return (int [] symbolArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"26";" ';' expected
        return (int [] symbolArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"43";" -> expected
        return (int [] stringArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"43";" ';' expected
        return (int [] stringArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"49";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"49";" ';' expected
    public static int shift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"49";" ';' expected
    public static int shift(int symbol, int offset) {
                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"49";" <identifier> expected
    public static int shift(int symbol, int offset) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"49";" not a statement
    public static int shift(int symbol, int offset) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"49";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"57";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"57";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"57";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"57";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"57";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"57";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"65";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"73";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"81";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"89";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"89";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"89";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"89";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"89";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"89";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"89";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"97";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"97";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"97";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"97";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"97";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"97";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"102";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"102";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"102";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"102";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"102";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"103";" ']' expected
        int [] result[i] = stringToSymbolArray('CONSUL');
                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"103";" illegal start of expression
        int [] result[i] = stringToSymbolArray('CONSUL');
                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"103";" unclosed character literal
        int [] result[i] = stringToSymbolArray('CONSUL');
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"103";" ';' expected
        int [] result[i] = stringToSymbolArray('CONSUL');
                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"103";" unclosed character literal
        int [] result[i] = stringToSymbolArray('CONSUL');
                                                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T14_06_09.481Z";"hw3.java";"109";" reached end of file while parsing
}
 ^
68 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"26";" -> expected
        return (int [] symbolArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"26";" ';' expected
        return (int [] symbolArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"44";" -> expected
        return (int [] stringArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"44";" ';' expected
        return (int [] stringArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"55";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"55";" ';' expected
    public static int shift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"55";" ';' expected
    public static int shift(int symbol, int offset) {
                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"55";" <identifier> expected
    public static int shift(int symbol, int offset) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"55";" not a statement
    public static int shift(int symbol, int offset) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"55";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"61";" ']' expected
                int [] shiftedArray[i] = (symbol[i] + offset);    
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"61";" illegal start of expression
                int [] shiftedArray[i] = (symbol[i] + offset);    
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"65";" -> expected
        return (int [] shiftedArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"65";" ';' expected
        return (int [] shiftedArray);
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"75";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"75";" ';' expected
    public static int unshift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"75";" ';' expected
    public static int unshift(int symbol, int offset) {
                             ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"75";" <identifier> expected
    public static int unshift(int symbol, int offset) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"75";" not a statement
    public static int unshift(int symbol, int offset) {
                                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"75";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"81";" ']' expected
                int [] unshiftedArray[i] = (symbol[i] - offset[i]); 
                                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"81";" illegal start of expression
                int [] unshiftedArray[i] = (symbol[i] - offset[i]); 
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"85";" -> expected
        return (int [] unshiftedArray);
                                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"85";" ';' expected
        return (int [] unshiftedArray);
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"91";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"91";" <identifier> expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"91";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"91";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"115";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"115";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"115";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"115";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"115";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"115";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"115";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"123";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"123";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"123";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"123";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"123";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"123";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"128";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"128";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"128";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"128";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"128";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T15_21_37.025Z";"hw3.java";"132";" reached end of file while parsing
}
 ^
69 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"26";" -> expected
        return (int [] symbolArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"26";" ';' expected
        return (int [] symbolArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"43";" -> expected
        return (int [] stringArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"43";" ';' expected
        return (int [] stringArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"54";" <identifier> expected
    public static int shift(int symbol, int offset) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"54";" not a statement
    public static int shift(int symbol, int offset) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"62";" -> expected
        return (int [] offsetArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"62";" ';' expected
        return (int [] offsetArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"72";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                             ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"72";" <identifier> expected
    public static int unshift(int symbol, int offset) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"72";" not a statement
    public static int unshift(int symbol, int offset) {
                                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"80";" -> expected
        return (int [] offsetArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"80";" ';' expected
        return (int [] offsetArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"90";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"90";" <identifier> expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"90";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"96";" -> expected
        return (String [] encryptedMessage);
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"96";" ';' expected
        return (String [] encryptedMessage);
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"105";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"105";" <identifier> expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"105";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"110";" -> expected
        return (String [] decryptedMessage);
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"110";" ';' expected
        return (String [] decryptedMessage);
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"116";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"124";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"132";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"132";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"132";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"137";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"141";" reached end of file while parsing
}
 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T17_04_25.863Z";"hw3.java";"142";" reached end of file while parsing
64 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"26";" -> expected
        return (int [] symbolArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"26";" ';' expected
        return (int [] symbolArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"43";" -> expected
        return (int [] stringArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"43";" ';' expected
        return (int [] stringArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"54";" <identifier> expected
    public static int shift(int symbol, int offset) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"54";" not a statement
    public static int shift(int symbol, int offset) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"62";" -> expected
        return (int [] offsetArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"62";" ';' expected
        return (int [] offsetArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"72";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                             ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"72";" <identifier> expected
    public static int unshift(int symbol, int offset) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"72";" not a statement
    public static int unshift(int symbol, int offset) {
                                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"80";" -> expected
        return (int [] offsetArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"80";" ';' expected
        return (int [] offsetArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"90";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"90";" <identifier> expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"90";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"96";" -> expected
        return (String [] encryptedMessage);
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"96";" ';' expected
        return (String [] encryptedMessage);
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"105";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"105";" <identifier> expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"105";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"110";" -> expected
        return (String [] decryptedMessage);
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"110";" ';' expected
        return (String [] decryptedMessage);
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"116";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"124";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"132";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"132";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"132";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"137";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"142";" class expected
        int key = int.parseInteger(args[2]);  
                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"142";" ';' expected
        int key = int.parseInteger(args[2]);  
                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"142";" not a statement
        int key = int.parseInteger(args[2]);  
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"142";" ';' expected
        int key = int.parseInteger(args[2]);  
                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"147";" not a statement
            (key > 0 && key < 26)
            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"147";" ';' expected
            (key > 0 && key < 26)
                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"157";" illegal start of expression
                String result = crack(  ,  );
                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"157";" illegal start of expression
                String result = crack(  ,  );
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"162";" reached end of file while parsing
}
 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-07T19_22_36.624Z";"hw3.java";"165";" reached end of file while parsing
72 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"26";" -> expected
        return (int [] symbolArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"26";" ';' expected
        return (int [] symbolArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"43";" -> expected
        return (int [] stringArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"43";" ';' expected
        return (int [] stringArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"54";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"54";" <identifier> expected
    public static int shift(int symbol, int offset) {
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"54";" not a statement
    public static int shift(int symbol, int offset) {
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"54";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"62";" -> expected
        return (int [] offsetArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"62";" ';' expected
        return (int [] offsetArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"72";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                             ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"72";" <identifier> expected
    public static int unshift(int symbol, int offset) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"72";" not a statement
    public static int unshift(int symbol, int offset) {
                                              ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"80";" -> expected
        return (int [] offsetArray);
                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"80";" ';' expected
        return (int [] offsetArray);
                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"90";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"90";" <identifier> expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"90";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"90";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"96";" -> expected
        return (String [] encryptedMessage);
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"96";" ';' expected
        return (String [] encryptedMessage);
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"105";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"105";" <identifier> expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"105";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"110";" -> expected
        return (String [] decryptedMessage);
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"110";" ';' expected
        return (String [] decryptedMessage);
                                            ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"116";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"116";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"124";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"124";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"124";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"132";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"132";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"132";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"132";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"137";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"142";" class expected
        int key = int.parseInteger(args[2]);  
                      ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"142";" ';' expected
        int key = int.parseInteger(args[2]);  
                                  ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"142";" not a statement
        int key = int.parseInteger(args[2]);  
                                       ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"142";" ';' expected
        int key = int.parseInteger(args[2]);  
                                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"146";" not a statement
        (key > 0 && key < 26);
        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"157";" illegal start of expression
                String result = crack(  ,  );
                                        ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"157";" illegal start of expression
                String result = crack(  ,  );
                                           ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"162";" reached end of file while parsing
}
 ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T12_22_19.396Z";"hw3.java";"165";" reached end of file while parsing
71 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"76";" cannot find symbol
        int [] unshiftSymbolArray = new int [str.length()]; 
                                             ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"79";" method symbolArrayToString in class Caesar cannot be applied to given types;
            unshiftSymbolArray[i] = symbolArrayToString('symbolArray[i]', key);
                                    ^
  required"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"81";" cannot find symbol
        int t = unshiftSymbolArray[i];
                                   ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"93";" cannot find symbol
        String [] encryptedMessage = new String [str.length];
                                                 ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"95";" cannot find symbol
            encryptedMessage = shift (symbolArrayToString);
                                      ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"97";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"107";" cannot find symbol
        String [] decryptedMessage = new String [cipher.length];
                                                       ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"108";" cannot find symbol
        for (int i = 0; i < cipher.length; i++) {
                                  ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"109";" cannot find symbol
            cipher = encryptedMessage;
                     ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"110";" method unshift in class Caesar cannot be applied to given types;
            decryptedMessage = unshift(cipher);
                               ^
  required"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"112";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"122";" cannot find symbol
        In inStream = new In(fileName);
                             ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"144";" array required, but int found
                if (i == f[i] && f != 0)
                          ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"147";" cannot find symbol
                if (symbols[f] >= 0 && symbols[f] <= 25){
                            ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"147";" cannot find symbol
                if (symbols[f] >= 0 && symbols[f] <= 25){
                                               ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"150";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T18_45_34.679Z";"hw3.java";"196";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"76";" cannot find symbol
        int [] unshiftSymbolArray = new int [str.length()]; 
                                             ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"79";" method symbolArrayToString in class Caesar cannot be applied to given types;
            unshiftSymbolArray[i] = symbolArrayToString('symbolArray[i]', key);
                                    ^
  required"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"81";" cannot find symbol
        int t = unshiftSymbolArray[i];
                                   ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"93";" cannot find symbol
        String [] encryptedMessage = new String [str.length];
                                                 ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"95";" cannot find symbol
            encryptedMessage = shift (symbolArrayToString);
                                      ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"97";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"107";" cannot find symbol
        String [] decryptedMessage = new String [cipher.length];
                                                       ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"108";" cannot find symbol
        for (int i = 0; i < cipher.length; i++) {
                                  ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"109";" cannot find symbol
            cipher = encryptedMessage;
                     ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"110";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"112";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"122";" cannot find symbol
        In inStream = new In(fileName);
                             ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T19_19_59.963Z";"hw3.java";"196";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"77";" cannot find symbol
        for (int i = 0; i < symbolArray[i]; i++) { 
                            ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"78";" cannot find symbol
            unshift(symbolArray) = stringToSymbolArray(unshiftedSymbol, key);
                    ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"78";" cannot find symbol
            unshift(symbolArray) = stringToSymbolArray(unshiftedSymbol, key);
                                                       ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"81";" cannot find symbol
        return unshiftedSymbol;
               ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"92";" cannot find symbol
        String [] encryptedMessage = new String [str.length];
                                                 ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"94";" cannot find symbol
            encryptedMessage = shift(symbolArrayToString);
                                     ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"96";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"106";" cannot find symbol
        String [] decryptedMessage = new String [cipher.length];
                                                       ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"107";" cannot find symbol
        for (int i = 0; i < cipher.length; i++) {
                                  ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"108";" cannot find symbol
            cipher = encryptedMessage;
                     ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"109";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"111";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-08T20_49_06.691Z";"hw3.java";"196";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-09T00_14_42.482Z";"hw3.java";"115";" ';' expected
        String encryptedMessage.equals(cipher) 
                               ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-09T00_14_42.482Z";"hw3.java";"115";" ';' expected
        String encryptedMessage.equals(cipher) 
                                              ^
2 errors
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-09T03_33_49.441Z";"hw3.java";"115";" ';' expected
        String encryptedMessage.equals(cipher); 
                               ^
1 error
"
"556833fe62464359391055ea2e18e848d48ad897";"2020-10-09T15_58_32.760Z";"hw3.java";"115";" ';' expected
        String encryptedMessage.equals(cipher); 
                               ^
1 error
"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"101";" bad operand types for binary operator '<'
        for (int i = 0; i < message; i++) {
                          ^
  first type"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"102";" cannot find symbol
            String [] symbolArray = new String [message.length];
                                                       ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"103";" cannot find symbol
            message = shift(symbolArrayToString);
                            ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"105";" cannot find symbol
        return encryptedMessage;
               ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"115";" cannot find symbol
        String encryptedMessage = new String [cipher.length];
                                                    ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"115";" incompatible types"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"116";" cannot find symbol
        for (cipher[i] = decryptedMessage[i]; i < 26; i++) {  
                    ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"116";" array required, but String found
        for (cipher[i] = decryptedMessage[i]; i < 26; i++) {  
                   ^
/"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"116";" cannot find symbol
        for (cipher[i] = decryptedMessage[i]; i < 26; i++) {  
                         ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"116";" cannot find symbol
        for (cipher[i] = decryptedMessage[i]; i < 26; i++) {  
                                          ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"116";" cannot find symbol
        for (cipher[i] = decryptedMessage[i]; i < 26; i++) {  
                                              ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"116";" cannot find symbol
        for (cipher[i] = decryptedMessage[i]; i < 26; i++) {  
                                                      ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"118";" cannot find symbol
            cipher = decryptedMessage[i];
                     ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-01-17T15_59_15.584Z";"hw3.java";"118";" cannot find symbol
            cipher = decryptedMessage[i];
                                      ^
  symbol"
"556833fe62464359391055ea2e18e848d48ad897";"2021-02-04T19_54_23.940Z";"hw3.java";"60";" cannot find symbol
            stringArray += stringArray.charAt(symbols[stringIndex++]);
                                                      ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T15_24_29.924Z";"hw3.java";"26";" variable current is already defined in method stringToSymbolArray(String)
            int[] current = str.charAt(i);
                  ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T15_24_29.924Z";"hw3.java";"26";" incompatible types"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T15_40_27.820Z";"hw3.java";"26";" variable current is already defined in method stringToSymbolArray(String)
            int[] current = str.charAt(i);
                  ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T15_40_27.820Z";"hw3.java";"26";" incompatible types"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T15_40_27.820Z";"hw3.java";"28";" incompatible types"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T16_06_20.859Z";"hw3.java";"103";" '.class' expected
        System.out.print(symbolArray[]);
                                      ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T18_27_10.319Z";"hw3.java";"45";" unexpected type
           input.charAt(i) = current;
                       ^
  required"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T18_27_10.319Z";"hw3.java";"113";" cannot find symbol
            System.out.print(symbolArray2(i) + ', ');
                             ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T19_11_30.725Z";"hw3.java";"44";" unexpected type
            input.charAt(i) = (char) (symbols[i] + 'A');
                        ^
  required"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T20_40_36.526Z";"hw3.java";"44";" ';' expected
            char input.charAt(i) = (char) (symbols[i]);
                      ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T22_13_08.233Z";"hw3.java";"113";" array dimension missing
        String arrayString = symbolArrayToString(int[] symbolArray);
        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T22_13_08.233Z";"hw3.java";"113";" '.class' expected
        String arrayString = symbolArrayToString(int[] symbolArray);
                                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T22_13_08.233Z";"hw3.java";"113";" ';' expected
        String arrayString = symbolArrayToString(int[] symbolArray);
                                                                  ^
3 errors
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-05T23_29_09.866Z";"hw3.java";"55";" ';' expected
            symbol = symbol + 'E'
                                 ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T00_42_27.943Z";"hw3.java";"56";" unclosed character literal
        if (symbol >= '0' && symbol <= '25'){
                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T00_42_27.943Z";"hw3.java";"56";" unclosed character literal
        if (symbol >= '0' && symbol <= '25'){
                                          ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T00_42_27.943Z";"hw3.java";"56";" not a statement
        if (symbol >= '0' && symbol <= '25'){
                                         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T00_42_27.943Z";"hw3.java";"58";" ';' expected
            return newSymbol 
                            ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T00_42_27.943Z";"hw3.java";"72";" ';' expected
            return newSymbol 
                            ^
5 errors
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T23_58_38.477Z";"hw3.java";"56";" unclosed character literal
        if (symbol >= '0' && symbol <= '25'){
                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T23_58_38.477Z";"hw3.java";"56";" unclosed character literal
        if (symbol >= '0' && symbol <= '25'){
                                          ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T23_58_38.477Z";"hw3.java";"56";" not a statement
        if (symbol >= '0' && symbol <= '25'){
                                         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T23_58_38.477Z";"hw3.java";"58";" ';' expected
            return newSymbol 
                            ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-06T23_58_38.477Z";"hw3.java";"72";" ';' expected
            return newSymbol  
                            ^
5 errors
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"56";" illegal start of expression
)
^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"71";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"71";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"71";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"82";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"90";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"98";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"126";" ')' expected
            System.out.println(secondOrde;  
                                         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T00_59_52.867Z";"hw3.java";"134";" class, interface, or enum expected
}
^
33 errors
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"56";" illegal start of expression
)
^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"60";" malformed floating point literal
               newSymbol offset25 25et
                                  ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"73";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"73";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"73";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"73";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"73";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"73";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"128";" ')' expected
            System.out.println(secondOrde;  
                                         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T01_21_46.397Z";"hw3.java";"136";" class, interface, or enum expected
}
^
34 errors
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T02_10_22.423Z";"hw3.java";"135";" class, interface, or enum expected
}
^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T02_39_23.322Z";"hw3.java";"63";" cannot find symbol
        return newValue;
               ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T10_46_37.359Z";"hw3.java";"139";" ';' expected
        System.out.println(encrypt('ET TU BRUTE'))
                                                  ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T16_39_55.476Z";"hw3.java";"137";" illegal start of expression
        System.out.println(encrypt(('ET TU, BRUTE'?), 6));
                                                   ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T16_39_55.476Z";"hw3.java";"137";" illegal start of expression
        System.out.println(encrypt(('ET TU, BRUTE'?), 6));
                                                    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-07T16_39_55.476Z";"hw3.java";"137";" ')' expected
        System.out.println(encrypt(('ET TU, BRUTE'?), 6));
                                                     ^
3 errors
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"148";" illegal start of expression
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"148";" not a statement
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"148";" ';' expected
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"151";" illegal start of expression
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"151";" not a statement
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"151";" ';' expected
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"154";" illegal start of expression
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"154";" not a statement
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T00_01_24.283Z";"hw3.java";"154";" ';' expected
                case"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T01_49_33.365Z";"hw3.java";"122";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T01_49_33.365Z";"hw3.java";"165";" cannot find symbol
        for (int i = 0; i < frequencies.length; i++){
                            ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T01_49_33.365Z";"hw3.java";"166";" cannot find symbol
            System.out.print(frequencies[i]);
                             ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T02_53_12.141Z";"hw3.java";"171";" cannot find symbol
        for (int i = 0; i < getDictionaryFrequencies.length; i++) {
                            ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T02_53_12.141Z";"hw3.java";"172";" cannot find symbol
            System.out.print(getDictionaryFrequencies[i] + ', ');
                             ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T03_12_19.868Z";"hw3.java";"139";" illegal start of statement
        }
        ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T03_35_09.641Z";"hw3.java";"142";" illegal start of statement
        }
        ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T14_48_35.011Z";"hw3.java";"144";" cannot find symbol
            eachFrequency[i] = counter[j] / symbols.length;
                                       ^
  symbol"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T16_08_32.807Z";"hw3.java";"174";" ';' expected
        int[] minValue = {}
                           ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T17_40_25.483Z";"hw3.java";"175";" ';' expected
        int[] minValue = {}
                           ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"183";" ';' expected
            decryptedArray = stringtoSymbolArray(secret)
                                                        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"187";" illegal start of expression
        for ( i = 0; )
                     ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"188";" illegal start of expression
        }
        ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"188";" ')' expected
        }
         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"191";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"191";" ';' expected
    public static void main(String[] args) {
          ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"191";" illegal start of expression
    public static void main(String[] args) {
                  ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"191";" ';' expected
    public static void main(String[] args) {
                           ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"191";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T18_30_51.778Z";"hw3.java";"247";" reached end of file while parsing
}
 ^
10 errors
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T19_29_37.131Z";"hw3.java";"202";" '.class' expected
        decryptedSecret = decrypt(secret, key[]);
                                               ^
1 error
"
"55c22b2f9d6817c1fe72d44c330abca86d474e26";"2020-10-08T23_10_27.452Z";"hw3.java";"206";" cannot find symbol
        decryptedSecret = decrypt(secret, PositionMin);
                                          ^
  symbol"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-04T13_18_18.587Z";"hw3.java";"31";" invalid method declaration; return type required
    stringToSymbolArray(consule);
    ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-04T13_18_18.587Z";"hw3.java";"31";" <identifier> expected
    stringToSymbolArray(consule);
                               ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-04T13_18_18.587Z";"hw3.java";"32";" <identifier> expected
    System.out.println(consule);
                      ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-04T13_18_18.587Z";"hw3.java";"32";" <identifier> expected
    System.out.println(consule);
                              ^
4 errors
"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-05T15_55_46.017Z";"hw3.java";"47";" variable p might not have been initialized
            z = p.charAt(i);
                ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-05T15_55_46.017Z";"hw3.java";"54";" variable p might not have been initialized
        return p;
               ^
2 errors
"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T11_48_06.037Z";"hw3.java";"43";" illegal start of expression
        for (int i = 0; i < symbols.length; i++) {
        ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T11_48_06.037Z";"hw3.java";"43";" ')' expected
        for (int i = 0; i < symbols.length; i++) {
                  ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T11_48_06.037Z";"hw3.java";"43";" not a statement
        for (int i = 0; i < symbols.length; i++) {
            ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T11_48_06.037Z";"hw3.java";"43";" > expected
        for (int i = 0; i < symbols.length; i++) {
                                          ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T11_48_06.037Z";"hw3.java";"43";" not a statement
        for (int i = 0; i < symbols.length; i++) {
                          ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T11_48_06.037Z";"hw3.java";"43";" ';' expected
        for (int i = 0; i < symbols.length; i++) {
                                               ^
6 errors
"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T16_35_18.698Z";"hw3.java";"99";" '.class' expected
        String encryptMessage = symbolArrayToString(b[]);
                                                       ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T16_35_18.698Z";"hw3.java";"113";" '.class' expected
        String decryptCipher = symbolArrayToString(b[]);
                                                      ^
2 errors
"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T21_36_11.124Z";"hw3.java";"125";" ';' expected
        double[] m = new double [filename.length()]
                                                   ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-06T21_36_11.124Z";"hw3.java";"126";" ';' expected
        for (int i = 0; i < filename.length() i++) {
                                             ^
2 errors
"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"139";" ';' expected
        double[] q = new double[symbols.length]
                                               ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"143";" illegal start of expression
            }
            ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"150";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"150";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"150";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"150";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"150";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"150";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"155";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"155";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"155";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"155";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"155";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-07T10_44_33.251Z";"hw3.java";"179";" reached end of file while parsing
}
 ^
14 errors
"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-08T15_18_50.087Z";"hw3.java";"178";" <identifier> expected
    pu
      ^
1 error
"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-08T17_05_28.287Z";"hw3.java";"216";" cannot find symbol
                int keyy = Integer.parseint; 
                                  ^
  symbol"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-08T17_05_28.287Z";"hw3.java";"224";" variable keyy is already defined in method main(String[])
                int keyy = Integer.parseint; 
                    ^
/"
"585e11bbcd145d378d188bde0220988e63005f64";"2020-10-08T17_05_28.287Z";"hw3.java";"224";" cannot find symbol
                int keyy = Integer.parseint; 
                                  ^
  symbol"
"5950ad0df7ed21fc66a3af04ed8cb667e6051a02";"2020-10-06T02_30_43.668Z";"hw3.java";"50";" unexpected type
            str.charAt(i) = letter;
                      ^
  required"
"5950ad0df7ed21fc66a3af04ed8cb667e6051a02";"2020-10-08T18_36_28.969Z";"hw3.java";"181";" cannot find symbol
            double score = scoreFrequencies(getDictionaryFrequencies(args[2]), 
                                                                     ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-04T22_48_46.093Z";"hw3.java";"27";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-04T23_14_45.561Z";"hw3.java";"44";" cannot find symbol
        char toString = new char[symbols.length()];
                                        ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-04T23_14_45.561Z";"hw3.java";"44";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-04T23_14_45.561Z";"hw3.java";"45";" char cannot be dereferenced
        for (int i = 0; i < toString.length(); i++) {
                                    ^
3 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T13_45_35.934Z";"hw3.java";"45";" cannot find symbol
        char toString = new char[symbols.length()];
                                        ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T13_45_35.934Z";"hw3.java";"45";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T13_45_35.934Z";"hw3.java";"46";" char cannot be dereferenced
        for (int i = 0; i < toString.length(); i++) {
                                    ^
3 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_14_59.951Z";"hw3.java";"48";" cannot find symbol
        char toString = new char[symbols.length()];
                                        ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_14_59.951Z";"hw3.java";"48";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_14_59.951Z";"hw3.java";"49";" char cannot be dereferenced
        for (int i = 0; i < toString.length(); i++) {
                                    ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_14_59.951Z";"hw3.java";"144";" cannot find symbol
        stringToSymbolArray(consul);
                            ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_29_44.592Z";"hw3.java";"48";" cannot find symbol
        char toString = new char[symbols.length()];
                                        ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_29_44.592Z";"hw3.java";"48";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_29_44.592Z";"hw3.java";"49";" char cannot be dereferenced
        for (int i = 0; i < toString.length(); i++) {
                                    ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T14_29_44.592Z";"hw3.java";"144";" cannot find symbol
        stringToSymbolArray(consul);
                            ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T17_05_18.058Z";"hw3.java";"49";" cannot find symbol
        char toString = new char[symbols.length()];
                                        ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T17_05_18.058Z";"hw3.java";"49";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T17_05_18.058Z";"hw3.java";"50";" char cannot be dereferenced
        for (int i = 0; i < toString.length(); i++) {
                                    ^
3 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T17_53_44.425Z";"hw3.java";"51";" cannot find symbol
        char toString = new char[symbols.length()];
                                        ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T17_53_44.425Z";"hw3.java";"51";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T17_53_44.425Z";"hw3.java";"52";" char cannot be dereferenced
        for (int i = 0; i < toString.length(); i++) {
                                    ^
3 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T22_25_50.160Z";"hw3.java";"49";" ';' expected
                System.out.println(stringMessage)
                                                 ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T22_25_50.160Z";"hw3.java";"65";" not a statement
                symbol % 25;
                       ^
2 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T22_44_10.296Z";"hw3.java";"49";" ';' expected
                System.out.println(stringMessage)
                                                 ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T22_44_10.296Z";"hw3.java";"65";" not a statement
                symbol % 25;
                       ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-05T22_44_10.296Z";"hw3.java";"79";" not a statement
                symbol * 25;
                       ^
3 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T19_48_22.751Z";"hw3.java";"155";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"156";" illegal start of expression
            }
            ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"170";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"170";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"170";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"170";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"170";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"170";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"202";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"202";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"202";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"202";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"202";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T21_33_15.868Z";"hw3.java";"237";" reached end of file while parsing
}
 ^
13 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"237";" '[' expected
        int[] a = new int{0.2, 0.1, 0.0};
                         ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"237";" ']' expected
        int[] a = new int{0.2, 0.1, 0.0};
                          ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"237";" <identifier> expected
        int[] a = new int{0.2, 0.1, 0.0};
                              ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"237";" illegal start of expression
        int[] a = new int{0.2, 0.1, 0.0};
                                  ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"237";" ';' expected
        int[] a = new int{0.2, 0.1, 0.0};
                                   ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"238";" '[' expected
        int[] b = new int{0.1, 0.1, 0.05};
                         ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"238";" ']' expected
        int[] b = new int{0.1, 0.1, 0.05};
                          ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"238";" <identifier> expected
        int[] b = new int{0.1, 0.1, 0.05};
                              ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"238";" illegal start of type
        int[] b = new int{0.1, 0.1, 0.05};
                                  ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"238";" <identifier> expected
        int[] b = new int{0.1, 0.1, 0.05};
                                   ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"238";" ';' expected
        int[] b = new int{0.1, 0.1, 0.05};
                                        ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"239";" <identifier> expected
        System.out.println(count())
                          ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"239";" <identifier> expected
        System.out.println(count())
                                ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"239";" ';' expected
        System.out.println(count())
                                 ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"239";" illegal start of type
        System.out.println(count())
                                  ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"239";" <identifier> expected
        System.out.println(count())
                                   ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"252";" ';' expected
    }
     ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-06T23_23_14.777Z";"hw3.java";"253";" reached end of file while parsing
}
 ^
18 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"235";" '[' expected
        int[] a = new int{0.2, 0.1, 0.0};
                         ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"235";" ']' expected
        int[] a = new int{0.2, 0.1, 0.0};
                          ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"235";" <identifier> expected
        int[] a = new int{0.2, 0.1, 0.0};
                              ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"235";" illegal start of expression
        int[] a = new int{0.2, 0.1, 0.0};
                                  ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"235";" ';' expected
        int[] a = new int{0.2, 0.1, 0.0};
                                   ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"236";" '[' expected
        int[] b = new int{0.1, 0.1, 0.05};
                         ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"236";" ']' expected
        int[] b = new int{0.1, 0.1, 0.05};
                          ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"236";" <identifier> expected
        int[] b = new int{0.1, 0.1, 0.05};
                              ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"236";" illegal start of type
        int[] b = new int{0.1, 0.1, 0.05};
                                  ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"236";" <identifier> expected
        int[] b = new int{0.1, 0.1, 0.05};
                                   ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"236";" ';' expected
        int[] b = new int{0.1, 0.1, 0.05};
                                        ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"237";" <identifier> expected
        System.out.println(scoreFrequencies(a, b));
                          ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"237";" <identifier> expected
        System.out.println(scoreFrequencies(a, b));
                                           ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"237";" ';' expected
        System.out.println(scoreFrequencies(a, b));
                                            ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"237";" illegal start of type
        System.out.println(scoreFrequencies(a, b));
                                             ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"237";" ';' expected
        System.out.println(scoreFrequencies(a, b));
                                                ^
/"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T00_08_49.646Z";"hw3.java";"251";" class, interface, or enum expected
}
^
17 errors
"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T22_49_27.192Z";"hw3.java";"198";" cannot find symbol
        int[] crackedMessage = new int[cipher.length];
                                             ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T22_49_27.192Z";"hw3.java";"212";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T22_49_27.192Z";"hw3.java";"232";" cannot find symbol
                key = i;
                ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-07T22_49_27.192Z";"hw3.java";"268";" cannot find symbol
        In inStream = new In(decrypt);
                             ^
  symbol"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-08T03_23_53.852Z";"hw3.java";"213";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-08T03_23_53.852Z";"hw3.java";"242";" cannot find symbol
        System.out.println(crackcrack('RKZ AY MU ZNKT, EUA GTJ O, CNKT ZNK KBKTOTM OY YVXKGJ UAZ GMGOTYZ ZNK YQE ROQK G VGZOKTZ KZNKXOFKJ AVUT G ZGHRK; RKZ AY MU, ZNXUAMN IKXZGOT NGRL-JKYKXZKJ YZXKKZY, ZNK SAZZKXOTM XKZXKGZY UL XKYZRKYY TOMNZY OT UTK-TOMNZ INKGV NUZKRY GTJ YGCJAYZ XKYZGAXGTZY COZN UEYZKX-YNKRRY"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-08T20_25_57.719Z";"hw3.java";"279";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-08T20_25_57.719Z";"hw3.java";"286";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-08T20_48_10.248Z";"hw3.java";"279";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-08T20_48_10.248Z";"hw3.java";"286";" incompatible types"
"5a88a68dbd6e3787f79323650ab8bc39cd043192";"2020-10-08T22_36_44.051Z";"hw3.java";"216";" incompatible types"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-06T01_03_18.375Z";"hw3.java";"23";" variable i might not have been initialized
        for (int i; i < str.length(); i++) {
                    ^
1 error
"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-06T01_35_38.594Z";"hw3.java";"25";" incompatible types"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-06T01_35_38.594Z";"hw3.java";"25";" incompatible types"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-06T19_27_44.063Z";"hw3.java";"23";" variable i might not have been initialized
        for (int i; i < str.length(); i++) {
                    ^
1 error
"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-08T20_51_39.270Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < symbolArray.length(); i++){
                            ^
  symbol"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-08T20_51_39.270Z";"hw3.java";"45";" incompatible types"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T00_33_09.075Z";"hw3.java";"105";" cannot find symbol
            shift(stringToSymbolArray[i]);
                  ^
  symbol"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T00_33_09.075Z";"hw3.java";"108";" cannot find symbol
        String string = symbolArrayToString;
                        ^
  symbol"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"157";" illegal start of expression
        }
        ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"165";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"165";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"165";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"165";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"165";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"165";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"165";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"174";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"174";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"174";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"174";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"174";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"174";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"179";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"179";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"179";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"179";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"179";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T15_17_09.893Z";"hw3.java";"201";" reached end of file while parsing
}
 ^
20 errors
"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T17_53_47.528Z";"hw3.java";"174";" not a statement
            symbols[i] 
                   ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T17_53_47.528Z";"hw3.java";"174";" ';' expected
            symbols[i] 
                      ^
2 errors
"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T20_46_20.013Z";"hw3.java";"174";" not a statement
            symbols[i] 
                   ^
/"
"5bd06d8ef939a24e4be9a8a295565db039cfb173";"2020-10-09T20_46_20.013Z";"hw3.java";"174";" ';' expected
            symbols[i] 
                      ^
2 errors
"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-06T16_48_32.786Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-06T17_31_03.744Z";"hw3.java";"32";" '.class' expected
        return ourSymbolRepresentation[];
                                        ^
/"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-06T17_31_03.744Z";"hw3.java";"110";" '.class' expected
        symbolArrayToString(ourSymbolRepresentation[]);
                                                     ^
2 errors
"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-06T18_03_12.957Z";"hw3.java";"29";" '.class' expected
            System.out.print(ourSymbolRepresentation[]);
                                                      ^
/"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-06T18_03_12.957Z";"hw3.java";"32";" '.class' expected
        return ourSymbolRepresentation[];
                                        ^
/"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-06T18_03_12.957Z";"hw3.java";"110";" '.class' expected
        symbolArrayToString(ourSymbolRepresentation[]);
                                                     ^
3 errors
"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T15_24_28.051Z";"hw3.java";"120";" cannot find symbol
            char current = s.charAt(i);
                           ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T15_24_28.051Z";"hw3.java";"121";" incompatible types"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T15_24_28.051Z";"hw3.java";"122";" bad operand type double[] for unary operator '++'
                counter++;
                       ^
/"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T15_24_28.051Z";"hw3.java";"136";" cannot find symbol
        return frequencyOfCipherText;
               ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T15_55_38.074Z";"hw3.java";"120";" cannot find symbol
            if (i == s.charAt(i) - 'A') {
                     ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T15_55_38.074Z";"hw3.java";"135";" cannot find symbol
        return frequencyOfCipherText;
               ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T18_00_45.328Z";"hw3.java";"132";" ';' expected
            int letter = symbols[i] 
                                   ^
1 error
"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T20_29_19.883Z";"hw3.java";"137";" cannot find symbol
            counter[letter] = counter[letter] / symbols.length;
                    ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T20_29_19.883Z";"hw3.java";"137";" cannot find symbol
            counter[letter] = counter[letter] / symbols.length;
                                      ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T20_29_19.883Z";"hw3.java";"138";" cannot find symbol
            System.out.println(counter[letter]);
                                       ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T21_33_45.652Z";"hw3.java";"153";" ';' expected
            double j += Math.abs(english[i] - currentFreqs[i]);
                    ^
1 error
"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-07T23_48_49.417Z";"hw3.java";"162";" ';' expected
    public static int crack()
                             ^
1 error
"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T00_16_11.644Z";"hw3.java";"163";" method scoreFrequencies in class Caesar cannot be applied to given types;
        scoreFrequencies();
        ^
  required"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T00_16_11.644Z";"hw3.java";"164";" cannot find symbol
        return minimumKey;
               ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T00_16_11.644Z";"hw3.java";"190";" method crack in class Caesar cannot be applied to given types;
                int minimumKey = crack();
                                 ^
  required"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T00_16_11.644Z";"hw3.java";"191";" variable decryption is already defined in method main(String[])
                String decryption = decrypt(wordsInText, minimumKey);
                       ^
4 errors
"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T01_05_01.172Z";"hw3.java";"169";" cannot find symbol
            double[] english = getDictionaryFrequencies(englishText);
                                                        ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T01_05_01.172Z";"hw3.java";"194";" cannot find symbol
                String encryption = encrypt(wordsInText, key.charAt(0) - 'A');
                                                         ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T01_05_01.172Z";"hw3.java";"198";" cannot find symbol
                String decryption = decrypt(wordsInText, key.charAt(0) - 'A');
                                                         ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T01_05_01.172Z";"hw3.java";"202";" cannot find symbol
                int minimumKey = crack(wordsInText, l);
                                                    ^
  symbol"
"5be9cd1cda5d6b1980de1fd652ef4229e3eb8577";"2020-10-08T01_05_01.172Z";"hw3.java";"203";" variable decryption is already defined in method main(String[])
                String decryption = decrypt(wordsInText, minimumKey);
                       ^
5 errors
"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-02T20_48_14.332Z";"hw3.java";"21";" ']' expected
        int[] symbolArray = int[str.length]
                                ^
/"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-02T20_48_14.332Z";"hw3.java";"21";" ';' expected
        int[] symbolArray = int[str.length]
                                          ^
2 errors
"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-07T17_16_32.181Z";"hw3.java";"21";" ']' expected
        int[] SymbolArrayOutput = int[str.length];
                                      ^
/"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-07T17_16_32.181Z";"hw3.java";"21";" ';' expected
        int[] SymbolArrayOutput = int[str.length];
                                                ^
2 errors
"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-07T18_22_44.687Z";"hw3.java";"24";" bad operand types for binary operator '<='
            if (current <= 'z' && current > 'A') {
                        ^
  first type"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-07T18_22_44.687Z";"hw3.java";"24";" bad operand types for binary operator '>'
            if (current <= 'z' && current > 'A') {
                                          ^
  first type"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-07T18_22_44.687Z";"hw3.java";"25";" array required, but String found
                SymbolArrayOutput[i] = (Integer.parseint(str[i]) - 'A');
                                                            ^
/"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-07T18_22_44.687Z";"hw3.java";"28";" array required, but String found
                SymbolArrayOutput[i] = str[i];
                                          ^
4 errors
"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T01_15_10.768Z";"hw3.java";"25";" cannot find symbol
                SymbolArrayOutput[i] = (Integer.parseint(str.charAt(i)) - A);
                                               ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T01_15_10.768Z";"hw3.java";"25";" cannot find symbol
                SymbolArrayOutput[i] = (Integer.parseint(str.charAt(i)) - A);
                                                                          ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T01_15_10.768Z";"hw3.java";"28";" cannot find symbol
                SymbolArrayOutput[i] = Integer.parseint(str.charAt(i));
                                              ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T03_28_25.090Z";"hw3.java";"44";" cannot find symbol
        String[] toStringOutput = new String[symbols.length()];
                                                    ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T03_28_25.090Z";"hw3.java";"45";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T03_28_25.090Z";"hw3.java";"48";" incompatible types"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T03_28_25.090Z";"hw3.java";"51";" incompatible types"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T03_28_25.090Z";"hw3.java";"54";" incompatible types"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T03_55_11.733Z";"hw3.java";"104";" cannot find symbol
        for (int i = 0; i < symbolArrayOutput.length(); i++) {
                            ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T03_55_11.733Z";"hw3.java";"105";" cannot find symbol
            System.out.print( symbolArrayOutput[i] + ', ');
                              ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T04_42_07.976Z";"hw3.java";"105";" cannot find symbol
            System.out.print(stringToSymbolArray[i] + ', ');
                             ^
  symbol"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T05_40_15.172Z";"hw3.java";"60";" not a statement
            symbol + offset;
                   ^
1 error
"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T06_04_32.083Z";"hw3.java";"65";" not a statement
            shiftSymbol + offset;
                        ^
/"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T06_04_32.083Z";"hw3.java";"71";" not a statement
        System.out.println
                  ^
/"
"5c687dece2a95d9523cd5a32fc08c4818c0997e3";"2020-10-08T06_04_32.083Z";"hw3.java";"71";" ';' expected
        System.out.println
                          ^
3 errors
"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-07T22_03_56.112Z";"hw3.java";"21";" ';' expected
        str = str.toUpperCase()
                               ^
1 error
"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-08T07_47_57.551Z";"hw3.java";"56";" cannot find symbol
            char current = symbol.charAt(i);
                           ^
  symbol"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-08T15_54_17.983Z";"hw3.java";"71";" illegal start of expression
        if () {
            ^
1 error
"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-08T17_46_27.403Z";"hw3.java";"77";" ';' expected
            int shifted = symbol + offset
                                         ^
1 error
"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-08T22_03_31.421Z";"hw3.java";"111";" ']' expected
            int[i] messageArray = shiftedInt
                ^
/"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-08T22_03_31.421Z";"hw3.java";"111";" ';' expected
            int[i] messageArray = shiftedInt
                 ^
/"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-08T22_03_31.421Z";"hw3.java";"111";" ';' expected
            int[i] messageArray = shiftedInt
                                            ^
/"
"5d62f611d889cb7019dd0fc8cf9ef3b15a83c810";"2020-10-08T22_03_31.421Z";"hw3.java";"112";" ';' expected
            String convertedInt = shiftedInt
                                            ^
4 errors
"
"5e2ba60bf6ae614bec98f4bde693868ba49a559e";"2020-10-07T03_15_11.801Z";"hw3.java";"44";" missing return statement
    }
    ^
1 error
"
"5e2ba60bf6ae614bec98f4bde693868ba49a559e";"2020-10-07T15_58_16.974Z";"hw3.java";"81";" array dimension missing
        String[] encrypted = new String[];
                                         ^
1 error
"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_04_23.504Z";"hw3.java";"95";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_04_23.504Z";"hw3.java";"11";" missing method body, or declare abstract
    public static void main(String[] args);
                       ^
2 errors
"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"47";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"50";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"55";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"58";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"63";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"66";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"71";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"74";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"79";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"82";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"87";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"90";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"95";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"98";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"103";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"106";" class, interface, or enum expected
    }
    ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T17_31_30.597Z";"hw3.java";"108";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
17 errors
"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T18_04_46.616Z";"hw3.java";"17";" incompatible types"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T18_04_46.616Z";"hw3.java";"53";" unexpected type
            convertedString.charAt(i) = symbols[i] + 'A';
                                  ^
  required"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T18_30_14.793Z";"hw3.java";"53";" incompatible types"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T18_30_14.793Z";"hw3.java";"54";" unexpected type
            convertedString.charAt(i) = stringBuilder[i];
                                  ^
  required"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T19_02_14.211Z";"hw3.java";"53";" incompatible types"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T19_02_14.211Z";"hw3.java";"54";" cannot find symbol
            convertedString += (string)(stringBuilder[i]);
                                ^
  symbol"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T20_29_22.973Z";"hw3.java";"125";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T20_29_22.973Z";"hw3.java";"69";" cannot find symbol
            shiftedSymbol = symbol + offset;
            ^
  symbol"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T20_29_22.973Z";"hw3.java";"70";" cannot find symbol
            if (shiftedSymbol > 25){
                ^
  symbol"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T20_29_22.973Z";"hw3.java";"71";" cannot find symbol
                shiftedSymbol = shiftedSymbol - 26;
                ^
  symbol"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T20_29_22.973Z";"hw3.java";"71";" cannot find symbol
                shiftedSymbol = shiftedSymbol - 26;
                                ^
  symbol"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-04T20_29_22.973Z";"hw3.java";"74";" cannot find symbol
        return shiftedSymbol;
               ^
  symbol"
"5f696a4f439ae9f07efbb9de1a05465fb9a33565";"2020-10-05T17_42_55.996Z";"hw3.java";"161";" '.class' expected
        return frequencies[];
                            ^
1 error
"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T16_29_09.291Z";"hw3.java";"56";" <identifier> expected
System.out.println(asciiRepresentation);
                  ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T16_29_09.291Z";"hw3.java";"56";" <identifier> expected
System.out.println(asciiRepresentation);
                                      ^
2 errors
"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T19_19_34.160Z";"hw3.java";"62";" unexpected type
         str.charAt(i) = asciiRepresentation;
                   ^
  required"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"64";" illegal start of expression
       System.out.println(;
                          ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"64";" ';' expected
       System.out.println(;
                           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"83";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"83";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"83";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"83";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"83";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"91";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"91";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"91";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"91";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"91";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"91";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"99";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"99";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"99";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"99";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"99";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"99";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"107";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"115";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-06T21_39_12.715Z";"hw3.java";"123";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
43 errors
"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T00_16_37.602Z";"hw3.java";"147";" incompatible types"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T00_16_37.602Z";"hw3.java";"148";" cannot find symbol
        System.out.println(result + intArr);
                                    ^
  symbol"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T01_56_26.550Z";"hw3.java";"84";" incompatible types"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T19_04_04.206Z";"hw3.java";"164";" <identifier> expected
        int
           ^
1 error
"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T20_31_23.041Z";"hw3.java";"76";" 'else' without 'if'
        else if (symbol >=26); 
        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T20_31_23.041Z";"hw3.java";"81";" illegal start of type
        return 0;
        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T20_31_23.041Z";"hw3.java";"81";" ';' expected
        return 0;
              ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T20_31_23.041Z";"hw3.java";"87";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T20_31_23.041Z";"hw3.java";"89";" class, interface, or enum expected
    }
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T20_31_23.041Z";"hw3.java";"131";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
6 errors
"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T23_42_27.748Z";"hw3.java";"134";" cannot find symbol
            char temp = (char) (symbols[i] + 'A');
                                ^
  symbol"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-07T23_55_48.501Z";"hw3.java";"135";" incompatible types"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T00_15_51.651Z";"hw3.java";"135";" incompatible types"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"77";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"77";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"77";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"77";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_11_15.107Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
30 errors
"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_46_11.757Z";"hw3.java";"91";" illegal start of expression
        return message;
        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-08T12_46_11.757Z";"hw3.java";"91";" not a statement
        return message;
               ^
2 errors
"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T00_21_43.292Z";"hw3.java";"170";" <identifier> expected
       In inStream = new ; // creates a variable inStream of type 
                        ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T00_21_43.292Z";"hw3.java";"170";" '(' or '[' expected
       In inStream = new ; // creates a variable inStream of type 
                         ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T00_21_43.292Z";"hw3.java";"170";" ';' expected
       In inStream = new ; // creates a variable inStream of type 
                          ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T00_21_43.292Z";"hw3.java";"175";" illegal start of expression
       int[] result = stringToSymbolArray(''); //st2sy(I"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T00_21_43.292Z";"hw3.java";"175";" ';' expected
       int[] result = stringToSymbolArray(''); //st2sy(I"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"66";" illegal start of expression
public static int shift(int symbol, int offset) {
^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"66";" illegal start of expression
public static int shift(int symbol, int offset) {
       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"66";" ';' expected
public static int shift(int symbol, int offset) {
             ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"66";" '.class' expected
public static int shift(int symbol, int offset) {
                            ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"66";" ';' expected
public static int shift(int symbol, int offset) {
                                  ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"66";" ';' expected
public static int shift(int symbol, int offset) {
                                              ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"86";" illegal start of expression
public static int unshift(int symbol, int offset) {  
^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"86";" illegal start of expression
public static int unshift(int symbol, int offset) {  
       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"86";" ';' expected
public static int unshift(int symbol, int offset) {  
             ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"86";" '.class' expected
public static int unshift(int symbol, int offset) {  
                              ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"86";" ';' expected
public static int unshift(int symbol, int offset) {  
                                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"86";" ';' expected
public static int unshift(int symbol, int offset) {  
                                                ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" illegal start of expression
public static String encrypt(String message, int key) {
^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" illegal start of expression
public static String encrypt(String message, int key) {
       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" ';' expected
public static String encrypt(String message, int key) {
                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" ')' expected
public static String encrypt(String message, int key) {
                                   ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" illegal start of expression
public static String encrypt(String message, int key) {
                                           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" ';' expected
public static String encrypt(String message, int key) {
                                            ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" not a statement
public static String encrypt(String message, int key) {
                                                 ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"97";" ';' expected
public static String encrypt(String message, int key) {
                                                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" illegal start of expression
public static String decrypt(String cipher, int key) {
^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" illegal start of expression
public static String decrypt(String cipher, int key) {
       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" ';' expected
public static String decrypt(String cipher, int key) {
                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" ')' expected
public static String decrypt(String cipher, int key) {
                                   ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" illegal start of expression
public static String decrypt(String cipher, int key) {
                                          ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" ';' expected
public static String decrypt(String cipher, int key) {
                                           ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" not a statement
public static String decrypt(String cipher, int key) {
                                                ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"120";" ';' expected
public static String decrypt(String cipher, int key) {
                                                   ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" illegal start of expression
public static double[] getDictionaryFrequencies(String filename) {
^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" illegal start of expression
public static double[] getDictionaryFrequencies(String filename) {
       ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" ';' expected
public static double[] getDictionaryFrequencies(String filename) {
             ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" illegal start of expression
public static double[] getDictionaryFrequencies(String filename) {
                    ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" ';' expected
public static double[] getDictionaryFrequencies(String filename) {
                     ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" ')' expected
public static double[] getDictionaryFrequencies(String filename) {
                                                      ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" illegal start of expression
public static double[] getDictionaryFrequencies(String filename) {
                                                               ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"141";" ';' expected
public static double[] getDictionaryFrequencies(String filename) {
                                                                ^
/"
"6144b2ccc7cad06963c6033a19657dd7e935b237";"2020-10-09T03_20_48.233Z";"hw3.java";"183";" class, interface, or enum expected
}
^
37 errors
"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-05T18_51_02.610Z";"hw3.java";"53";" not a statement
        sy
        ^
/"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-05T18_51_02.610Z";"hw3.java";"53";" ';' expected
        sy
          ^
2 errors
"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-05T22_37_39.683Z";"hw3.java";"147";" cannot find symbol
         FileWriter eyptFile = new FileWriter('test_encryption.txt');
         ^
  symbol"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-05T22_37_39.683Z";"hw3.java";"147";" cannot find symbol
         FileWriter eyptFile = new FileWriter('test_encryption.txt');
                                   ^
  symbol"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-06T21_29_50.636Z";"hw3.java";"147";" cannot find symbol
         FileWriter eyptFile = new FileWriter('test_encryption.txt');
         ^
  symbol"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-06T21_29_50.636Z";"hw3.java";"147";" cannot find symbol
         FileWriter eyptFile = new FileWriter('test_encryption.txt');
                                   ^
  symbol"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-07T21_34_24.843Z";"hw3.java";"131";" illegal start of expression
        for (int i = 0; i < symbols.length; i++) {
        ^
/"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-07T21_34_24.843Z";"hw3.java";"131";" ')' expected
        for (int i = 0; i < symbols.length; i++) {
                  ^
/"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-07T21_34_24.843Z";"hw3.java";"131";" not a statement
        for (int i = 0; i < symbols.length; i++) {
            ^
/"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-07T21_34_24.843Z";"hw3.java";"131";" > expected
        for (int i = 0; i < symbols.length; i++) {
                                          ^
/"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-07T21_34_24.843Z";"hw3.java";"131";" not a statement
        for (int i = 0; i < symbols.length; i++) {
                          ^
/"
"61462cc7f58a084c8e51fbd9ba9623cd545132ad";"2020-10-07T21_34_24.843Z";"hw3.java";"131";" ';' expected
        for (int i = 0; i < symbols.length; i++) {
                                               ^
6 errors
"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T02_09_45.050Z";"hw3.java";"119";" incompatible types"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T02_09_45.050Z";"hw3.java";"123";" variable key is already defined in method main(String[])
                int key = args[2];
                    ^
/"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T02_09_45.050Z";"hw3.java";"123";" incompatible types"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T02_24_51.967Z";"hw3.java";"119";" bad operand types for binary operator '-'
                int key = args[2] - 'A';
                                  ^
  first type"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T02_24_51.967Z";"hw3.java";"123";" variable key is already defined in method main(String[])
                int key = args[2] - 'A';
                    ^
/"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T02_24_51.967Z";"hw3.java";"123";" bad operand types for binary operator '-'
                int key = args[2] - 'A';
                                  ^
  first type"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T04_26_51.172Z";"hw3.java";"144";" incompatible types"
"62c9c37ab7a39714cac0dde9affe3bd38751d13a";"2020-10-05T04_26_51.172Z";"hw3.java";"146";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"22";" <identifier> expected
            Input[i] = str.
                           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"36";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"36";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"36";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"36";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"36";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"44";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"44";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"44";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"44";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"44";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"44";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"52";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"52";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"52";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"52";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"52";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"52";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"60";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"68";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_26_05.794Z";"hw3.java";"76";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
42 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T04_50_08.455Z";"hw3.java";"23";" array required, but String found
            arr[i] = Integer.parseInt(str[i]);
                                         ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T05_04_53.459Z";"hw3.java";"23";" array required, but String found
            arr[i] = Integer.parseInt(str[i]);
                                         ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T05_45_24.332Z";"hw3.java";"21";" ';' expected
        stringToSymbolArray()
                             ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"38";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"38";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"38";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"38";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"38";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"46";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"46";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"46";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"54";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"54";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"54";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_45_16.892Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
41 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"25";" '.class' expected
            arr = Integer.parseInt(ch[]);
                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"40";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"40";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"40";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"40";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"40";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"48";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"48";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"48";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"48";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"48";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"48";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"56";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"56";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"56";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"56";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"56";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"56";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"64";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"72";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T06_58_17.399Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
42 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T07_40_00.987Z";"hw3.java";"29";" cannot find symbol
        return arr;
               ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T08_14_50.589Z";"hw3.java";"42";" not a statement
            symbols 
            ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T08_14_50.589Z";"hw3.java";"42";" ';' expected
            symbols 
                   ^
2 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T09_24_26.442Z";"hw3.java";"50";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T09_24_26.442Z";"hw3.java";"52";" array required, but String found
            str[j] = (String)charArray[j];
               ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T09_24_26.442Z";"hw3.java";"52";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T10_22_47.099Z";"hw3.java";"50";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T22_10_57.670Z";"hw3.java";"156";" cannot find symbol
      if (args[1] = encrypt){
                    ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T22_10_57.670Z";"hw3.java";"156";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T22_10_57.670Z";"hw3.java";"159";" cannot find symbol
      else if (args[1] = decrypt){
                         ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T22_10_57.670Z";"hw3.java";"159";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-07T22_10_57.670Z";"hw3.java";"163";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T00_19_28.332Z";"hw3.java";"154";" ';' expected
  String s = In inStream.readAll();
               ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T00_31_38.014Z";"hw3.java";"154";" ';' expected
  String s = In inStream.readAll();
               ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"153";" cannot find symbol
  In inStream = new In(filename); 
                       ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"156";" cannot find symbol
      if (args[1] = encrypt){
                    ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"156";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"157";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"159";" cannot find symbol
      else if (args[1] = decrypt){
                         ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"159";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"160";" cannot find symbol
         String decipher = decrypt(cipher, args[2]); 
                                   ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T01_12_55.045Z";"hw3.java";"163";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"114";" cannot find symbol
        double[] dub = new double[str.length()];
                                  ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"158";" cannot find symbol
  In inStream = new In(filename); 
                       ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"161";" cannot find symbol
      if (args[1] = encrypt){
                    ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"161";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"162";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"164";" cannot find symbol
      else if (args[1] = decrypt){
                         ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"164";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"165";" cannot find symbol
         String decipher = decrypt(cipher, args[2]); 
                                   ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T02_00_11.358Z";"hw3.java";"168";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"115";" cannot find symbol
        double[] dub = new double[str.length()];
                                  ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"116";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                            ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"117";" array required, but String found
            dub[i] = filename[i];
                             ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"159";" cannot find symbol
  In inStream = new In(filename); 
                       ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"162";" cannot find symbol
      if (args[1] = encrypt){
                    ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"162";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"163";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"165";" cannot find symbol
      else if (args[1] = decrypt){
                         ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"165";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"166";" cannot find symbol
         String decipher = decrypt(cipher, args[2]); 
                                   ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T03_34_41.315Z";"hw3.java";"169";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"115";" cannot find symbol
        double[] dub = new double[str.length()];
                                  ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"116";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                            ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"117";" cannot find symbol
            dub[i] = instream.readDouble();;
                     ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"159";" cannot find symbol
  In inStream = new In(filename); 
                       ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"162";" cannot find symbol
      if (args[1] = encrypt){
                    ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"162";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"163";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"165";" cannot find symbol
      else if (args[1] = decrypt){
                         ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"165";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"166";" cannot find symbol
         String decipher = decrypt(cipher, args[2]); 
                                   ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_08_47.833Z";"hw3.java";"169";" incompatible types"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_32_42.643Z";"hw3.java";"119";" not a statement
        dub[] = inStream.readAll();
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_32_42.643Z";"hw3.java";"119";" ';' expected
        dub[] = inStream.readAll();
             ^
2 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_58_12.111Z";"hw3.java";"119";" not a statement
        dub[] = inStream.readAll();
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T04_58_12.111Z";"hw3.java";"119";" ';' expected
        dub[] = inStream.readAll();
             ^
2 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T05_22_10.705Z";"hw3.java";"119";" not a statement
        dub[] = inStream.readAll();
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T05_22_10.705Z";"hw3.java";"119";" ';' expected
        dub[] = inStream.readAll();
             ^
2 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T07_00_08.003Z";"hw3.java";"119";" not a statement
        dub[] = inStream.readAll();
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T07_00_08.003Z";"hw3.java";"119";" ';' expected
        dub[] = inStream.readAll();
             ^
2 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"146";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"146";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"146";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"146";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"146";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"146";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"151";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"151";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"151";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"151";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"151";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T09_55_24.285Z";"hw3.java";"182";" reached end of file while parsing
}
 ^
12 errors
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T10_25_55.526Z";"hw3.java";"127";" cannot find symbol
        String[] str = new String[filename.length()];
                                  ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T10_25_55.526Z";"hw3.java";"131";" cannot find symbol
            if (str.charAt(i) == arr[i]){
                   ^
  symbol"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T17_51_07.250Z";"hw3.java";"165";" missing return statement
    }
    ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T18_22_59.767Z";"hw3.java";"167";" missing return statement
    }
    ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T19_13_14.364Z";"hw3.java";"172";" missing return statement
    }
    ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T20_37_45.380Z";"hw3.java";"175";" missing return statement
    }
    ^
1 error
"
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T21_24_55.297Z";"hw3.java";"173";" for-each not applicable to expression type
           for (int j "
"63f4115bbb9423cfd4cbababe99e05ccf5cce205";"2020-10-08T21_24_55.297Z";"hw3.java";"175";" cannot find symbol
                   smallest = j;
                   ^
  symbol"
"6441d968337ce853fb844b4be2360a7680bd3d3d";"2020-10-07T11_35_40.233Z";"hw3.java";"50";" illegal start of expression
        if ()
            ^
1 error
"
"6441d968337ce853fb844b4be2360a7680bd3d3d";"2020-10-08T04_57_01.330Z";"hw3.java";"100";" not a statement
        inStream
        ^
/"
"6441d968337ce853fb844b4be2360a7680bd3d3d";"2020-10-08T04_57_01.330Z";"hw3.java";"100";" ';' expected
        inStream
                ^
2 errors
"
"6441d968337ce853fb844b4be2360a7680bd3d3d";"2020-10-09T01_35_27.932Z";"hw3.java";"44";" incompatible types"
"6507e9a59c7760b7c7d8d0a3a16ba7eeb9e1ba64";"2020-10-03T22_44_42.239Z";"hw3.java";"42";" array dimension missing
        int[] stringArray = new int[];
                                     ^
1 error
"
"6507e9a59c7760b7c7d8d0a3a16ba7eeb9e1ba64";"2020-10-04T07_46_46.686Z";"hw3.java";"113";" cannot find symbol
        for (int i = 0; i < stringToSymbolArray.length; i++) {
                            ^
  symbol"
"6507e9a59c7760b7c7d8d0a3a16ba7eeb9e1ba64";"2020-10-04T07_46_46.686Z";"hw3.java";"114";" cannot find symbol
            System.out.print(stringToSymbolArray[i]);
                             ^
  symbol"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T18_59_32.784Z";"hw3.java";"35";" ';' expected
        char str.charAt(i);
                ^
1 error
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T19_59_09.841Z";"hw3.java";"39";" incompatible types"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T20_48_51.090Z";"hw3.java";"36";" array dimension missing
        for (int i = 0; i < str.length(); i++) { 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T20_48_51.090Z";"hw3.java";"36";" ')' expected
        for (int i = 0; i < str.length(); i++) { 
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T20_48_51.090Z";"hw3.java";"36";" not a statement
        for (int i = 0; i < str.length(); i++) { 
            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T20_48_51.090Z";"hw3.java";"36";" > expected
        for (int i = 0; i < str.length(); i++) { 
                                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T20_48_51.090Z";"hw3.java";"36";" not a statement
        for (int i = 0; i < str.length(); i++) { 
                          ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T20_48_51.090Z";"hw3.java";"36";" illegal start of expression
        for (int i = 0; i < str.length(); i++) { 
                                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-05T20_48_51.090Z";"hw3.java";"36";" ';' expected
        for (int i = 0; i < str.length(); i++) { 
                                             ^
7 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T07_22_51.592Z";"hw3.java";"60";" variable str1 might not have been initialized
        return str1;
               ^
1 error
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T09_52_02.974Z";"hw3.java";"65";" ';' expected
        returnVar = symbol % offset
                                   ^
1 error
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"90";" illegal start of expression
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"97";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"105";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T12_05_48.054Z";"hw3.java";"113";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
25 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"93";" -> expected
            returnVar = ()
                          ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"94";" illegal start of expression
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"94";" ';' expected
        }
         ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"95";" illegal start of expression
            returnVar = 
                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"95";" ';' expected
            returnVar = 
                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"103";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"111";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T13_14_43.827Z";"hw3.java";"119";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
29 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T14_52_02.649Z";"hw3.java";"93";" -> expected
            returnVar = ()
                          ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T14_52_02.649Z";"hw3.java";"94";" illegal start of expression
        } else {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T14_52_02.649Z";"hw3.java";"94";" ';' expected
        } else {
         ^
3 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"98";" illegal start of type
        return 0;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"98";" ';' expected
        return 0;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"104";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"107";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"112";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"115";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"120";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"123";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"128";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"131";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"136";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T15_18_20.374Z";"hw3.java";"139";" class, interface, or enum expected
    }
    ^
12 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"97";" not a statement
        for (i = 0, i < intMessage.length, i++) {
                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"97";" ';' expected
        for (i = 0, i < intMessage.length, i++) {
                                              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"97";" ';' expected
        for (i = 0, i < intMessage.length, i++) {
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"98";" '.class' expected
            intMessage[i] = shift(intMessage[i], int key);
                                                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"101";" <identifier> expected
        encrypted = symbolArrayToString(int[] intMessage);
                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"101";" '.class' expected
        encrypted = symbolArrayToString(int[] intMessage);
                                              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"101";" ';' expected
        encrypted = symbolArrayToString(int[] intMessage);
                                                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"102";" illegal start of type
        return encrypted;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"102";" ';' expected
        return encrypted;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"108";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"111";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"116";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"119";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"124";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"127";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"132";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T17_09_52.551Z";"hw3.java";"135";" class, interface, or enum expected
    }
    ^
17 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"108";" not a statement
        for (i = 0, i < intMessage.length, i++) {
                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"108";" ';' expected
        for (i = 0, i < intMessage.length, i++) {
                                              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"108";" ';' expected
        for (i = 0, i < intMessage.length, i++) {
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"109";" '.class' expected
            intMessage[i] = shift(intMessage[i], int key);
                                                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"112";" <identifier> expected
        encrypted = symbolArrayToString(int[] intMessage);
                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"112";" '.class' expected
        encrypted = symbolArrayToString(int[] intMessage);
                                              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"112";" ';' expected
        encrypted = symbolArrayToString(int[] intMessage);
                                                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"113";" illegal start of type
        return encrypted;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"113";" ';' expected
        return encrypted;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"119";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"121";" class, interface, or enum expected
        int[] intMessage = stringToSymbolArray(cipher);
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"122";" class, interface, or enum expected
        for (i = 0, i < intMessage.length, i++) {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"124";" class, interface, or enum expected
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"126";" class, interface, or enum expected
        decrypted = symbolArrayToString(int[] intMessage);
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"127";" class, interface, or enum expected
        return decrypted;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"128";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"133";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"136";" class, interface, or enum expected
        double Freq = inStream.readDouble();
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"137";" class, interface, or enum expected
        double[] freq = new double[Freq];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"139";" class, interface, or enum expected
        int[] FrequencyEng = new int[filename.length()];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"140";" class, interface, or enum expected
        for (int i = 0; i < filename.length(); i++) { 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"140";" class, interface, or enum expected
        for (int i = 0; i < filename.length(); i++) { 
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"140";" class, interface, or enum expected
        for (int i = 0; i < filename.length(); i++) { 
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"142";" class, interface, or enum expected
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"144";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"149";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"152";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"157";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T18_51_55.297Z";"hw3.java";"160";" class, interface, or enum expected
    }
    ^
29 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T19_43_50.826Z";"hw3.java";"136";" cannot find symbol
        double Freq = inStream.readDouble();
                      ^
  symbol"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-06T19_43_50.826Z";"hw3.java";"137";" incompatible types"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T07_16_29.047Z";"hw3.java";"130";" illegal start of expression
        if (symbols[i] >= 0) {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T07_16_29.047Z";"hw3.java";"130";" not a statement
        if (symbols[i] >= 0) {
           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T07_16_29.047Z";"hw3.java";"130";" ';' expected
        if (symbols[i] >= 0) {
                            ^
3 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"115";" illegal start of type
        for (int i = 0; i < N; i++) {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"115";" ')' expected
        for (int i = 0; i < N; i++) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"115";" illegal start of type
        for (int i = 0; i < N; i++) {
                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"115";" <identifier> expected
        for (int i = 0; i < N; i++) {
                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"115";" ';' expected
        for (int i = 0; i < N; i++) {
                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"115";" > expected
        for (int i = 0; i < N; i++) {
                             ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"115";" '(' expected
        for (int i = 0; i < N; i++) {
                                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"119";" illegal start of type
        return letter;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"119";" ';' expected
        return letter;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"125";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"127";" class, interface, or enum expected
        double[] txtLetter = new double [N];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"128";" class, interface, or enum expected
        for (int i = 0; i < N; i++) {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"128";" class, interface, or enum expected
        for (int i = 0; i < N; i++) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"128";" class, interface, or enum expected
        for (int i = 0; i < N; i++) {
                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"133";" class, interface, or enum expected
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"139";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"142";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"144";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"146";" class, interface, or enum expected
        if 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"148";" class, interface, or enum expected
        int key = args[2];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"150";" class, interface, or enum expected
        In inStream = new In(filename); 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"151";" class, interface, or enum expected
        String str = inStream.readAll();
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_04_49.652Z";"hw3.java";"176";" class, interface, or enum expected
    }
    ^
23 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"115";" illegal start of type
        for (int i = 0; i < N; i++) {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"115";" ')' expected
        for (int i = 0; i < N; i++) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"115";" illegal start of type
        for (int i = 0; i < N; i++) {
                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"115";" <identifier> expected
        for (int i = 0; i < N; i++) {
                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"115";" ';' expected
        for (int i = 0; i < N; i++) {
                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"115";" > expected
        for (int i = 0; i < N; i++) {
                             ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"115";" '(' expected
        for (int i = 0; i < N; i++) {
                                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"119";" illegal start of type
        return letter;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"119";" ';' expected
        return letter;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"125";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"127";" class, interface, or enum expected
        double[] txtLetter = new double [N];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"128";" class, interface, or enum expected
        for (int i = 0; i < N; i++) {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"128";" class, interface, or enum expected
        for (int i = 0; i < N; i++) {
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"128";" class, interface, or enum expected
        for (int i = 0; i < N; i++) {
                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"133";" class, interface, or enum expected
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"139";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"142";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"144";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"146";" class, interface, or enum expected
        if 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"148";" class, interface, or enum expected
        int key = args[2];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"150";" class, interface, or enum expected
        In inStream = new In(filename); 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"151";" class, interface, or enum expected
        String str = inStream.readAll();
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T09_42_30.972Z";"hw3.java";"176";" class, interface, or enum expected
    }
    ^
23 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T10_24_57.046Z";"hw3.java";"130";" '.class' expected
            double freq = double (1 / count);
                                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T10_24_57.046Z";"hw3.java";"130";" not a statement
            double freq = double (1 / count);
                                    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T10_24_57.046Z";"hw3.java";"130";" ';' expected
            double freq = double (1 / count);
                                           ^
3 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T14_09_14.584Z";"hw3.java";"190";" array required, but double found
                double minValue = frequency[0];
                                           ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T14_09_14.584Z";"hw3.java";"191";" double cannot be dereferenced
                for(int i = 1; i < frequency.length; i++) {
                                            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T14_09_14.584Z";"hw3.java";"192";" array required, but double found
                    if (frequency[i] < minValue){
                                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T14_09_14.584Z";"hw3.java";"193";" array required, but double found
                        minValue = frequency[i];
                                            ^
4 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T15_23_13.910Z";"hw3.java";"211";" illegal start of type
        return null;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T15_23_13.910Z";"hw3.java";"211";" ';' expected
        return null;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T15_23_13.910Z";"hw3.java";"215";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
3 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T15_40_14.852Z";"hw3.java";"215";" illegal start of type
        return null;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T15_40_14.852Z";"hw3.java";"215";" ';' expected
        return null;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T15_40_14.852Z";"hw3.java";"219";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
3 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_18_43.881Z";"hw3.java";"215";" illegal start of type
        return null;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_18_43.881Z";"hw3.java";"215";" ';' expected
        return null;
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_18_43.881Z";"hw3.java";"219";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_18_43.881Z";"hw3.java";"221";" class, interface, or enum expected
        String filename = args[0];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_18_43.881Z";"hw3.java";"264";" class, interface, or enum expected
        crack(String CrackInput, String filename)
        ^
5 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_51_07.210Z";"hw3.java";"203";" '(' expected
            if minValue = 
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_51_07.210Z";"hw3.java";"206";" illegal start of expression
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T17_51_07.210Z";"hw3.java";"207";" illegal start of statement
    }
    ^
3 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T18_50_40.468Z";"hw3.java";"203";" '(' expected
            if minValue = 
              ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T18_50_40.468Z";"hw3.java";"206";" illegal start of expression
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T18_50_40.468Z";"hw3.java";"207";" illegal start of statement
    }
    ^
3 errors
"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T19_31_01.875Z";"hw3.java";"210";" cannot find symbol
        String Crackedoutput = decrypt(CrackInput, keySymbol);
                                                   ^
  symbol"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T19_31_01.875Z";"hw3.java";"228";" incompatible types"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T19_31_01.875Z";"hw3.java";"232";" incompatible types"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-07T20_20_45.089Z";"hw3.java";"78";" unexpected type
            returnVar % 26 = symbol - offset % 26;
                      ^
  required"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" illegal start of type
        for (int i = 0; i < frequency.length; i++) 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" ')' expected
        for (int i = 0; i < frequency.length; i++) 
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" illegal start of type
        for (int i = 0; i < frequency.length; i++) 
                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" <identifier> expected
        for (int i = 0; i < frequency.length; i++) 
                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" ';' expected
        for (int i = 0; i < frequency.length; i++) 
                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" > expected
        for (int i = 0; i < frequency.length; i++) 
                                     ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" '(' expected
        for (int i = 0; i < frequency.length; i++) 
                                            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" <identifier> expected
        for (int i = 0; i < frequency.length; i++) 
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"175";" illegal start of type
        for (int i = 0; i < frequency.length; i++) 
                                                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"176";" ']' expected
            frequency[i] = frequency[i] / count;
                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"176";" illegal start of type
            frequency[i] = frequency[i] / count;
                       ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"176";" <identifier> expected
            frequency[i] = frequency[i] / count;
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"176";" ';' expected
            frequency[i] = frequency[i] / count;
                          ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"176";" illegal start of type
            frequency[i] = frequency[i] / count;
                                    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"176";" ';' expected
            frequency[i] = frequency[i] / count;
                                      ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"176";" <identifier> expected
            frequency[i] = frequency[i] / count;
                                               ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"178";" class, interface, or enum expected
        return frequency;  
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"179";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"191";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"193";" class, interface, or enum expected
        double sum = 0;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"195";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++){
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"195";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++){
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"195";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++){
                                            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"197";" class, interface, or enum expected
            sum = sum + score;
            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"198";" class, interface, or enum expected
        }
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"200";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"212";" class, interface, or enum expected
    public static String crack(String CrackInput, String filename) { 
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"214";" class, interface, or enum expected
        double minScore = 26.0;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"215";" class, interface, or enum expected
        double[] currentFreqs = new double[26];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"216";" class, interface, or enum expected
        double[] dict = new double[26];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"217";" class, interface, or enum expected
        dict = getDictionaryFrequencies(filename);
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"219";" class, interface, or enum expected
        for (int i = 0; i <= 25; i++) { 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"219";" class, interface, or enum expected
        for (int i = 0; i <= 25; i++) { 
                        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"219";" class, interface, or enum expected
        for (int i = 0; i <= 25; i++) { 
                                 ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"222";" class, interface, or enum expected
            int[] CrackInt = stringToSymbolArray(Crackoutput);
            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"223";" class, interface, or enum expected
            currentFreqs = findFrequencies(CrackInt);
            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"225";" class, interface, or enum expected
            double frequency = scoreFrequencies(dict, currentFreqs);
            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"227";" class, interface, or enum expected
            if (frequency < minScore) {
            ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"229";" class, interface, or enum expected
                key = i;
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"230";" class, interface, or enum expected
                }            
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"233";" class, interface, or enum expected
        return Crackedoutput;
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"234";" class, interface, or enum expected
    }
    ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"236";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"238";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"239";" class, interface, or enum expected
        String hint = args[2];
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"242";" class, interface, or enum expected
        In inStream = new In(filename); 
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"243";" class, interface, or enum expected
        String message = inStream.readAll();
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"244";" class, interface, or enum expected
        int key = (int) hint.charAt(0) - 'A';
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"246";" class, interface, or enum expected
        switch (execute) {
        ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"249";" class, interface, or enum expected
                System.out.println('the encrypted message is ' + encryptedMsg);
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"250";" class, interface, or enum expected
                break;
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"251";" class, interface, or enum expected
            case 'decrypt'"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"253";" class, interface, or enum expected
                System.out.println('the decrypted message is ' + decryptedMsg);
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"254";" class, interface, or enum expected
                break;
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"255";" class, interface, or enum expected
            case 'crack'"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"257";" class, interface, or enum expected
                System.out.println('the cracked message is ' + crackedMsg);
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"258";" class, interface, or enum expected
                break;
                ^
/"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"259";" class, interface, or enum expected
            default"
"65fadf52b477dfc365a46cb400d773792dcb3341";"2020-10-08T23_17_17.035Z";"hw3.java";"261";" class, interface, or enum expected
        }
        ^
59 errors
"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-06T01_00_54.084Z";"hw3.java";"22";" cannot find symbol
        int[] symbols = new int[str.length];
                                   ^
  symbol"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-06T01_00_54.084Z";"hw3.java";"23";" cannot find symbol
        for (int i = 0; i < str.length; i = i + 1) {
                               ^
  symbol"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-06T01_00_54.084Z";"hw3.java";"24";" array required, but String found
            int ourSymbolRepresentation = (int) str[i] - 'A';
                                                   ^
3 errors
"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"63";" ';' expected
                symbol[i] = symbol[i] + offset
                                              ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"65";" ';' expected
                    symbol[i] = symbol[i] - 26                 
                                              ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"83";" ';' expected
            symbol[i] = symbol[i] - offset
                                          ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"85";" ';' expected
                   symbol[i] = symbol[i] + 26 
                                             ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"96";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"104";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_13_37.821Z";"hw3.java";"112";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
28 errors
"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_27_56.647Z";"hw3.java";"63";" ';' expected
                symbol[i] = symbol[i] + offset
                                              ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_27_56.647Z";"hw3.java";"65";" ';' expected
                    symbol[i] = symbol[i] - 26                 
                                              ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_27_56.647Z";"hw3.java";"84";" ';' expected
                symbol[i] = symbol[i] - offset
                                              ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T17_27_56.647Z";"hw3.java";"86";" ';' expected
                    symbol[i] = symbol[i] + 26                 
                                              ^
4 errors
"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T22_59_37.918Z";"hw3.java";"93";" not a statement
        symmessage[] = stringToSymbolArray(message);
                  ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T22_59_37.918Z";"hw3.java";"93";" ';' expected
        symmessage[] = stringToSymbolArray(message);
                    ^
/"
"6605b28f4160ac2ecd5ed4dec5a815d066f309b3";"2020-10-08T22_59_37.918Z";"hw3.java";"97";" '.class' expected
        stringmessage = symbolArrayToString(symmessage[]);     
                                                        ^
3 errors
"
"6663a4284c794ea4550e61af7191209e73045a86";"2020-10-06T10_32_30.049Z";"hw3.java";"28";" array dimension missing
        return null;
        ^
/"
"6663a4284c794ea4550e61af7191209e73045a86";"2020-10-06T10_32_30.049Z";"hw3.java";"28";" not a statement
        return null;
               ^
2 errors
"
"6663a4284c794ea4550e61af7191209e73045a86";"2020-10-06T11_05_34.734Z";"hw3.java";"50";" unexpected type
            str.charAt(i) = (char) symbols[i];
                      ^
  required"
"6663a4284c794ea4550e61af7191209e73045a86";"2020-10-08T04_14_13.865Z";"hw3.java";"179";" '.class' expected
            freq[i] = inStream.readDouble[];
                                           ^
1 error
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-06T22_49_53.331Z";"hw3.java";"125";" <identifier> expected
    System.out.println(hello);
                      ^
/"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-06T22_49_53.331Z";"hw3.java";"125";" <identifier> expected
    System.out.println(hello);
                            ^
2 errors
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-07T02_04_33.627Z";"hw3.java";"150";" ')' expected
		int [] symbols = stringToSymbolArray(String message);
		                                           ^
/"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-07T02_04_33.627Z";"hw3.java";"150";" illegal start of expression
		int [] symbols = stringToSymbolArray(String message);
		                                                   ^
2 errors
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-07T19_20_20.749Z";"hw3.java";"208";" not a statement
		double[]
		      ^
/"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-07T19_20_20.749Z";"hw3.java";"208";" ';' expected
		double[]
		        ^
2 errors
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-07T21_52_18.637Z";"hw3.java";"289";" missing return statement
	}
	^
1 error
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-07T22_13_50.786Z";"hw3.java";"288";" illegal start of expression
		int lowestScore = ;
		                  ^
1 error
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-07T22_51_48.089Z";"hw3.java";"288";" illegal start of expression
		int lowestScore = ;
		                  ^
1 error
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-08T02_12_39.201Z";"hw3.java";"288";" illegal start of expression
		double lowestScore =  ;
		                      ^
1 error
"
"66c9b4c37d28677a10b2259a87fcacfd63dbd9a0";"2020-10-08T02_39_15.087Z";"hw3.java";"297";" variable key is already defined in method crack(String,String)
		for (int key = 0; key < 26; key++) {
		         ^
1 error
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
    ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
           ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                 ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                     ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                      ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" ')' expected
    public static int[] stringToSymbolArray(String str) {
                                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"24";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                                                       ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-04T23_41_22.848Z";"hw3.java";"101";" class, interface, or enum expected
}
^
9 errors
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
    ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
           ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                 ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                     ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                      ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" ')' expected
    public static int[] stringToSymbolArray(String str) {
                                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" illegal start of expression
    public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"24";" ';' expected
    public static int[] stringToSymbolArray(String str) {
                                                       ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"27";" ';' expected
        int [] stringToSymbolArray() = new int str.length();
                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"27";" ';' expected
        int [] stringToSymbolArray() = new int str.length();
                                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-05T00_37_57.877Z";"hw3.java";"103";" class, interface, or enum expected
}
^
11 errors
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-06T01_11_18.115Z";"hw3.java";"50";" cannot find symbol
            int ourSymbolRepresentation = symbols.charAt(i);
                                                 ^
  symbol"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-06T01_11_18.115Z";"hw3.java";"56";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-06T20_43_58.401Z";"hw3.java";"45";" <identifier> expected
    returnString = '';
                ^
1 error
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-06T21_00_40.187Z";"hw3.java";"54";" cannot find symbol
            int ourSymbolRepresentation = symbols.charAt(i);
                                                 ^
  symbol"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T00_29_15.645Z";"hw3.java";"104";" cannot find symbol
            symbols[i] = symbols[i] + offset; 
                                      ^
  symbol"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T18_00_26.310Z";"hw3.java";"147";" cannot find symbol
        String text = inStream.readAll();
                      ^
  symbol"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T20_00_31.535Z";"hw3.java";"145";" ';' expected
        String filename = args[1]
                                 ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T20_00_31.535Z";"hw3.java";"146";" ';' expected
        int key = Integer.parseInt(args[2])
                                           ^
2 errors
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T23_56_56.933Z";"hw3.java";"133";" cannot find symbol
        return frequencies;
               ^
  symbol"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T23_56_56.933Z";"hw3.java";"159";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T23_56_56.933Z";"hw3.java";"162";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-07T23_56_56.933Z";"hw3.java";"166";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T00_10_42.852Z";"hw3.java";"161";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T00_10_42.852Z";"hw3.java";"164";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T00_10_42.852Z";"hw3.java";"168";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T02_05_17.535Z";"hw3.java";"162";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T02_05_17.535Z";"hw3.java";"165";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T02_05_17.535Z";"hw3.java";"169";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T02_20_06.147Z";"hw3.java";"162";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T02_20_06.147Z";"hw3.java";"165";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T02_20_06.147Z";"hw3.java";"169";" incompatible types"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T11_45_33.644Z";"hw3.java";"128";" ';' expected
        for (int i = 0; i < 26, i++) {
                              ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T11_45_33.644Z";"hw3.java";"128";" ')' expected
        for (int i = 0; i < 26, i++) {
                               ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T11_45_33.644Z";"hw3.java";"128";" illegal start of expression
        for (int i = 0; i < 26, i++) {
                                   ^
3 errors
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_08_43.041Z";"hw3.java";"178";" illegal start of type
    public static String crack (, ) {
                                ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_08_43.041Z";"hw3.java";"183";" ')' expected
            decrypt(String cipher, int key)
                          ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_08_43.041Z";"hw3.java";"183";" illegal start of expression
            decrypt(String cipher, int key)
                                 ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_08_43.041Z";"hw3.java";"183";" ';' expected
            decrypt(String cipher, int key)
                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_08_43.041Z";"hw3.java";"183";" not a statement
            decrypt(String cipher, int key)
                                       ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_08_43.041Z";"hw3.java";"183";" ';' expected
            decrypt(String cipher, int key)
                                          ^
6 errors
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_21_42.070Z";"hw3.java";"178";" illegal start of type
    public static String crack (, ) {
                                ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_21_42.070Z";"hw3.java";"183";" ')' expected
            decrypt(String cipher, int key)
                          ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_21_42.070Z";"hw3.java";"183";" illegal start of expression
            decrypt(String cipher, int key)
                                 ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_21_42.070Z";"hw3.java";"183";" ';' expected
            decrypt(String cipher, int key)
                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_21_42.070Z";"hw3.java";"183";" not a statement
            decrypt(String cipher, int key)
                                       ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T14_21_42.070Z";"hw3.java";"183";" ';' expected
            decrypt(String cipher, int key)
                                          ^
6 errors
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"178";" ')' expected
    public static String crack (String file double[] english) {
                                           ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"178";" illegal start of type
    public static String crack (String file double[] english) {
                                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"178";" <identifier> expected
    public static String crack (String file double[] english) {
                                                   ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"178";" ';' expected
    public static String crack (String file double[] english) {
                                                    ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"178";" illegal start of type
    public static String crack (String file double[] english) {
                                                            ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"178";" <identifier> expected
    public static String crack (String file double[] english) {
                                                             ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"178";" ';' expected
    public static String crack (String file double[] english) {
                                                               ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" illegal start of type
        double[] diff = new double[26];
              ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" <identifier> expected
        double[] diff = new double[26];
               ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" ';' expected
        double[] diff = new double[26];
                ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" illegal start of type
        double[] diff = new double[26];
                      ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" <identifier> expected
        double[] diff = new double[26];
                       ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" ';' expected
        double[] diff = new double[26];
                           ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" illegal start of type
        double[] diff = new double[26];
                                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" <identifier> expected
        double[] diff = new double[26];
                                   ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"180";" ';' expected
        double[] diff = new double[26];
                                     ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" illegal start of type
        for (int i = 0; i < 26; i++) {
        ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" ')' expected
        for (int i = 0; i < 26; i++) {
                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" illegal start of type
        for (int i = 0; i < 26; i++) {
                     ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" <identifier> expected
        for (int i = 0; i < 26; i++) {
                      ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" ';' expected
        for (int i = 0; i < 26; i++) {
                       ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" <identifier> expected
        for (int i = 0; i < 26; i++) {
                           ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" illegal start of type
        for (int i = 0; i < 26; i++) {
                              ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"182";" '(' expected
        for (int i = 0; i < 26; i++) {
                                 ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"195";" illegal start of type
        return message;
        ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"195";" ';' expected
        return message;
              ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"198";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"229";" class, interface, or enum expected
       double[] x = findFrequencies(result);
       ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"231";" class, interface, or enum expected
        for (int i = 0; i < x.length; i++) {
        ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"231";" class, interface, or enum expected
        for (int i = 0; i < x.length; i++) {
                        ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"231";" class, interface, or enum expected
        for (int i = 0; i < x.length; i++) {
                                      ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T22_57_45.558Z";"hw3.java";"237";" class, interface, or enum expected
        }
        ^
32 errors
"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T23_47_24.861Z";"hw3.java";"167";" variable total might not have been initialized
           total = total + Math.abs(english[i] - currentFreqs[i]);
                   ^
/"
"66e8f980b419372422e7a90d1913393cfbc8808a";"2020-10-08T23_47_24.861Z";"hw3.java";"170";" variable total might not have been initialized
        return total;
               ^
2 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ')' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" <identifier> expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" illegal start of expression
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                               ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ';' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" illegal start of expression
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ';' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                     ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" illegal start of expression
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ';' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" illegal start of expression
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                              ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ';' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                               ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" illegal start of expression
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                                   ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ';' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                                    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" illegal start of expression
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ';' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" illegal start of expression
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                                             ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"22";" ';' expected
        char[] code =( 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                                                              ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" illegal start of expression
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                            ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" ';' expected
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                             ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" illegal start of expression
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" ';' expected
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                  ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" illegal start of expression
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                      ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" ';' expected
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                       ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" illegal start of expression
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" ';' expected
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                            ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" illegal start of expression
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                                ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" ';' expected
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" illegal start of expression
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                                     ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" ';' expected
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                                      ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" illegal start of expression
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                                          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"23";" ';' expected
                         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'
                                                           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"24";" not a statement
                         'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T00_00_58.472Z";"hw3.java";"24";" ';' expected
                         'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                            ^
32 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T01_20_47.655Z";"hw3.java";"28";" missing return statement
    }
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T01_20_47.655Z";"hw3.java";"24";" variable i might not have been initialized
        int i = str.charAt(i);
                           ^
2 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T02_08_13.132Z";"hw3.java";"22";" cannot find symbol
        for(int i = 0; i < str.length; i++){
                              ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T03_09_35.713Z";"hw3.java";"23";" cannot find symbol
        int[] f = new int[str.length];
                             ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T03_09_35.713Z";"hw3.java";"24";" cannot find symbol
        for(int i = 0; i < str.length; i++){
                              ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T03_34_58.100Z";"hw3.java";"107";" not a statement
        int[] = new int[stringToSymbolArray()];
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T03_34_58.100Z";"hw3.java";"107";" ';' expected
        int[] = new int[stringToSymbolArray()];
             ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T03_34_58.100Z";"hw3.java";"107";" ']' expected
        int[] = new int[stringToSymbolArray()];
                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T03_34_58.100Z";"hw3.java";"107";" ';' expected
        int[] = new int[stringToSymbolArray()];
                                           ^
4 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T06_05_52.940Z";"hw3.java";"104";" incompatible types"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-07T06_20_44.406Z";"hw3.java";"42";" ';' expected
       for(int j = 0; j < str.length)
                                    ^
1 error
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"45";" <identifier> expected
            rts[i] = String.
                            ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"52";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"52";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"52";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"52";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"52";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"52";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"61";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"61";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"61";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T18_31_18.915Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
37 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T22_12_12.360Z";"hw3.java";"86";" not a statement
        i
        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T22_12_12.360Z";"hw3.java";"86";" ';' expected
        i
         ^
2 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T23_23_32.323Z";"hw3.java";"59";" bad operand types for binary operator '<='
            if( 0 <= symbol <= 25){
                            ^
  first type"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-08T23_23_32.323Z";"hw3.java";"72";" bad operand types for binary operator '<='
        if( 0 <= symbol <= 25){
                        ^
  first type"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"127";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"127";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"127";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"127";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"127";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"127";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"127";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"141";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"141";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"141";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"141";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"141";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"141";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"146";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"146";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"146";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"146";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"146";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T00_07_06.836Z";"hw3.java";"155";" reached end of file while parsing
}
 ^
19 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"122";" ';' expected
        return b
                ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"127";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"127";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"127";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"127";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"141";" ';' expected
                    symbolArrayToString()
                                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"149";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"149";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"149";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"149";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"149";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"149";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"154";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"154";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"154";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"154";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"154";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T01_21_58.814Z";"hw3.java";"163";" reached end of file while parsing
}
 ^
18 errors
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_20_39.201Z";"hw3.java";"121";" ';' expected
        return b
                ^
1 error
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"120";" cannot find symbol
            b[i] = inStream.readDouble();
                   ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"136";" incompatible types"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"144";" cannot find symbol
                    if(symbols[c] = a){
                                    ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"144";" incompatible types"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"145";" cannot find symbol
                        f[i] += 1;
                          ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"145";" array required, but double found
                        f[i] += 1;
                         ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"148";" cannot find symbol
                f[i] = f[i]/ n;
                  ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"148";" array required, but double found
                f[i] = f[i]/ n;
                 ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"148";" cannot find symbol
                f[i] = f[i]/ n;
                         ^
  symbol"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"148";" array required, but double found
                f[i] = f[i]/ n;
                        ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T02_55_48.273Z";"hw3.java";"150";" incompatible types"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T03_50_09.034Z";"hw3.java";"171";" illegal start of statement
        }
        ^
1 error
"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T23_11_46.585Z";"hw3.java";"25";" not a statement
            int = (int) f[i] - 'A';
            ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T23_11_46.585Z";"hw3.java";"25";" ';' expected
            int = (int) f[i] - 'A';
               ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T23_11_46.585Z";"hw3.java";"25";" not a statement
            int = (int) f[i] - 'A';
                   ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T23_11_46.585Z";"hw3.java";"25";" ';' expected
            int = (int) f[i] - 'A';
                      ^
/"
"67aaf2c30b90ae3ed9eb57c5c86d88bc439f0930";"2020-10-09T23_11_46.585Z";"hw3.java";"25";" not a statement
            int = (int) f[i] - 'A';
                             ^
5 errors
"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-05T00_11_48.000Z";"hw3.java";"133";" cannot find symbol
        symbolArrayToString(stringArray);
                            ^
  symbol"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-05T00_36_48.805Z";"hw3.java";"141";" cannot find symbol
        symbolArrayToString(stringArray);
                            ^
  symbol"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-05T02_30_13.363Z";"hw3.java";"67";" not a statement
        else (symbol % 25 == 0){
             ^
/"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-05T02_30_13.363Z";"hw3.java";"67";" ';' expected
        else (symbol % 25 == 0){
                               ^
2 errors
"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-05T16_19_14.278Z";"hw3.java";"98";" illegal start of expression
        for (int i = 0; i < )
                            ^
/"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-05T16_19_14.278Z";"hw3.java";"102";" illegal start of expression
        return null;
        ^
/"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-05T16_19_14.278Z";"hw3.java";"102";" ')' expected
        return null;
              ^
3 errors
"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-08T18_18_24.559Z";"hw3.java";"221";" cannot find symbol
        crackSymbolArray[i] = stringToSymbolArray(fileRead);
                         ^
  symbol"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-08T18_18_24.559Z";"hw3.java";"221";" incompatible types"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-08T18_18_24.559Z";"hw3.java";"243";" method findFrequencies in class Caesar cannot be applied to given types;
            freqDifferences = findFrequencies(nonCalcFreq, freqInEnglish);
                              ^
  required"
"683d30cf12add9df08c8250cfd9b8153ff0acd3e";"2020-10-08T21_53_57.262Z";"hw3.java";"354";" ';' expected
        int[] test2 = {}
                        ^
1 error
"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T13_25_00.756Z";"hw3.java";"23";" cannot find symbol
        int[] symbols = new Int();
                            ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T14_24_39.531Z";"hw3.java";"31";" empty character literal
        char letter = '';
                      ^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T14_24_39.531Z";"hw3.java";"31";" unclosed character literal
        char letter = '';
                       ^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T14_24_39.531Z";"hw3.java";"31";" ';' expected
        char letter = '';
                         ^
3 errors
"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T17_37_32.572Z";"hw3.java";"120";" ';' expected
       String symbolArrayToString();
                                 ^
1 error
"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T18_35_15.526Z";"hw3.java";"52";" cannot find symbol
       for (int i = 0; i < intArray.length(); i++){
                                   ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T18_35_15.526Z";"hw3.java";"61";" cannot find symbol
        return letter;
               ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T18_35_15.526Z";"hw3.java";"123";" method symbolArrayToString in class Caesar cannot be applied to given types;
       symbolArrayToString();
       ^
  required"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T18_57_58.361Z";"hw3.java";"52";" cannot find symbol
       for (int i = 0; i < symbols.length(); i++){
                                  ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T18_57_58.361Z";"hw3.java";"54";" cannot find symbol
           char letter = symbols.charAt(i);
                                ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T18_57_58.361Z";"hw3.java";"62";" incompatible types"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T18_57_58.361Z";"hw3.java";"124";" cannot find symbol
       symbolArrayToString(symbolArray);
                           ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T19_35_10.532Z";"hw3.java";"54";" '.class' expected
           String letter = (char) int asciiRepresentation;
                                      ^
1 error
"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T20_09_15.120Z";"hw3.java";"54";" cannot find symbol
         int ourSymbolRepresentation = (int) letter - 'A';
                                             ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T20_09_15.120Z";"hw3.java";"68";" cannot find symbol
        return letter;
               ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T20_44_03.606Z";"hw3.java";"62";" incompatible types"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T20_44_03.606Z";"hw3.java";"124";" method symbolArrayToString in class Caesar cannot be applied to given types;
        symbolArrayToString();
        ^
  required"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T21_01_31.023Z";"hw3.java";"64";" incompatible types"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T21_01_31.023Z";"hw3.java";"126";" method symbolArrayToString in class Caesar cannot be applied to given types;
       symbolArrayToString();
       ^
  required"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T21_52_01.474Z";"hw3.java";"60";" incompatible types"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T21_52_01.474Z";"hw3.java";"122";" cannot find symbol
        symbolArraytoString(CharArray);
                            ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T22_32_08.321Z";"hw3.java";"50";" cannot find symbol
    Strring answer = '';
    ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T22_32_08.321Z";"hw3.java";"56";" cannot find symbol
           charArray[i] = letter;
           ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-07T22_32_08.321Z";"hw3.java";"122";" cannot find symbol
        symbolArraytoString(CharArray);
                            ^
  symbol"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-08T00_29_39.399Z";"hw3.java";"130";" illegal start of expression
    	for(int i = 0; i < 26; i ++) {
    	^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-08T00_29_39.399Z";"hw3.java";"128";" not a statement
    	BufferedReader br = new BufferedReader(new FileReader(filename));                                   -
    	                                                                                                    ^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-08T00_29_39.399Z";"hw3.java";"130";" ')' expected
    	for(int i = 0; i < 26; i ++) {
    	         ^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-08T00_29_39.399Z";"hw3.java";"130";" not a statement
    	for(int i = 0; i < 26; i ++) {
    	   ^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-08T00_29_39.399Z";"hw3.java";"130";" illegal start of type
    	for(int i = 0; i < 26; i ++) {
    	                   ^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-08T00_29_39.399Z";"hw3.java";"130";" not a statement
    	for(int i = 0; i < 26; i ++) {
    	                 ^
/"
"68b0463b34364f614b76a8a97ac7c98b37916506";"2020-10-08T00_29_39.399Z";"hw3.java";"130";" ';' expected
    	for(int i = 0; i < 26; i ++) {
    	                           ^
7 errors
"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T21_51_36.215Z";"hw3.java";"24";" cannot find symbol
        int[] symbolArray = new int [str.length];
                                        ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T21_51_36.215Z";"hw3.java";"25";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T21_51_36.215Z";"hw3.java";"26";" cannot find symbol
            symbolArray[i] = str.charAt[i] - 'A';
                                ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T22_53_13.751Z";"hw3.java";"24";" cannot find symbol
        int[] symbolArray = new int [str.length];
                                        ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T22_53_13.751Z";"hw3.java";"25";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T22_53_13.751Z";"hw3.java";"26";" cannot find symbol
            symbolArray[i] = str.charAt[i] - 'A';
                                ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T23_22_28.481Z";"hw3.java";"24";" cannot find symbol
        int[] symbolArray = new int [str.length];
                                        ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T23_22_28.481Z";"hw3.java";"25";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-07T23_22_28.481Z";"hw3.java";"26";" cannot find symbol
            symbolArray[i] = str.charAt[i] - 'A';
                                ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T17_02_45.671Z";"hw3.java";"47";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T17_02_45.671Z";"hw3.java";"48";" cannot find symbol
            something = symbols.charAt(i) + 'A';
                               ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T17_02_45.671Z";"hw3.java";"50";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++){
                                   ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T17_02_45.671Z";"hw3.java";"114";" cannot find symbol
        symbolArrayToString(symbolArray);
                            ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T18_57_54.989Z";"hw3.java";"47";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T18_57_54.989Z";"hw3.java";"48";" cannot find symbol
            something = symbols.charAt(i) + 'A';
                               ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T18_57_54.989Z";"hw3.java";"50";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++){
                                   ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T20_40_07.282Z";"hw3.java";"74";" not a statement
        i
        ^
/"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-08T20_40_07.282Z";"hw3.java";"74";" ';' expected
        i
         ^
2 errors
"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-10T18_24_46.015Z";"hw3.java";"133";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-10T18_54_40.613Z";"hw3.java";"133";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"6923d2c4a9b794f7653cdc3c892b733d71da9af5";"2020-10-10T19_37_28.857Z";"hw3.java";"30";" illegal start of expression
            symbolArray[i] = ;
                             ^
1 error
"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_36_28.182Z";"hw3.java";"42";" ';' expected
          number[i] = (string) //how to convert from number into char
                              ^
1 error
"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"41";" cannot find symbol
      for (int i = 0; i < symbols.length(); i++) {
                                 ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"42";" array required, but String found
          number[i] = (char) //how to convert from number into char
                ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"43";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"52";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"106";" cannot find symbol
        for (i = 0; i < args.length; i++) {
             ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"106";" cannot find symbol
        for (i = 0; i < args.length; i++) {
                    ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"106";" cannot find symbol
        for (i = 0; i < args.length; i++) {
                                     ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"108";" cannot find symbol
            System.out.println(letter[0], letter[1], letter[2], letter[3], letter[4]);
                               ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"108";" cannot find symbol
            System.out.println(letter[0], letter[1], letter[2], letter[3], letter[4]);
                                          ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"108";" cannot find symbol
            System.out.println(letter[0], letter[1], letter[2], letter[3], letter[4]);
                                                     ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"108";" cannot find symbol
            System.out.println(letter[0], letter[1], letter[2], letter[3], letter[4]);
                                                                ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-05T21_59_21.220Z";"hw3.java";"108";" cannot find symbol
            System.out.println(letter[0], letter[1], letter[2], letter[3], letter[4]);
                                                                           ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T20_20_59.959Z";"hw3.java";"54";" not a statement
            symbol + offset;
                   ^
1 error
"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T22_07_32.952Z";"hw3.java";"53";" not a statement
        offset //int -- only place its a character is on the command line
        ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T22_07_32.952Z";"hw3.java";"53";" ';' expected
        offset //int -- only place its a character is on the command line
              ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T22_07_32.952Z";"hw3.java";"55";" not a statement
            symbol + offset;
                   ^
3 errors
"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T23_14_35.978Z";"hw3.java";"67";" ';' expected
            unshiftedSymbol = (int) (symbol - offset + 26) % 26);
                                                               ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T23_14_35.978Z";"hw3.java";"71";" ';' expected
            return symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T23_38_40.468Z";"hw3.java";"67";" ';' expected
            unshiftedSymbol = (int) (symbol - offset + 26) % 26);
                                                               ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-06T23_38_40.468Z";"hw3.java";"71";" ';' expected
            return symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T00_03_04.645Z";"hw3.java";"67";" ';' expected
            unshiftedSymbol = (int) (symbol - offset + 26) % 26);
                                                               ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T00_03_04.645Z";"hw3.java";"71";" ';' expected
            return symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T00_59_31.766Z";"hw3.java";"84";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T00_59_31.766Z";"hw3.java";"86";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T00_59_31.766Z";"hw3.java";"101";" cannot find symbol
        int[] cipherArray = stringToSymbolArray(ciper);
                                                ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T00_59_31.766Z";"hw3.java";"104";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                            ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T00_59_31.766Z";"hw3.java";"106";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T18_59_04.649Z";"hw3.java";"84";" non-static method length() cannot be referenced from a static context
        for (int i = 0; i < String.length(); i++) {
                                  ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T18_59_04.649Z";"hw3.java";"86";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T18_59_04.649Z";"hw3.java";"101";" cannot find symbol
        int[] cipherArray = stringToSymbolArray(ciper);
                                                ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T18_59_04.649Z";"hw3.java";"104";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                            ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-07T18_59_04.649Z";"hw3.java";"106";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T09_07_11.344Z";"hw3.java";"188";" continue outside of loop
            continue;
            ^
1 error
"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T13_22_36.908Z";"hw3.java";"186";" cannot find symbol
        intArray = stringToSymbolArray(hey);
        ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T13_22_36.908Z";"hw3.java";"187";" cannot find symbol
        double[] heyFrq = findFrequencies(intArray);
                                          ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T16_56_09.203Z";"hw3.java";"182";" cannot find symbol
        for (int i = 0; i < english.length(); i++) {
                                   ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T16_56_09.203Z";"hw3.java";"184";" unexpected type
            Math.abs(subtracted) += Math.abs(subtracted);
                    ^
  required"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T16_56_09.203Z";"hw3.java";"196";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T16_56_09.203Z";"hw3.java";"198";" cannot find symbol
                double[] messageFrequency = findFrequencies(unknwonMessage[j]);
                                                            ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T16_56_09.203Z";"hw3.java";"199";" cannot find symbol
                double[] score = scoredFrequencies(englishFrequency, messageFrequency);
                                 ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T16_56_09.203Z";"hw3.java";"204";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"182";" cannot find symbol
        for (int i = 0; i < english.length(); i++) {
                                   ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"184";" unexpected type
            Math.abs(subtracted) += Math.abs(subtracted);
                    ^
  required"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"191";" cannot find symbol
        double[] englishFrequency = getDictionaryFrequencies(filename);
                                                             ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"195";" cannot find symbol
        for (int i = 0; i < message.length(); i++) {
                            ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"196";" cannot find symbol
            String[] unknownMessage = stringToSymbolArray(message);    
                                                          ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"198";" cannot find symbol
                double[] messageFrequency = findFrequencies(unknwonMessage[j]);
                                                            ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"199";" cannot find symbol
                double[] score = scoredFrequencies(englishFrequency, messageFrequency);
                                 ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"204";" cannot find symbol
                        String decrypted = decrypt(message, min);
                                                   ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"221";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"224";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T17_29_44.062Z";"hw3.java";"227";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T20_56_50.654Z";"hw3.java";"216";" illegal start of expression
            }
            ^
/"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T20_56_50.654Z";"hw3.java";"307";" reached end of file while parsing
}
 ^
2 errors
"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T21_55_28.660Z";"hw3.java";"212";" incompatible types"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T21_55_28.660Z";"hw3.java";"216";" cannot find symbol
        String crack = decrypt(cipher, score);
                                       ^
  symbol"
"69b307789e8a056939d00817344cff7b2c6a801f";"2020-10-08T21_55_28.660Z";"hw3.java";"222";" cannot find symbol
         String command = String.parseString(args[0]);
                                ^
  symbol"
"69c72846174d65b49ebdd1cb6a25f0e2781d262c";"2020-10-08T17_36_56.810Z";"hw3.java";"152";" incompatible types"
"69c72846174d65b49ebdd1cb6a25f0e2781d262c";"2020-10-08T17_36_56.810Z";"hw3.java";"156";" cannot find symbol
             System.out.println(scoreBetween);
                                ^
  symbol"
"69c72846174d65b49ebdd1cb6a25f0e2781d262c";"2020-10-08T17_36_56.810Z";"hw3.java";"194";" incompatible types"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-07T23_18_48.567Z";"hw3.java";"59";" illegal start of expression
        String str = ;
                     ^
1 error
"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-07T23_37_13.508Z";"hw3.java";"69";" incompatible types"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-07T23_37_13.508Z";"hw3.java";"70";" array required, but String found
            System.out.println(str[i]); 
                                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-07T23_37_13.508Z";"hw3.java";"136";" method symbolArrayToString in class Caesar cannot be applied to given types;
       symbolArrayToString(2, 14, 13, 18, 20, 11); 
       ^
  required"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"211";" ';' expected
        for (int i = 0, i < symbols.length(); i++) {
                         ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"211";" > expected
        for (int i = 0, i < symbols.length(); i++) {
                                          ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"211";" ';' expected
        for (int i = 0, i < symbols.length(); i++) {
                                           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"211";" illegal start of expression
        for (int i = 0, i < symbols.length(); i++) {
                                            ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"211";" ')' expected
        for (int i = 0, i < symbols.length(); i++) {
                                             ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"211";" illegal start of expression
        for (int i = 0, i < symbols.length(); i++) {
                                                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"238";" illegal start of type
        return cipherFrequency;
        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"238";" ';' expected
        return cipherFrequency;
              ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"249";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"252";" class, interface, or enum expected
    }
    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"254";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"257";" class, interface, or enum expected
        getDictionaryFrequencies(filename); 
        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T07_34_10.609Z";"hw3.java";"282";" class, interface, or enum expected
    }     
    ^
13 errors
"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"211";" ';' expected
        symbolArrayToString(symbols)
                                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"212";" ';' expected
        for (int i < symbols.length; i++){
                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"212";" > expected
        for (int i < symbols.length; i++){
                                   ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"212";" ';' expected
        for (int i < symbols.length; i++){
                                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"212";" illegal start of expression
        for (int i < symbols.length; i++){
                                        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"213";" '(' expected
            if 
              ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"214";" ')' expected
            freq[i]++
                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T15_26_09.043Z";"hw3.java";"215";" illegal start of statement
        }
        ^
8 errors
"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"221";" not a statement
           symbol[i] 
                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"221";" ';' expected
           symbol[i] 
                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"223";" illegal start of expression
       }
       ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"225";" ';' expected
        for (int i=0; i< 26, i++){
                           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"225";" ')' expected
        for (int i=0; i< 26, i++){
                            ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"225";" illegal start of expression
        for (int i=0; i< 26, i++){
                                ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"226";" not a statement
            symbol[0] 
                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"226";" ';' expected
            symbol[0] 
                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"227";" not a statement
                char
                ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"227";" ';' expected
                char
                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"235";" ';' expected
        'A' = at 0 
                ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"249";" ';' expected
        symbolArrayToString(symbols)
                                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"250";" ';' expected
        for (int i < symbols.length; i++){
                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"250";" > expected
        for (int i < symbols.length; i++){
                                   ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"250";" ';' expected
        for (int i < symbols.length; i++){
                                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"250";" illegal start of expression
        for (int i < symbols.length; i++){
                                        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"251";" '(' expected
            if 
              ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"252";" ')' expected
            freq[i]++
                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"253";" illegal start of statement
        }
        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"313";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"313";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"313";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"313";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"313";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"313";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"318";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"318";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"318";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"318";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"318";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_02_49.102Z";"hw3.java";"362";" reached end of file while parsing
}
 ^
31 errors
"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" illegal start of expression
  public static int indexOfName(String name, String[] nameArr) {
  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" illegal start of expression
  public static int indexOfName(String name, String[] nameArr) {
         ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" ';' expected
  public static int indexOfName(String name, String[] nameArr) {
               ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" ')' expected
  public static int indexOfName(String name, String[] nameArr) {
                                      ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" illegal start of expression
  public static int indexOfName(String name, String[] nameArr) {
                                           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" ';' expected
  public static int indexOfName(String name, String[] nameArr) {
                                                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" not a statement
  public static int indexOfName(String name, String[] nameArr) {
                                                      ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"259";" ';' expected
  public static int indexOfName(String name, String[] nameArr) {
                                                             ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" illegal start of expression
  public static void swapAtIndices(int i, int j, String[] arr) {
  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" illegal start of expression
  public static void swapAtIndices(int i, int j, String[] arr) {
         ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" ';' expected
  public static void swapAtIndices(int i, int j, String[] arr) {
               ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" '.class' expected
  public static void swapAtIndices(int i, int j, String[] arr) {
                                       ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" ';' expected
  public static void swapAtIndices(int i, int j, String[] arr) {
                                        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" ';' expected
  public static void swapAtIndices(int i, int j, String[] arr) {
                                                         ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" not a statement
  public static void swapAtIndices(int i, int j, String[] arr) {
                                                          ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"274";" ';' expected
  public static void swapAtIndices(int i, int j, String[] arr) {
                                                             ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"296";" not a statement
           symbol[i] 
                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"296";" ';' expected
           symbol[i] 
                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"298";" illegal start of expression
       }
       ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"300";" ';' expected
        for (int i=0; i< 26, i++){
                           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"300";" ')' expected
        for (int i=0; i< 26, i++){
                            ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"300";" illegal start of expression
        for (int i=0; i< 26, i++){
                                ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"301";" not a statement
            symbol[0] 
                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"301";" ';' expected
            symbol[0] 
                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"302";" not a statement
                char
                ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"302";" ';' expected
                char
                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"310";" ';' expected
        'A' = at 0 
                ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"324";" ';' expected
        symbolArrayToString(symbols)
                                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"325";" ';' expected
        for (int i < symbols.length; i++){
                  ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"325";" > expected
        for (int i < symbols.length; i++){
                                   ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"325";" ';' expected
        for (int i < symbols.length; i++){
                                    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"325";" illegal start of expression
        for (int i < symbols.length; i++){
                                        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"326";" '(' expected
            if 
              ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"327";" ')' expected
            freq[i]++
                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"328";" illegal start of statement
        }
        ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"369";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"369";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"369";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"369";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"369";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"369";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"374";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"374";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"374";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"374";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"374";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T16_55_55.342Z";"hw3.java";"418";" reached end of file while parsing
}
 ^
47 errors
"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T21_26_01.455Z";"hw3.java";"260";" ';' expected
        for (int i = 0, i < 26; i++){ 
                         ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T21_26_01.455Z";"hw3.java";"260";" illegal start of type
        for (int i = 0, i < 26; i++){ 
                            ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T21_26_01.455Z";"hw3.java";"260";" illegal start of expression
        for (int i = 0, i < 26; i++){ 
                              ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T21_26_01.455Z";"hw3.java";"260";" ';' expected
        for (int i = 0, i < 26; i++){ 
                               ^
/"
"6b36b01b915e6699622925a14d422694d6194be0";"2020-10-08T21_26_01.455Z";"hw3.java";"260";" illegal start of expression
        for (int i = 0, i < 26; i++){ 
                                   ^
5 errors
"
"6bdc06fda22c35736f923f79caf364818c92242a";"2020-10-09T22_33_11.584Z";"hw3.java";"31";" incompatible types"
"6bdc06fda22c35736f923f79caf364818c92242a";"2020-10-09T23_38_01.007Z";"hw3.java";"14";" incompatible types"
"6bdc06fda22c35736f923f79caf364818c92242a";"2020-10-09T23_38_01.007Z";"hw3.java";"47";" cannot find symbol
            int ourSymbolRepresentation = symbols.charAt(i);
                                                 ^
  symbol"
"6bdc06fda22c35736f923f79caf364818c92242a";"2020-10-09T23_38_01.007Z";"hw3.java";"49";" char cannot be dereferenced
            letter = letter.toUpperCase();
                           ^
Note"
"6bdc06fda22c35736f923f79caf364818c92242a";"2020-10-10T21_28_39.761Z";"hw3.java";"143";" cannot find symbol
            frequencies[i] = inStream.readDboule();
                                     ^
  symbol"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-07T20_04_22.253Z";"hw3.java";"24";" ';' expected
            str.toUpperCase()
               ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-07T20_04_22.253Z";"hw3.java";"24";" ';' expected
            str.toUpperCase()
                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-07T20_04_22.253Z";"hw3.java";"26";" ';' expected
            str = str.toUpperCase()
                                   ^
3 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T03_56_47.135Z";"hw3.java";"28";" not a statement
        String 
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T03_56_47.135Z";"hw3.java";"28";" ';' expected
        String 
              ^
2 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T04_24_03.705Z";"hw3.java";"35";" illegal start of expression
        return null;
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T04_24_03.705Z";"hw3.java";"35";" not a statement
        return null;
               ^
2 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T04_46_54.788Z";"hw3.java";"36";" not a statement
            char 
            ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T04_46_54.788Z";"hw3.java";"36";" ';' expected
            char 
                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T04_46_54.788Z";"hw3.java";"47";" illegal start of expression
        return null;
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T04_46_54.788Z";"hw3.java";"47";" not a statement
        return null;
               ^
4 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T07_32_25.030Z";"hw3.java";"64";" '.class' expected
            int ourSymbolRepresentation = int[] ;
                                                ^
1 error
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T16_50_07.923Z";"hw3.java";"57";" not a statement
        int [] = [ 2, 14, 13, 18, 20, 11 ];
            ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T16_50_07.923Z";"hw3.java";"57";" ';' expected
        int [] = [ 2, 14, 13, 18, 20, 11 ];
              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T16_50_07.923Z";"hw3.java";"63";" '.class' expected
            int ourSymbolRepresentation = int[] ;
                                                ^
3 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T17_39_20.522Z";"hw3.java";"71";" ';' expected
        symbol = symbol + offset  
                                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T17_39_20.522Z";"hw3.java";"74";" ';' expected
        symbol = symbol    
                       ^
2 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T17_55_41.924Z";"hw3.java";"71";" ';' expected
        symbol = symbol + offset 
                                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T17_55_41.924Z";"hw3.java";"73";" ';' expected
                symbol = symbol - 26 
                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T17_55_41.924Z";"hw3.java";"77";" ';' expected
        symbol = symbol    
                       ^
3 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T19_50_37.718Z";"hw3.java";"105";" cannot find symbol
        for (int i=0; i < message.length; i++){
                                 ^
  symbol"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T19_50_37.718Z";"hw3.java";"106";" array required, but String found
        shift(message[i], key);  
                     ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T19_50_37.718Z";"hw3.java";"108";" incompatible types"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T20_04_27.944Z";"hw3.java";"107";" incompatible types"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T20_04_27.944Z";"hw3.java";"110";" incompatible types"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T20_21_04.749Z";"hw3.java";"107";" cannot find symbol
        for (int i=0; i < message.length; i++){
                                 ^
  symbol"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T20_21_04.749Z";"hw3.java";"108";" array required, but String found
        shift(message[i], key);  
                     ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T20_21_04.749Z";"hw3.java";"111";" incompatible types"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T23_31_07.004Z";"hw3.java";"198";" ';' expected
       String cipher 
                    ^
1 error
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-08T23_56_57.482Z";"hw3.java";"195";" incompatible types"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T01_19_24.787Z";"hw3.java";"167";" cannot find symbol
        for (int i = 0; i < numBodies; i++) {
                            ^
  symbol"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T03_26_41.376Z";"hw3.java";"186";" bad operand type double[] for unary operator '++'
             numLetters++;
                       ^
1 error
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T05_30_30.590Z";"hw3.java";"210";" ';' expected
           Math.abs(english[i]-currentFreqs[i])
                                               ^
1 error
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T05_41_57.136Z";"hw3.java";"209";" array dimension missing
        double score = new double [];
                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T05_41_57.136Z";"hw3.java";"212";" ';' expected
           Math.abs(english[i]-currentFreqs[i])
                                               ^
2 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T06_07_16.311Z";"hw3.java";"211";" ';' expected
           scoreSum [i] = scoreSum [i] + Math.abs(english[i]-currentFreqs[i])
                                                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T06_07_16.311Z";"hw3.java";"221";" ';' expected
           scoreSum [i] = scoreSum [i] + Math.abs(english[i]-currentFreqs[i])
                                                                             ^
2 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"211";" ';' expected
           scoreSum [i] = scoreSum [i] + Math.abs(english[i]-currentFreqs[i])
                                                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"228";" illegal start of type
        return scoreSum[26];
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"228";" ';' expected
        return scoreSum[26];
              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"228";" illegal start of type
        return scoreSum[26];
                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"228";" <identifier> expected
        return scoreSum[26];
                        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"228";" ';' expected
        return scoreSum[26];
                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"242";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < 26; i++){
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < 26; i++){
                        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < 26; i++){
                                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"248";" class, interface, or enum expected
        System.out.println(findFrequencies(intArray[i]));
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T07_59_59.750Z";"hw3.java";"249";" class, interface, or enum expected
        }
        ^
12 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"211";" ';' expected
           scoreSum [i] = scoreSum [i] + Math.abs(english[i]-currentFreqs[i])
                                                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"228";" illegal start of type
        return scoreSum[26];
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"228";" ';' expected
        return scoreSum[26];
              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"228";" illegal start of type
        return scoreSum[26];
                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"228";" <identifier> expected
        return scoreSum[26];
                        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"228";" ';' expected
        return scoreSum[26];
                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"242";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < 26; i++){
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < 26; i++){
                        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < 26; i++){
                                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"248";" class, interface, or enum expected
        System.out.println(findFrequencies(intArray[i]));
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"249";" class, interface, or enum expected
        }
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"255";" class, interface, or enum expected
         double [] frequenceis = findFrequencies(something); 
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"257";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"257";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"257";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T16_41_52.708Z";"hw3.java";"259";" class, interface, or enum expected
            }
            ^
17 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"209";" ';' expected
        english = getDictionaryFrequencies(english.txt)
                                                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"211";" '.class' expected
       currentFreqs = findFrequencies(int[] symbols)
                                            ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"211";" ';' expected
       currentFreqs = findFrequencies(int[] symbols)
                                                   ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"216";" ';' expected
           scoreSum [i] = scoreSum [i] + Math.abs(english[i]-currentFreqs[i])
                                                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"223";" illegal start of expression
        decrypt(filename, )
                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"223";" ';' expected
        decrypt(filename, )
                           ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"226";" '.class' expected
        findFrequencies(int[] symbols)
                              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"226";" ';' expected
        findFrequencies(int[] symbols)
                                     ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"230";" illegal start of type
        return scoreSum[26];
        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"230";" ';' expected
        return scoreSum[26];
              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"230";" illegal start of type
        return scoreSum[26];
                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"230";" <identifier> expected
        return scoreSum[26];
                        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"230";" ';' expected
        return scoreSum[26];
                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"244";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"247";" class, interface, or enum expected
         double [] frequenceis = findFrequencies(something); 
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"249";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"249";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"249";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T17_19_37.136Z";"hw3.java";"251";" class, interface, or enum expected
            }
            ^
19 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"209";" ';' expected
           scoreSum [i] = scoreSum [i] + Math.abs(english[i]-currentFreqs[i])
                                                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"215";" illegal start of type
    public static String crack (String filename,       ) {
                                                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"215";" ')' expected
    public static String crack (String filename,       ) {
                                                        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"215";" ';' expected
    public static String crack (String filename,       ) {
                                                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"218";" <identifier> expected
        In inStream = new In(filename);
                   ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"219";" <identifier> expected
        filename = inStream.readAll();
                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" illegal start of type
         for(int i = 0; i< score.length; i++ ){
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" ')' expected
         for(int i = 0; i< score.length; i++ ){
                  ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" illegal start of type
         for(int i = 0; i< score.length; i++ ){
                     ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" <identifier> expected
         for(int i = 0; i< score.length; i++ ){
                      ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" ';' expected
         for(int i = 0; i< score.length; i++ ){
                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" > expected
         for(int i = 0; i< score.length; i++ ){
                                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" '(' expected
         for(int i = 0; i< score.length; i++ ){
                                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" <identifier> expected
         for(int i = 0; i< score.length; i++ ){
                                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" illegal start of type
         for(int i = 0; i< score.length; i++ ){
                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" <identifier> expected
         for(int i = 0; i< score.length; i++ ){
                                              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"232";" ';' expected
         for(int i = 0; i< score.length; i++ ){
                                               ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" illegal start of type
             for(int j = i+1; j < score.length; j++){
                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" <identifier> expected
             for(int j = i+1; j < score.length; j++){
                 ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" ';' expected
             for(int j = i+1; j < score.length; j++){
                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" illegal start of type
             for(int j = i+1; j < score.length; j++){
                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" ';' expected
             for(int j = i+1; j < score.length; j++){
                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" > expected
             for(int j = i+1; j < score.length; j++){
                                              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" ';' expected
             for(int j = i+1; j < score.length; j++){
                                               ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" illegal start of type
             for(int j = i+1; j < score.length; j++){
                                                 ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" <identifier> expected
             for(int j = i+1; j < score.length; j++){
                                                   ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"233";" ';' expected
             for(int j = i+1; j < score.length; j++){
                                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"236";" class, interface, or enum expected
         }
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"247";" class, interface, or enum expected
    }
    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"260";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"263";" class, interface, or enum expected
         double [] frequenceis = findFrequencies(something); 
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"265";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"265";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"265";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T18_52_07.155Z";"hw3.java";"267";" class, interface, or enum expected
            }
            ^
35 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"209";" ';' expected
           scoreSum [i] = scoreSum [i] + Math.abs(english[i]-currentFreqs[i])
                                                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"215";" illegal start of type
    public static String crack (String filename,       ) {
                                                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"215";" ')' expected
    public static String crack (String filename,       ) {
                                                        ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"215";" ';' expected
    public static String crack (String filename,       ) {
                                                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"218";" <identifier> expected
        In inStream = new In(filename);
                   ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"219";" <identifier> expected
        filename = inStream.readAll();
                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" illegal start of type
         for(int i = 0; i< score.length; i++ ){
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" ')' expected
         for(int i = 0; i< score.length; i++ ){
                  ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" illegal start of type
         for(int i = 0; i< score.length; i++ ){
                     ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" <identifier> expected
         for(int i = 0; i< score.length; i++ ){
                      ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" ';' expected
         for(int i = 0; i< score.length; i++ ){
                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" > expected
         for(int i = 0; i< score.length; i++ ){
                                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" '(' expected
         for(int i = 0; i< score.length; i++ ){
                                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" <identifier> expected
         for(int i = 0; i< score.length; i++ ){
                                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" illegal start of type
         for(int i = 0; i< score.length; i++ ){
                                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" <identifier> expected
         for(int i = 0; i< score.length; i++ ){
                                              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"234";" ';' expected
         for(int i = 0; i< score.length; i++ ){
                                               ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" illegal start of type
             for(int j = i+1; j < score.length; j++){
                ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" <identifier> expected
             for(int j = i+1; j < score.length; j++){
                 ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" ';' expected
             for(int j = i+1; j < score.length; j++){
                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" illegal start of type
             for(int j = i+1; j < score.length; j++){
                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" ';' expected
             for(int j = i+1; j < score.length; j++){
                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" > expected
             for(int j = i+1; j < score.length; j++){
                                              ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" ';' expected
             for(int j = i+1; j < score.length; j++){
                                               ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" illegal start of type
             for(int j = i+1; j < score.length; j++){
                                                 ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" <identifier> expected
             for(int j = i+1; j < score.length; j++){
                                                   ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"235";" ';' expected
             for(int j = i+1; j < score.length; j++){
                                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"236";" illegal start of type
                 if (score[i] > score[j]{
                 ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"236";" <identifier> expected
                 if (score[i] > score[j]{
                   ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"236";" ';' expected
                 if (score[i] > score[j]{
                     ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"236";" illegal start of type
                 if (score[i] > score[j]{
                          ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"236";" ';' expected
                 if (score[i] > score[j]{
                            ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"236";" ']' expected
                 if (score[i] > score[j]{
                                      ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"236";" ';' expected
                 if (score[i] > score[j]{
                                       ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"244";" class, interface, or enum expected
         }
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"255";" class, interface, or enum expected
    }
    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"268";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"271";" class, interface, or enum expected
         double [] frequenceis = findFrequencies(something); 
         ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"273";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"273";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                             ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"273";" class, interface, or enum expected
             for (int i = 0; i < something.length ; i++) {
                                                    ^
/"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T19_29_52.699Z";"hw3.java";"275";" class, interface, or enum expected
            }
            ^
42 errors
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T21_10_50.815Z";"hw3.java";"222";" incompatible types"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T21_58_50.146Z";"hw3.java";"239";" ';' expected
     String filename = args[0];
           ^
1 error
"
"6c461bf548b9c9d93287748945b41d2251965d93";"2020-10-09T22_39_26.264Z";"hw3.java";"265";" class, interface, or enum expected
}
^
1 error
"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-06T22_52_06.549Z";"hw3.java";"48";" cannot find symbol
            strArray = strArray + (char) (symbols.charAt(i) + 'A');
                                                 ^
  symbol"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-07T22_07_23.661Z";"hw3.java";"301";" <identifier> expected
        System.out.println(crack(message, getDictionaryFrequencies('english.txt')));
                          ^
/"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-07T22_07_23.661Z";"hw3.java";"301";" <identifier> expected
        System.out.println(crack(message, getDictionaryFrequencies('english.txt')));
                                ^
/"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-07T22_07_23.661Z";"hw3.java";"301";" ';' expected
        System.out.println(crack(message, getDictionaryFrequencies('english.txt')));
                                 ^
/"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-07T22_07_23.661Z";"hw3.java";"301";" illegal start of type
        System.out.println(crack(message, getDictionaryFrequencies('english.txt')));
                                        ^
/"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-07T22_07_23.661Z";"hw3.java";"301";" illegal start of type
        System.out.println(crack(message, getDictionaryFrequencies('english.txt')));
                                                                   ^
/"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-07T22_07_23.661Z";"hw3.java";"301";" ';' expected
        System.out.println(crack(message, getDictionaryFrequencies('english.txt')));
                                                                                 ^
/"
"6ca0204ff8eea819742c218f58750954f2f2268a";"2020-10-07T22_07_23.661Z";"hw3.java";"303";" class, interface, or enum expected
}
^
7 errors
"
"6d5aaa9492af40790519b44d5062cc519c34f643";"2020-10-08T03_10_01.124Z";"hw3.java";"143";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"6d5aaa9492af40790519b44d5062cc519c34f643";"2020-10-08T06_52_26.089Z";"hw3.java";"125";" ';' expected
        stringToSymbolArray()
                             ^
1 error
"
"6d763f06e966f577fbcdec420126b548c6e079f3";"2020-10-05T13_30_43.385Z";"hw3.java";"112";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"6d763f06e966f577fbcdec420126b548c6e079f3";"2020-10-05T13_30_43.385Z";"hw3.java";"13";" incompatible types"
"6db5438b3419df449f02fef8ae541ad4c3e972cf";"2020-10-08T01_24_58.200Z";"hw3.java";"100";" ';' expected
        int[] hope = stringToSymbolArray(message)
                                                 ^
/"
"6db5438b3419df449f02fef8ae541ad4c3e972cf";"2020-10-08T01_24_58.200Z";"hw3.java";"103";" ';' expected
            shift(hope[i], key)
                               ^
/"
"6db5438b3419df449f02fef8ae541ad4c3e972cf";"2020-10-08T01_24_58.200Z";"hw3.java";"105";" ';' expected
        String encrypted = symbolArrayToString()
                                                ^
3 errors
"
"6db5438b3419df449f02fef8ae541ad4c3e972cf";"2020-10-08T03_40_26.086Z";"hw3.java";"149";" cannot find symbol
        String file = instream();
                      ^
  symbol"
"6db5438b3419df449f02fef8ae541ad4c3e972cf";"2020-10-09T00_26_28.838Z";"hw3.java";"189";" missing return statement
    }
    ^
1 error
"
"6db5438b3419df449f02fef8ae541ad4c3e972cf";"2020-10-09T00_46_11.476Z";"hw3.java";"191";" incompatible types"
"6db5438b3419df449f02fef8ae541ad4c3e972cf";"2020-10-09T01_08_12.523Z";"hw3.java";"191";" incompatible types"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T01_49_30.194Z";"hw3.java";"22";" '.class' expected
        while(int i = )
                  ^
/"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T01_49_30.194Z";"hw3.java";"22";" illegal start of expression
        while(int i = )
                    ^
/"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T01_49_30.194Z";"hw3.java";"22";" ';' expected
        while(int i = )
                     ^
3 errors
"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T02_57_00.376Z";"hw3.java";"22";" cannot find symbol
        for (i = 0; i < str.length; i++){
             ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T02_57_00.376Z";"hw3.java";"22";" cannot find symbol
        for (i = 0; i < str.length; i++){
                    ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T02_57_00.376Z";"hw3.java";"22";" cannot find symbol
        for (i = 0; i < str.length; i++){
                           ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T02_57_00.376Z";"hw3.java";"22";" cannot find symbol
        for (i = 0; i < str.length; i++){
                                    ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T02_57_00.376Z";"hw3.java";"25";" cannot find symbol
        return str.charAt[i];
                  ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T02_57_00.376Z";"hw3.java";"25";" cannot find symbol
        return str.charAt[i];
                          ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T03_17_49.155Z";"hw3.java";"23";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T03_17_49.155Z";"hw3.java";"24";" cannot find symbol
            str = str.charAt[i] - 105; 
                     ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-07T03_17_49.155Z";"hw3.java";"25";" incompatible types"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T19_36_11.539Z";"hw3.java";"43";" incompatible types"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T20_03_15.983Z";"hw3.java";"47";" cannot find symbol
        return stringMessage;
               ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T20_03_15.983Z";"hw3.java";"113";" cannot find symbol
        String b = symbolArrayToString(c[i]); 
                                         ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T20_03_15.983Z";"hw3.java";"113";" incompatible types"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T20_03_15.983Z";"hw3.java";"114";" cannot find symbol
        for (int i = 0; i < b.length; i++) {
                             ^
  symbol"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T21_25_53.694Z";"hw3.java";"50";" not a statement
            char 
            ^
/"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T21_25_53.694Z";"hw3.java";"50";" ';' expected
            char 
                ^
2 errors
"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T23_21_49.385Z";"hw3.java";"104";" '.class' expected
            i = shift(int symbol, int offset); 
                          ^
/"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T23_21_49.385Z";"hw3.java";"104";" ';' expected
            i = shift(int symbol, int offset); 
                                ^
/"
"6e187a8a1e51badcb72f58aa711583db4f2d3393";"2020-10-08T23_21_49.385Z";"hw3.java";"104";" ';' expected
            i = shift(int symbol, int offset); 
                                            ^
3 errors
"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-05T19_14_54.722Z";"hw3.java";"22";" cannot find symbol
        for(int i = 0; i < str.length; i++){
                              ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-05T19_14_54.722Z";"hw3.java";"26";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_04_53.114Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_04_53.114Z";"hw3.java";"25";" cannot find symbol
        return stringToSymbol;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_04_53.114Z";"hw3.java";"37";" cannot find symbol
        for (int i = 0; i < symbolArrayToString.length; i++){
                            ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_04_53.114Z";"hw3.java";"40";" cannot find symbol
        return symbolArrayToString;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_04_53.114Z";"hw3.java";"100";" package plaintext does not exist
        int[] stringToSymbolArray = new int[plaintext.txt.length];
                                                     ^
5 errors
"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_27_39.466Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_27_39.466Z";"hw3.java";"25";" cannot find symbol
        String[] y = symbolArrayToString;
                     ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_27_39.466Z";"hw3.java";"26";" cannot find symbol
        return stringToSymbol;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_27_39.466Z";"hw3.java";"41";" cannot find symbol
        return symbolToString;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-06T21_27_39.466Z";"hw3.java";"101";" cannot find symbol
        int[] x = stringToSymbolArray;
                  ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T00_38_46.905Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T00_38_46.905Z";"hw3.java";"26";" cannot find symbol
        return stringToSymbolArray;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T00_38_46.905Z";"hw3.java";"42";" cannot find symbol
        return symbolArrayToString;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_08_04.307Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_08_04.307Z";"hw3.java";"25";" cannot find symbol
        return stringToSymbolArray;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_08_04.307Z";"hw3.java";"40";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_19_06.734Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_19_06.734Z";"hw3.java";"25";" cannot find symbol
        return ourSymbolRepresentation;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_19_06.734Z";"hw3.java";"40";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_39_30.886Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_39_30.886Z";"hw3.java";"25";" cannot find symbol
        return ourSymbolRepresentation;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T01_39_30.886Z";"hw3.java";"40";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T18_17_34.932Z";"hw3.java";"27";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T18_17_34.932Z";"hw3.java";"44";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T22_46_51.586Z";"hw3.java";"125";" cannot find symbol
        for (int i = 0; i < symbols.length; i++){
                            ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-07T23_15_18.677Z";"hw3.java";"31";" '.class' expected
        return stringToSymbol[];
                               ^
1 error
"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-08T20_12_50.913Z";"hw3.java";"48";" unexpected type
            symbolToString.charAt(i) = letter;
                                 ^
  required"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-08T20_56_08.047Z";"hw3.java";"48";" unexpected type
            symbolToString.charAt(i) = letter;
                                 ^
  required"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-08T22_57_58.152Z";"hw3.java";"100";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-08T22_57_58.152Z";"hw3.java";"101";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-08T22_57_58.152Z";"hw3.java";"102";" cannot find symbol
        return s;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-09T01_59_27.680Z";"hw3.java";"101";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-09T01_59_27.680Z";"hw3.java";"102";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-09T01_59_27.680Z";"hw3.java";"103";" cannot find symbol
        return s;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-09T02_30_32.285Z";"hw3.java";"101";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-09T02_30_32.285Z";"hw3.java";"102";" incompatible types"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-09T02_30_32.285Z";"hw3.java";"103";" cannot find symbol
        return s;
               ^
  symbol"
"6e2f133cfae940ff672310c4ff824c7ef8eddf5b";"2020-10-09T03_42_59.153Z";"hw3.java";"105";" illegal start of expression
        String encryptedMessage = ;
                                  ^
1 error
"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"119";" illegal start of expression
        }
        ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"128";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T03_48_08.592Z";"hw3.java";"136";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
17 errors
"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T13_29_45.812Z";"hw3.java";"119";" bad operand types for binary operator '+'
            encryptMessage2 += shift(encryptMessage[i], key);
                            ^
  first type"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T19_07_39.550Z";"hw3.java";"181";" class expected
        int keyVal = int.parseInt(args[2]);
                         ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T19_07_39.550Z";"hw3.java";"181";" ';' expected
        int keyVal = int.parseInt(args[2]);
                                 ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T19_07_39.550Z";"hw3.java";"181";" not a statement
        int keyVal = int.parseInt(args[2]);
                                      ^
/"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T19_07_39.550Z";"hw3.java";"181";" ';' expected
        int keyVal = int.parseInt(args[2]);
                                         ^
4 errors
"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T19_46_09.282Z";"hw3.java";"189";" incompatible types"
"6e4e0168083716fe8b485ddb5ddc86d02ebaae6f";"2020-10-08T19_46_09.282Z";"hw3.java";"192";" incompatible types"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-08T22_39_32.114Z";"hw3.java";"25";" ';' expected
        str = str.toUpperCase()
                               ^
1 error
"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T08_42_22.231Z";"hw3.java";"163";" bad operand types for binary operator '-'
        int number = (int) (args[2] - 'A');
                                    ^
  first type"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T11_54_56.866Z";"hw3.java";"191";" missing return statement
    }
    ^
1 error
"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"199";" ')' expected
        if (scoreFrequencies() {
                              ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"200";" ';' expected
            decrypt(document, i)
                                ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"201";" ';' expected
            findFrequencies(stringToSymbolArray(decrypt(document, i)))
                                                                      ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"203";" '.class' expected
            scoreFrequencies(englishFrequencies, double[] currentFreqs)
                                                          ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"203";" ';' expected
            scoreFrequencies(englishFrequencies, double[] currentFreqs)
                                                                      ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"205";" '.class' expected
        scoreFrequencies(double[] english, double[] currentFreqs)
                                  ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"205";" ';' expected
        scoreFrequencies(double[] english, double[] currentFreqs)
                                         ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"205";" ';' expected
        scoreFrequencies(double[] english, double[] currentFreqs)
                                                                ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"206";" '(' expected
        if 
          ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"207";" illegal start of expression
    }
    ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"207";" ')' expected
    }
     ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"209";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"209";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"209";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"209";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T12_51_04.351Z";"hw3.java";"267";" reached end of file while parsing
}
 ^
16 errors
"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"199";" ')' expected
        if (scoreFrequencies() {
                              ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"200";" ';' expected
            decrypt(document, i)
                                ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"201";" ';' expected
            findFrequencies(stringToSymbolArray(decrypt(document, i)))
                                                                      ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"203";" '.class' expected
            scoreFrequencies(englishFrequencies, double[] currentFreqs)
                                                          ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"203";" ';' expected
            scoreFrequencies(englishFrequencies, double[] currentFreqs)
                                                                      ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"205";" '.class' expected
        lowestScore = scoreFrequencies(double[] english, double[] currentFreqs);
                                                ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"205";" ';' expected
        lowestScore = scoreFrequencies(double[] english, double[] currentFreqs);
                                                       ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"205";" ';' expected
        lowestScore = scoreFrequencies(double[] english, double[] currentFreqs);
                                                                              ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"206";" '(' expected
        if 
          ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"207";" illegal start of expression
    }
    ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"207";" ')' expected
    }
     ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"209";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"209";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"209";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"209";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T15_24_18.398Z";"hw3.java";"267";" reached end of file while parsing
}
 ^
16 errors
"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T16_14_50.612Z";"hw3.java";"256";" ')' expected
                crack(document, String english);
                                      ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T16_14_50.612Z";"hw3.java";"256";" illegal start of expression
                crack(document, String english);
                                              ^
2 errors
"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T16_25_07.124Z";"hw3.java";"256";" ')' expected
                crack(document, String english);
                                      ^
/"
"6fc87d4f53fe81c4bd7a3d4b3c53ac521ba7c6d3";"2020-10-09T16_25_07.124Z";"hw3.java";"256";" illegal start of expression
                crack(document, String english);
                                              ^
2 errors
"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-05T05_00_14.089Z";"hw3.java";"43";" cannot find symbol
        int symbolsInt = readInt();
                         ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-05T05_00_14.089Z";"hw3.java";"45";" int cannot be dereferenced
        for (int i = 0; i < symbolsInt.length(); i++) {
                                      ^
2 errors
"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"77";" cannot find symbol
        stringToSymbolArray(str);
                            ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"79";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"80";" cannot find symbol
            shift(str[i]);
                  ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"83";" cannot find symbol
        return symbolArrayToString(str);
                                   ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"94";" cannot find symbol
        stringToSymbolArray(str);
                            ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"96";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"97";" cannot find symbol
            unshift(str[i]);
                    ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T04_46_20.950Z";"hw3.java";"100";" cannot find symbol
        return symbolArrayToString(str);
                                   ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T05_22_12.551Z";"hw3.java";"79";" '.class' expected
        int offset = int key;
                         ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T05_22_12.551Z";"hw3.java";"97";" '.class' expected
        int offset = int key;
                         ^
2 errors
"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T15_58_08.082Z";"hw3.java";"86";" cannot find symbol
            shift(stringToSymbol[i], key);
                  ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T15_58_08.082Z";"hw3.java";"90";" incompatible types"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T15_58_08.082Z";"hw3.java";"93";" cannot find symbol
        return symbolArrayToString(symbolToString);
                                   ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T15_58_08.082Z";"hw3.java";"108";" cannot find symbol
            unshift(stringToSymbol[i], key);
                    ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T15_58_08.082Z";"hw3.java";"112";" incompatible types"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T15_58_08.082Z";"hw3.java";"115";" cannot find symbol
        return symbolToString;
               ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T18_14_26.892Z";"hw3.java";"167";" cannot find symbol
        String message = inStream.readAll();
                         ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T19_46_46.198Z";"hw3.java";"152";" incompatible types"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T21_36_46.422Z";"hw3.java";"153";" incompatible types"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T21_36_46.422Z";"hw3.java";"205";" bad operand types for binary operator '-'
        int keyNumber = (int)(args[2] - 'A');
                                      ^
  first type"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T22_25_39.594Z";"hw3.java";"198";" missing return statement
    }
    ^
1 error
"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"174";" ']' expected
                if (symbols[i] = symbols[j] && boolean[j]) {
                                                       ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"174";" ')' expected
                if (symbols[i] = symbols[j] && boolean[j]) {
                                                        ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"174";" illegal start of expression
                if (symbols[i] = symbols[j] && boolean[j]) {
                                                         ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"174";" ';' expected
                if (symbols[i] = symbols[j] && boolean[j]) {
                                                          ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"176";" ']' expected
                    boolean[j] = true;
                            ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"176";" ';' expected
                    boolean[j] = true;
                             ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"181";" <identifier> expected
        System.out.println(symbols);
                          ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"181";" <identifier> expected
        System.out.println(symbols);
                                  ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"182";" illegal start of type
        return cipherFrequency;
        ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"182";" ';' expected
        return cipherFrequency;
              ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"190";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"193";" class, interface, or enum expected
        double score = 0;
        ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"196";" class, interface, or enum expected
        for (int i = 0; i < currentFreqs.length; i++) {
        ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"196";" class, interface, or enum expected
        for (int i = 0; i < currentFreqs.length; i++) {
                        ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"196";" class, interface, or enum expected
        for (int i = 0; i < currentFreqs.length; i++) {
                                                 ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"198";" class, interface, or enum expected
            score += scoreHolder;
            ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"199";" class, interface, or enum expected
        }
        ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"201";" class, interface, or enum expected
    }
    ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"226";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"251";" class, interface, or enum expected
        System.out.println(findFrequencies(thisIsStupid));
        ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-06T23_57_00.441Z";"hw3.java";"262";" class, interface, or enum expected
    }
    ^
21 errors
"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T02_02_56.654Z";"hw3.java";"253";" cannot find symbol
        getDictionaryFrequencies(test.txt);
                                 ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T02_49_39.745Z";"hw3.java";"252";" cannot find symbol
        getDictionaryFrequencies(test.txt);
                                 ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T04_26_54.541Z";"hw3.java";"209";" cannot find symbol
         double[] crackFrequency = findFrequencies(symbolArrayToString(intArray));
                                                                       ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T04_26_54.541Z";"hw3.java";"220";" cannot find symbol
         cipherAnswer = decript(cipher, minScore);
         ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T04_26_54.541Z";"hw3.java";"220";" cannot find symbol
         cipherAnswer = decript(cipher, minScore);
                        ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T04_26_54.541Z";"hw3.java";"221";" cannot find symbol
         return cipherAnswer;
                ^
  symbol"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T22_36_53.357Z";"hw3.java";"268";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T22_36_53.357Z";"hw3.java";"268";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T22_36_53.357Z";"hw3.java";"268";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T22_36_53.357Z";"hw3.java";"268";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T22_36_53.357Z";"hw3.java";"268";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"713c5dddd704f0ddc8f58ea00009c7aba94363f6";"2020-10-07T22_36_53.357Z";"hw3.java";"307";" reached end of file while parsing
}
 ^
6 errors
"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"46";" illegal start of expression
        }
        ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"53";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"53";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"53";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"53";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"53";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"53";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"61";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"61";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"61";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"61";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"69";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"77";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T06_20_28.460Z";"hw3.java";"85";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
37 errors
"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-05T18_47_55.919Z";"hw3.java";"110";" incompatible types"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-06T05_05_07.999Z";"hw3.java";"82";" cannot find symbol
            String x = message.charAt[i];
                              ^
  symbol"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-06T05_05_07.999Z";"hw3.java";"83";" incompatible types"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-06T05_05_07.999Z";"hw3.java";"85";" incompatible types"
"713df1cac37576e434673406ef25ccefacf3ae42";"2020-10-07T20_31_27.966Z";"hw3.java";"180";" ';' expected
        String english = english.tx
                                   ^
1 error
"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-06T23_10_25.031Z";"hw3.java";"113";" cannot find symbol
        symbolArrayToString(arrSecond);
                            ^
  symbol"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-07T01_14_25.899Z";"hw3.java";"87";" cannot find symbol
            shift(arrFirst[i], key);
                  ^
  symbol"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-07T01_14_25.899Z";"hw3.java";"88";" cannot find symbol
            symbolArrayToString(arrFirst);
                                ^
  symbol"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-07T20_45_08.863Z";"hw3.java";"89";" cannot find symbol
            shift(symbolArr[i], key);            
                  ^
  symbol"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-07T20_45_08.863Z";"hw3.java";"91";" cannot find symbol
        symbolArrayToString(symbolArr);
                            ^
  symbol"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-07T20_45_08.863Z";"hw3.java";"92";" cannot find symbol
        System.out.print(encodedMessage);         
                         ^
  symbol"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-08T22_51_14.664Z";"hw3.java";"158";" incompatible types"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-08T23_18_51.535Z";"hw3.java";"168";" illegal start of type
    public static String crack(, ) {
                               ^
1 error
"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-09T00_30_57.171Z";"hw3.java";"175";" cannot find symbol
            frequenciesScore = scoreFrequencies(frequencies, cipherFrequencies);  
                                                ^
  symbol"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-09T00_30_57.171Z";"hw3.java";"176";" incompatible types"
"71fe42a113dd697e5b2febb2d566d6f80d376d03";"2020-10-09T01_14_27.274Z";"hw3.java";"184";" cannot find symbol
        return message;
               ^
  symbol"
"737a7201f8108e07db06622a15ebc3a749e50f3e";"2020-10-09T07_09_10.154Z";"hw3.java";"119";" cannot find symbol
        double[] frequency = inStream.readDouble(filename); 
                             ^
  symbol"
"737a7201f8108e07db06622a15ebc3a749e50f3e";"2020-10-09T07_09_10.154Z";"hw3.java";"120";" cannot find symbol
        frequency[i] = inStream.readDouble();
                  ^
  symbol"
"737a7201f8108e07db06622a15ebc3a749e50f3e";"2020-10-09T07_09_10.154Z";"hw3.java";"120";" cannot find symbol
        frequency[i] = inStream.readDouble();
                       ^
  symbol"
"737a7201f8108e07db06622a15ebc3a749e50f3e";"2020-10-09T07_29_40.318Z";"hw3.java";"184";" illegal character"
"737a7201f8108e07db06622a15ebc3a749e50f3e";"2020-10-09T07_29_40.318Z";"hw3.java";"184";" ';' expected
        System.out.println(getDictionaryFrequencies(filename\));
                                                             ^
/"
"737a7201f8108e07db06622a15ebc3a749e50f3e";"2020-10-09T07_29_40.318Z";"hw3.java";"184";" illegal start of expression
        System.out.println(getDictionaryFrequencies(filename\));
                                                              ^
3 errors
"
"74a099cc415506833fc2b1b731514bd28ac8098f";"2020-10-08T23_45_23.266Z";"hw3.java";"146";" incompatible types"
"74a099cc415506833fc2b1b731514bd28ac8098f";"2020-10-08T23_45_23.266Z";"hw3.java";"148";" cannot find symbol
            score = score + Math.abs(currentFreqs[i] - english[i]);
            ^
  symbol"
"74a099cc415506833fc2b1b731514bd28ac8098f";"2020-10-08T23_45_23.266Z";"hw3.java";"148";" cannot find symbol
            score = score + Math.abs(currentFreqs[i] - english[i]);
                    ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T00_13_50.621Z";"hw3.java";"20";" ';' expected
        char letter  
                   ^
1 error
"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T00_51_04.793Z";"hw3.java";"21";" ']' expected
            int[] ourSymbolRepresentation = int[str.length];
                                                ^
/"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T00_51_04.793Z";"hw3.java";"21";" ';' expected
            int[] ourSymbolRepresentation = int[str.length];
                                                          ^
2 errors
"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T04_22_39.807Z";"hw3.java";"21";" ']' expected
            int[] ourSymbolRepresentation = int[str.length];
                                                ^
/"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T04_22_39.807Z";"hw3.java";"21";" ';' expected
            int[] ourSymbolRepresentation = int[str.length];
                                                          ^
2 errors
"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T04_35_23.229Z";"hw3.java";"20";" cannot find symbol
        for(int i = 0; i < args; i++) {
                           ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T04_35_23.229Z";"hw3.java";"21";" cannot find symbol
            int[] ourSymbolRepresentation = new int[args.length];
                                                    ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-03T04_35_23.229Z";"hw3.java";"22";" cannot find symbol
            ourSymbolRepresentation[i] = args[i] - 'A';
                                         ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T05_26_54.322Z";"hw3.java";"150";" illegal start of expression
        String cipher = encrypt(, key);
                                ^
/"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T05_26_54.322Z";"hw3.java";"151";" illegal start of expression
        String decrypted = decrupt(, key);
                                   ^
2 errors
"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T06_20_25.405Z";"hw3.java";"83";" cannot find symbol
        int[] intArr = new int[message.length];
                                      ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T06_20_25.405Z";"hw3.java";"86";" cannot find symbol
        for (int i = 0; i < message.length; i++) {
                                   ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T06_20_25.405Z";"hw3.java";"87";" incompatible types"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T06_20_25.405Z";"hw3.java";"88";" int cannot be dereferenced
            strnew = intArr[i].charAt(i);
                              ^
/"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T06_20_25.405Z";"hw3.java";"102";" cannot find symbol
        message = symbolArrayToString(message);
        ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T06_20_25.405Z";"hw3.java";"102";" cannot find symbol
        message = symbolArrayToString(message);
                                      ^
  symbol"
"752ac65f19eb98c6987504a1382f382be9b25d76";"2020-10-05T16_34_58.089Z";"hw3.java";"155";" reached end of file while parsing
}
 ^
1 error
"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-07T06_17_29.585Z";"hw3.java";"107";" class, interface, or enum expected
    }
    ^
1 error
"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-07T19_59_29.971Z";"hw3.java";"33";" illegal start of expression
        String[] str = ['CONSUL'];
                       ^
/"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-07T19_59_29.971Z";"hw3.java";"33";" not a statement
        String[] str = ['CONSUL'];
                        ^
/"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-07T19_59_29.971Z";"hw3.java";"33";" ';' expected
        String[] str = ['CONSUL'];
                                ^
3 errors
"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-08T22_09_03.480Z";"hw3.java";"33";" illegal start of expression
        String[] str = ['CONSUL'];
                       ^
/"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-08T22_09_03.480Z";"hw3.java";"33";" not a statement
        String[] str = ['CONSUL'];
                        ^
/"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-08T22_09_03.480Z";"hw3.java";"33";" ';' expected
        String[] str = ['CONSUL'];
                                ^
/"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-08T22_09_03.480Z";"hw3.java";"107";" class, interface, or enum expected
}
^
4 errors
"
"76d73dd6aeff425bfefdd46f36c07ab5e12bc561";"2020-10-08T23_53_32.479Z";"hw3.java";"110";" cannot find symbol
            frequences[i] = inStream.readDouble();
            ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T05_56_17.439Z";"hw3.java";"21";" illegal start of expression
        for (int i = 0; i < ; i++){
                            ^
1 error
"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T06_13_27.485Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T06_35_32.548Z";"hw3.java";"21";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T07_08_51.842Z";"hw3.java";"30";" incompatible types"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T17_25_21.647Z";"hw3.java";"52";" incompatible types"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T21_45_12.130Z";"hw3.java";"63";" illegal start of expression
        }
        ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T21_45_12.130Z";"hw3.java";"64";" not a statement
        else (symbol + offset > 25){
             ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T21_45_12.130Z";"hw3.java";"64";" ';' expected
        else (symbol + offset > 25){
                                   ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T21_45_12.130Z";"hw3.java";"64";" 'else' without 'if'
        else (symbol + offset > 25){
        ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T21_45_12.130Z";"hw3.java";"67";" not a statement
        else (symbol + offset <= 25){
             ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T21_45_12.130Z";"hw3.java";"67";" ';' expected
        else (symbol + offset <= 25){
                                    ^
6 errors
"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T23_21_30.081Z";"hw3.java";"65";" cannot find symbol
            y = symbol + offset; 
            ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-05T23_21_30.081Z";"hw3.java";"66";" cannot find symbol
            x = y % 26;
                ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-06T00_23_44.492Z";"hw3.java";"112";" cannot find symbol
        System.out.println(a);
                           ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-06T00_23_44.492Z";"hw3.java";"113";" cannot find symbol
        return a;
               ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-07T16_28_37.835Z";"hw3.java";"111";" cannot find symbol
        System.out.println(a);
                           ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-07T16_28_37.835Z";"hw3.java";"112";" cannot find symbol
        return a;
               ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T01_04_06.394Z";"hw3.java";"162";" cannot find symbol
       In inStream = new In(filename); // creates a variable inStream of type In to read from the file
                            ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T17_52_47.480Z";"hw3.java";"154";" illegal start of expression
        for (int i = 0; i <)
                           ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T17_52_47.480Z";"hw3.java";"156";" illegal start of expression
        return null;
        ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T17_52_47.480Z";"hw3.java";"156";" ')' expected
        return null;
              ^
3 errors
"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T20_08_34.934Z";"hw3.java";"190";" ')' expected
        findFrequencies(12382710 38101);
                                ^
/"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T20_08_34.934Z";"hw3.java";"190";" illegal start of expression
        findFrequencies(12382710 38101);
                                      ^
2 errors
"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T21_27_42.871Z";"hw3.java";"184";" incompatible types"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T21_27_42.871Z";"hw3.java";"206";" cannot find symbol
            fileInput = (args[3]);
            ^
  symbol"
"76e5bea3c4541fc766a846f0c38cf2039d386777";"2020-10-08T21_49_08.042Z";"hw3.java";"175";" illegal start of expression
            String decryptedAlphabet = decrypt(str, i - );
                                                        ^
1 error
"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T18_56_32.382Z";"hw3.java";"36";" cannot find symbol
        int[] inputSymbol = new int[args.lenght];
                                    ^
  symbol"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T18_56_32.382Z";"hw3.java";"37";" cannot find symbol
        for (int i = 0; i < args.lenght ; i++) {
                            ^
  symbol"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T18_56_32.382Z";"hw3.java";"38";" cannot find symbol
            inputSymbol[i] = Integer.parseInt(args[i]);
                                              ^
  symbol"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"19";" class, interface, or enum expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"30";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"33";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"38";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"41";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"46";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"49";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"54";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"57";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"62";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"65";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"70";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"73";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"78";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"81";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"86";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"89";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"91";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"93";" class, interface, or enum expected
        for (int i = 0; i < args.lenght ; i++) {
        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"93";" class, interface, or enum expected
        for (int i = 0; i < args.lenght ; i++) {
                        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"93";" class, interface, or enum expected
        for (int i = 0; i < args.lenght ; i++) {
                                          ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T19_44_56.110Z";"hw3.java";"95";" class, interface, or enum expected
        }
        ^
22 errors
"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"19";" class, interface, or enum expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"22";" class, interface, or enum expected
        int [] c = new int [str.lenght];
        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"23";" class, interface, or enum expected
        for (int i = 0; i < str.lenght; i++) {
        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"23";" class, interface, or enum expected
        for (int i = 0; i < str.lenght; i++) {
                        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"23";" class, interface, or enum expected
        for (int i = 0; i < str.lenght; i++) {
                                        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"25";" class, interface, or enum expected
        return null;
        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"34";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"37";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"42";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"45";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"50";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"53";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"58";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"61";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"66";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"69";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"74";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"77";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"82";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"85";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"90";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"93";" class, interface, or enum expected
    }
    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"95";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"97";" class, interface, or enum expected
        for (int i = 0; i < args.lenght ; i++) {
        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"97";" class, interface, or enum expected
        for (int i = 0; i < args.lenght ; i++) {
                        ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"97";" class, interface, or enum expected
        for (int i = 0; i < args.lenght ; i++) {
                                          ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_11_00.127Z";"hw3.java";"99";" class, interface, or enum expected
        }
        ^
27 errors
"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_58_49.066Z";"hw3.java";"41";" incompatible types"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T20_58_49.066Z";"hw3.java";"109";" method symbolArrayToString in class Caesar cannot be applied to given types;
        String test = symbolArrayToString();
                      ^
  required"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-10T23_09_56.224Z";"hw3.java";"95";" ';' expected
            shiftedSymbArray[i] = shift()
                                         ^
1 error
"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T00_45_45.511Z";"hw3.java";"121";" not a statement
        for (int 1 = 0; i < 26; i++) {
             ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T00_45_45.511Z";"hw3.java";"121";" ';' expected
        for (int 1 = 0; i < 26; i++) {
                ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T00_45_45.511Z";"hw3.java";"121";" not a statement
        for (int 1 = 0; i < 26; i++) {
                          ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T00_45_45.511Z";"hw3.java";"121";" ')' expected
        for (int 1 = 0; i < 26; i++) {
                              ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T00_45_45.511Z";"hw3.java";"121";" ';' expected
        for (int 1 = 0; i < 26; i++) {
                                   ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T00_45_45.511Z";"hw3.java";"136";" ';' expected
        double[] freqEngl = new double [26]
                                           ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T00_45_45.511Z";"hw3.java";"137";" ';' expected
        for (int i = 0; i < message.length)
                                          ^
7 errors
"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T03_11_48.206Z";"hw3.java";"187";" <identifier> expected
        if(function.)
                    ^
/"
"774cf3671ebe5091f067b093a88ad67c0d9c1f93";"2020-10-11T03_11_48.206Z";"hw3.java";"201";" illegal start of statement
    }
    ^
2 errors
"
"782609f05e6b3ee3cc234474e3e072029fc9a9db";"2020-10-08T19_41_17.177Z";"hw3.java";"110";" illegal character"
"782609f05e6b3ee3cc234474e3e072029fc9a9db";"2020-10-08T19_41_17.177Z";"hw3.java";"110";" ';' expected
        String s = “ET TU, BRUTE?”;
                                ^
/"
"782609f05e6b3ee3cc234474e3e072029fc9a9db";"2020-10-08T19_41_17.177Z";"hw3.java";"110";" illegal character"
"7898f7da218b0f5200fb859306a3262df425f955";"2020-10-05T19_26_26.770Z";"hw3.java";"58";" ';' expected
            symbol = symbol 
                           ^
/"
"7898f7da218b0f5200fb859306a3262df425f955";"2020-10-05T19_26_26.770Z";"hw3.java";"141";" <identifier> expected
    System.out.println(check); 
                      ^
/"
"7898f7da218b0f5200fb859306a3262df425f955";"2020-10-05T19_26_26.770Z";"hw3.java";"141";" <identifier> expected
    System.out.println(check); 
                            ^
3 errors
"
"7a42f9b84fd3650124336c71bb93e1a69d8185ca";"2020-10-05T17_59_19.377Z";"hw3.java";"40";" ']' expected
            answer.charAt(i) = int[i]
                                   ^
/"
"7a42f9b84fd3650124336c71bb93e1a69d8185ca";"2020-10-05T17_59_19.377Z";"hw3.java";"40";" ';' expected
            answer.charAt(i) = int[i]
                                    ^
2 errors
"
"7a42f9b84fd3650124336c71bb93e1a69d8185ca";"2020-10-06T21_27_38.527Z";"hw3.java";"138";" cannot find symbol
        System.out.println(encrypyt('ET', 6));
                           ^
  symbol"
"7a42f9b84fd3650124336c71bb93e1a69d8185ca";"2020-10-08T15_19_28.295Z";"hw3.java";"198";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"7a42f9b84fd3650124336c71bb93e1a69d8185ca";"2020-10-08T15_19_28.295Z";"hw3.java";"202";" cannot find symbol
                scoreFrequencies(getDictionaryFrequencies(filename), 
                                                          ^
  symbol"
"7a42f9b84fd3650124336c71bb93e1a69d8185ca";"2020-10-08T15_19_28.295Z";"hw3.java";"211";" cannot find symbol
                scoreFrequencies(getDictionaryFrequencies(filename), 
                                                          ^
  symbol"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" illegal start of type
        for (int i = 0; i < cipherCharFreq.length; i++) {
        ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" ')' expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                  ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" illegal start of type
        for (int i = 0; i < cipherCharFreq.length; i++) {
                     ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" <identifier> expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                      ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" ';' expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                       ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" > expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                                          ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" '(' expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                                                 ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" <identifier> expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                                                    ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" illegal start of type
        for (int i = 0; i < cipherCharFreq.length; i++) {
                                                      ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" <identifier> expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                                                       ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"143";" ';' expected
        for (int i = 0; i < cipherCharFreq.length; i++) {
                                                         ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"144";" illegal start of type
            cipherCharFreq[i] = ((double) cipherCharCount[i] / symbols.length); 
                          ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"144";" ';' expected
            cipherCharFreq[i] = ((double) cipherCharCount[i] / symbols.length); 
                            ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"144";" <identifier> expected
            cipherCharFreq[i] = ((double) cipherCharCount[i] / symbols.length); 
                                        ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"144";" ']' expected
            cipherCharFreq[i] = ((double) cipherCharCount[i] / symbols.length); 
                                                          ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"144";" ';' expected
            cipherCharFreq[i] = ((double) cipherCharCount[i] / symbols.length); 
                                                           ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"144";" <identifier> expected
            cipherCharFreq[i] = ((double) cipherCharCount[i] / symbols.length); 
                                                                             ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"147";" class, interface, or enum expected
        return cipherCharFreq;
        ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"148";" class, interface, or enum expected
    }
    ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"153";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"156";" class, interface, or enum expected
    }
    ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"158";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"162";" class, interface, or enum expected
        String filename = args[1]; 
        ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"164";" class, interface, or enum expected
        int key = Integer.parseInt(args[2]);
        ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"167";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"170";" class, interface, or enum expected
        switch (action) {
        ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"173";" class, interface, or enum expected
                String encryptedMessage = encrypt(plainText, key);
                ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"175";" class, interface, or enum expected
                System.out.println(encryptedMessage);
                ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"176";" class, interface, or enum expected
                break;
                ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"177";" class, interface, or enum expected
            case 'decrypt'"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"179";" class, interface, or enum expected
                String decryptedMessage = decrypt(cipher, key);
                ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"181";" class, interface, or enum expected
                System.out.println(decryptedMessage);
                ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"182";" class, interface, or enum expected
                break;  
                ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-07T05_48_54.121Z";"hw3.java";"183";" class, interface, or enum expected
        }
        ^
34 errors
"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-08T14_34_04.093Z";"hw3.java";"177";" variable i is already defined in method crack(int[],double[],double[])
                for (int i = 0; i < currentFreqs; i++) {
                         ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-08T14_34_04.093Z";"hw3.java";"177";" bad operand types for binary operator '<'
                for (int i = 0; i < currentFreqs; i++) {
                                  ^
  first type"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-08T14_53_35.063Z";"hw3.java";"177";" variable i is already defined in method crack(int[],double[],double[])
                for (int i = 0; i < currentFreqs; i++) {
                         ^
/"
"7adfe8a8f2ce49fabe8772d2c7d7deca8749b914";"2020-10-08T14_53_35.063Z";"hw3.java";"177";" bad operand types for binary operator '<'
                for (int i = 0; i < currentFreqs; i++) {
                                  ^
  first type"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-03T02_21_59.475Z";"hw3.java";"47";" cannot find symbol
            char current = symbols.charAt(i);
                                  ^
  symbol"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-03T02_21_59.475Z";"hw3.java";"48";" incompatible types"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-03T02_21_59.475Z";"hw3.java";"51";" incompatible types"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-05T19_14_18.393Z";"hw3.java";"105";" cannot find symbol
        else if (zeroedSymbol + offset > 25) { //Something is messed up with the wrapping here
                 ^
  symbol"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-05T19_14_18.393Z";"hw3.java";"106";" cannot find symbol
            wrap = (zeroedSymbol + offset) % 25 - 1;
                    ^
  symbol"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-05T19_14_18.393Z";"hw3.java";"110";" cannot find symbol
        else if (zeroedSymbol + offset <= 0) {
                 ^
  symbol"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-05T19_14_18.393Z";"hw3.java";"111";" cannot find symbol
            unshiftedSymbol = zeroedSymbol + zeroedOffset;
                              ^
  symbol"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-05T21_49_32.610Z";"hw3.java";"202";" bad operand types for binary operator '/'
        letterFreq = letterFreq / count;
                                ^
  first type"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-06T01_33_17.641Z";"hw3.java";"202";" bad operand types for binary operator '/'
        letterFreq = letterFreq / count;
                                ^
  first type"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-06T02_44_00.876Z";"hw3.java";"199";" cannot find symbol
            if (symbol[i] <= 25 && symbol[i] >= 0) {
                ^
  symbol"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-06T02_44_00.876Z";"hw3.java";"199";" cannot find symbol
            if (symbol[i] <= 25 && symbol[i] >= 0) {
                                   ^
  symbol"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-06T04_59_39.957Z";"hw3.java";"248";" '.class' expected
            scoreFrequencies(double[])
                                     ^
/"
"7b882877d83362844ed860059e5e2274b5e1aa6a";"2020-10-06T04_59_39.957Z";"hw3.java";"248";" ';' expected
            scoreFrequencies(double[])
                                      ^
2 errors
"
"7c8aacb1a1b8db047ada8a5e719c07f94ba911c0";"2020-10-08T01_00_08.455Z";"hw3.java";"213";" repeated modifier
    public static void main(String[] args) {
    ^
/"
"7c8aacb1a1b8db047ada8a5e719c07f94ba911c0";"2020-10-08T01_00_08.455Z";"hw3.java";"213";" repeated modifier
    public static void main(String[] args) {
           ^
2 errors
"
"7c8aacb1a1b8db047ada8a5e719c07f94ba911c0";"2020-10-08T17_53_41.600Z";"hw3.java";"214";" repeated modifier
    public static void main(String[] args) {
    ^
/"
"7c8aacb1a1b8db047ada8a5e719c07f94ba911c0";"2020-10-08T17_53_41.600Z";"hw3.java";"214";" repeated modifier
    public static void main(String[] args) {
           ^
2 errors
"
"7d0d034b66e61ddcb7f9c81b42fa9d6c790e2fe1";"2020-10-06T07_34_09.596Z";"hw3.java";"39";" unexpected type
            stringConversion.charAt(i) = (char) (symbols[i] + 'A');
                                   ^
  required"
"7d0d034b66e61ddcb7f9c81b42fa9d6c790e2fe1";"2020-10-07T12_49_28.622Z";"hw3.java";"198";" class, interface, or enum expected
}
^
1 error
"
"7d0d034b66e61ddcb7f9c81b42fa9d6c790e2fe1";"2020-10-08T09_34_09.583Z";"hw3.java";"201";" class, interface, or enum expected
}
^
1 error
"
"7d0d034b66e61ddcb7f9c81b42fa9d6c790e2fe1";"2020-10-08T11_41_46.743Z";"hw3.java";"133";" ']' expected
            double letterCount[i] = 0;
                               ^
/"
"7d0d034b66e61ddcb7f9c81b42fa9d6c790e2fe1";"2020-10-08T11_41_46.743Z";"hw3.java";"133";" illegal start of expression
            double letterCount[i] = 0;
                                ^
2 errors
"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-06T04_02_38.044Z";"hw3.java";"47";" variable str might not have been initialized
        return str;
               ^
1 error
"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T00_07_23.546Z";"hw3.java";"49";" variable str might not have been initialized
        return str;
               ^
1 error
"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T00_32_00.838Z";"hw3.java";"114";" class, interface, or enum expected
}
^
1 error
"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T01_35_07.422Z";"hw3.java";"135";" class, interface, or enum expected
}
^
1 error
"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T06_50_03.843Z";"hw3.java";"107";" non-static variable inStream cannot be referenced from a static context
        String list = inStream.readAll(filename);
                      ^
/"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T06_50_03.843Z";"hw3.java";"107";" method readAll in class In cannot be applied to given types;
        String list = inStream.readAll(filename);
                              ^
  required"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T06_50_03.843Z";"hw3.java";"130";" non-static variable inStream cannot be referenced from a static context
        String message = inStream.readAll(args[1]);
                         ^
/"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T06_50_03.843Z";"hw3.java";"130";" method readAll in class In cannot be applied to given types;
        String message = inStream.readAll(args[1]);
                                 ^
  required"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T22_20_29.366Z";"hw3.java";"107";" non-static variable inStream cannot be referenced from a static context
        String list = inStream.readAll(filename);
                      ^
/"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T22_20_29.366Z";"hw3.java";"107";" method readAll in class In cannot be applied to given types;
        String list = inStream.readAll(filename);
                              ^
  required"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T22_20_29.366Z";"hw3.java";"130";" non-static variable inStream cannot be referenced from a static context
        String message = inStream.readAll(args[1]);
                         ^
/"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T22_20_29.366Z";"hw3.java";"130";" method readAll in class In cannot be applied to given types;
        String message = inStream.readAll(args[1]);
                                 ^
  required"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T22_33_45.844Z";"hw3.java";"134";" illegal character"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T22_44_51.311Z";"hw3.java";"134";" illegal character"
"7dec407a0a131855a9137b0e04a6cc5b9cb8af66";"2020-10-07T23_21_03.805Z";"hw3.java";"137";" illegal character"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T01_10_24.728Z";"hw3.java";"25";" ';' expected
        str.toUpperCase()
                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T01_10_24.728Z";"hw3.java";"26";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T01_10_24.728Z";"hw3.java";"27";" ';' expected
        String[] stringToSymbolArray = new String[str.length()]
                                                               ^
3 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_31_15.359Z";"hw3.java";"26";" ';' expected
    int key = args[2]); // reads key, entry 3
                     ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_31_15.359Z";"hw3.java";"41";" ';' expected
        str.toUpperCase()
                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_31_15.359Z";"hw3.java";"42";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_31_15.359Z";"hw3.java";"43";" ';' expected
        String[] stringToSymbolArray = new String[stringname.length()]
                                                                      ^
4 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"39";" ';' expected
        int key = args[2]); // reads key, entry 3
                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"42";" ';' expected
        str.toUpperCase()
                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"43";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"45";" ';' expected
        String[] stringToSymbolArray = new String[stringname.length()] 
                                                                      ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"48";" ';' expected
                str.charAt(i) 
                             ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"49";" illegal start of expression
                char letter = [i] // char letter = '[i]'
                              ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"49";" not a statement
                char letter = [i] // char letter = '[i]'
                               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"49";" ';' expected
                char letter = [i] // char letter = '[i]'
                                ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"51";" illegal start of expression
                int ourSymbolRepresentation = (int) letter - [i] // or - '[i]'
                                                             ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"51";" not a statement
                int ourSymbolRepresentation = (int) letter - [i] // or - '[i]'
                                                              ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T16_55_42.388Z";"hw3.java";"51";" ';' expected
                int ourSymbolRepresentation = (int) letter - [i] // or - '[i]'
                                                               ^
11 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"17";" ';' expected
        int key = args[2]); // reads key, entry 3
                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                     ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                          ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" ')' expected
        public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                                                          ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"31";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                                                           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"33";" ';' expected
            str.toUpperCase()
                             ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"34";" ';' expected
            str = str.toUpperCase()
                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"36";" ';' expected
            String[] stringToSymbolArray = new String[str.length()] 
                                                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"39";" unclosed character literal
                    char letter = '[str.charAt(i)]'; // char letter = '[i]'
                                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"39";" ';' expected
                    char letter = '[str.charAt(i)]'; // char letter = '[i]'
                                                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"39";" unclosed character literal
                    char letter = '[str.charAt(i)]'; // char letter = '[i]'
                                                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"41";" unclosed character literal
                    int ourSymbolRepresentation = (int) letter - '[str.charAt(i)]';
                                                                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"41";" ';' expected
                    int ourSymbolRepresentation = (int) letter - '[str.charAt(i)]';
                                                                                ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"41";" unclosed character literal
                    int ourSymbolRepresentation = (int) letter - '[str.charAt(i)]';
                                                                                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T18_00_19.341Z";"hw3.java";"119";" class, interface, or enum expected
}
^
19 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-07T23_41_35.111Z";"hw3.java";"61";" ';' expected
            return letter
                         ^
1 error
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T00_18_18.866Z";"hw3.java";"67";" cannot find symbol
        return giveStringArray;
               ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T00_18_18.866Z";"hw3.java";"128";" cannot find symbol
        for (int I = 0; I < giveSymbolArray.length; I++) {
                            ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T00_18_18.866Z";"hw3.java";"129";" cannot find symbol
                    System.out.println(giveSymbolArray[i]);
                                       ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T00_18_18.866Z";"hw3.java";"129";" cannot find symbol
                    System.out.println(giveSymbolArray[i]);
                                                       ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T00_18_18.866Z";"hw3.java";"135";" incompatible types"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T12_44_07.356Z";"hw3.java";"37";" ';' expected
                System.out.println(giveSymbolArray[i])
                                                      ^
1 error
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T13_04_39.367Z";"hw3.java";"133";" cannot find symbol
                    System.out.println(giveSymbolArray);
                                       ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T14_15_05.593Z";"hw3.java";"38";" cannot find symbol
        return symbolMessage; // returning the symbol message
               ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T14_15_05.593Z";"hw3.java";"39";" incompatible types"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T14_15_05.593Z";"hw3.java";"132";" cannot find symbol
        int[] symbols = inputs('CONSUL');
                        ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T14_15_05.593Z";"hw3.java";"136";" cannot find symbol
                    System.out.println(inputs);
                                       ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"50";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"54";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++) {
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"54";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++) {
                        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"54";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++) {
                                            ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"58";" class, interface, or enum expected
            char letter = (char) (ourSymbolRepresentation + 'A');
            ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"60";" class, interface, or enum expected
            message += letter;
            ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"61";" class, interface, or enum expected
        }
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"64";" class, interface, or enum expected
    }
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"73";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {       
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"77";" class, interface, or enum expected
        }    
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"81";" class, interface, or enum expected
            return shiftedSymbol;
            ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"82";" class, interface, or enum expected
        }
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"92";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"96";" class, interface, or enum expected
        }
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"100";" class, interface, or enum expected
            return unshiftedSymbol
            ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"108";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"111";" class, interface, or enum expected
        stringToSymbolArray(message);
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"112";" class, interface, or enum expected
        return giveSymbolArray;
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"114";" class, interface, or enum expected
        for (int I = 0; I < giveSymbolArray.length(); I++) {
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"114";" class, interface, or enum expected
        for (int I = 0; I < giveSymbolArray.length(); I++) {
                        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"114";" class, interface, or enum expected
        for (int I = 0; I < giveSymbolArray.length(); I++) {
                                                      ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"116";" class, interface, or enum expected
        }
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"119";" class, interface, or enum expected
        symbolArrayToString(giveSymbolArray);
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"120";" class, interface, or enum expected
        return message;
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"121";" class, interface, or enum expected
    }
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"126";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"129";" class, interface, or enum expected
    }
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"134";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"137";" class, interface, or enum expected
    }
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"142";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"145";" class, interface, or enum expected
    }
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"150";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"153";" class, interface, or enum expected
    }
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"155";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"157";" class, interface, or enum expected
        for (int I = 0; I < output.length; I++) {
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"157";" class, interface, or enum expected
        for (int I = 0; I < output.length; I++) {
                        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"157";" class, interface, or enum expected
        for (int I = 0; I < output.length; I++) {
                                           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"159";" class, interface, or enum expected
        }
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"161";" class, interface, or enum expected
            System.out.println(output2);
            ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"164";" class, interface, or enum expected
        String action = args[0]; // reads action (encrypt or decrypt), entry 1
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"165";" class, interface, or enum expected
        String filename = args[1]; // reads filename, entry 2
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"166";" class, interface, or enum expected
        int offset = args[2]; // reads key
        ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T22_24_02.811Z";"hw3.java";"171";" class, interface, or enum expected
    }
    ^
43 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"115";" cannot find symbol
        for (int I = 0; I < giveSymbolArray.length(); I++) {
                                           ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"119";" variable message is already defined in method encrypt(String,int)
        String message = symbolArrayToString(giveSymbolArray);
               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"134";" cannot find symbol
        return giveSymbolArray;
               ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"136";" cannot find symbol
        for (int I = 0; I < giveSymbolArray.length(); I++) {
                            ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"137";" cannot find symbol
            unshift(giveSymbolArray[I], key);
                    ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"139";" cannot find symbol
        return giveSymbolArray;
               ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"141";" cannot find symbol
        symbolArrayToString(giveSymbolArray);
                            ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"142";" cannot find symbol
        return message;
               ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"171";" cannot find symbol
        In inStream = new In(filename); 
                             ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"177";" incompatible types"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"180";" variable inStream is already defined in method main(String[])
        In inStream = new In(filename); 
           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"181";" variable str is already defined in method main(String[])
        String str = inStream.readString(); 
               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"185";" cannot find symbol
        if (action == encrypt) {
                      ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"186";" cannot find symbol
            encrypt(str, key);
                         ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"187";" incompatible types"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"188";" cannot find symbol
            System.out.println(message);
                               ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"190";" cannot find symbol
        if (action == decrypt) {
                      ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"191";" cannot find symbol
            decrypt(cipher, key);
                    ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"191";" cannot find symbol
            decrypt(cipher, key);
                            ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"192";" incompatible types"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"193";" cannot find symbol
            System.out.println(message);
                               ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"195";" cannot find symbol
        if (action == crack) {
                      ^
  symbol"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"196";" incompatible types"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-08T23_31_09.491Z";"hw3.java";"197";" reference to println is ambiguous
            System.out.println(null);
                      ^
  both method println(char[]) in PrintStream and method println(String) in PrintStream match
24 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"169";" illegal start of expression
            if ((symbols[i] <= 25) && (symbols[i] => 0)) {
                                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"203";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"203";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"203";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"203";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"203";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"203";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"208";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"208";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"208";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"208";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"208";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T01_33_05.972Z";"hw3.java";"249";" reached end of file while parsing
}
 ^
13 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"169";" illegal start of expression
            if ((symbols[i] <= 25) && (symbols[i] => 0)) {
                                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"206";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"206";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"206";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"206";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"206";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"206";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"217";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"217";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"217";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"217";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"217";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T22_39_03.498Z";"hw3.java";"258";" reached end of file while parsing
}
 ^
13 errors
"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"169";" illegal start of expression
            if ((symbols[i] <= 25) && (symbols[i] => 0)) {
                                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"206";" illegal start of expression
    public static double scoreFrequencies(double[] english, 
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"206";" illegal start of expression
    public static double scoreFrequencies(double[] english, 
           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"206";" ';' expected
    public static double scoreFrequencies(double[] english, 
                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"206";" '.class' expected
    public static double scoreFrequencies(double[] english, 
                                                   ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"206";" ';' expected
    public static double scoreFrequencies(double[] english, 
                                                          ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"207";" ';' expected
                                          double[] currentFreqs) {
                                                               ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"217";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"217";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"217";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"217";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"217";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"80ef8b175906556768725249bfe6689efaefc880";"2020-10-09T23_07_12.101Z";"hw3.java";"252";" reached end of file while parsing
}
 ^
13 errors
"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T00_10_33.112Z";"hw3.java";"23";" missing return statement
    }
    ^
1 error
"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T02_22_46.937Z";"hw3.java";"33";" missing return statement
    }
    ^
1 error
"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T10_48_43.914Z";"hw3.java";"36";" <identifier> expected
    System.out.println(New_arr);
                      ^
/"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T10_48_43.914Z";"hw3.java";"36";" <identifier> expected
    System.out.println(New_arr);
                              ^
2 errors
"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T11_35_27.843Z";"hw3.java";"36";" <identifier> expected
    System.out.println(New_arr);
                      ^
/"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T11_35_27.843Z";"hw3.java";"36";" <identifier> expected
    System.out.println(New_arr);
                              ^
2 errors
"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T14_25_35.653Z";"hw3.java";"40";" <identifier> expected
    System.out.println(New_arr);
                      ^
/"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T14_25_35.653Z";"hw3.java";"40";" <identifier> expected
    System.out.println(New_arr);
                              ^
2 errors
"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T20_35_54.813Z";"hw3.java";"79";" incompatible types"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T20_58_08.172Z";"hw3.java";"92";" missing return statement
    }
    ^
/"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T20_58_08.172Z";"hw3.java";"58";" variable outputString might not have been initialized
            outputString = outputString + letter;
                           ^
/"
"8104778b1bd1b77512ff9909d781ad3440108d84";"2020-10-08T20_58_08.172Z";"hw3.java";"60";" variable outputString might not have been initialized
        return outputString;
               ^
3 errors
"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-04T23_19_35.158Z";"hw3.java";"98";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
1 error
"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-05T18_01_19.713Z";"hw3.java";"98";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
1 error
"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-07T20_53_07.716Z";"hw3.java";"40";" unexpected type
            str.charAt(i) = (char) symbols[i];
                      ^
  required"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-07T21_14_41.160Z";"hw3.java";"40";" unexpected type
            str.charAt(i) = symbols[i];
                      ^
  required"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"195";" illegal start of expression
            for (int i = 0; i <)
                               ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"196";" illegal start of expression
        }
        ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"196";" ')' expected
        }
         ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"197";" not a statement
        return null;
               ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"203";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"203";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"203";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"203";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"203";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"203";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"208";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"208";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"208";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"208";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"208";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T19_02_31.501Z";"hw3.java";"225";" reached end of file while parsing
}
 ^
16 errors
"
"82090777057e5b8418e4c209a20c2928997d24cb";"2020-10-08T21_29_04.946Z";"hw3.java";"245";" incompatible types"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-05T22_19_32.187Z";"hw3.java";"37";" cannot find symbol
        String message = String.parseString(symbols);
                               ^
  symbol"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-05T22_19_32.187Z";"hw3.java";"39";" unexpected type
            message.charAt(i) = symbols[i];
                          ^
  required"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-06T16_51_14.383Z";"hw3.java";"39";" incompatible types"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-06T17_55_55.640Z";"hw3.java";"57";" illegal start of expression
        return 0;
        ^
/"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-06T17_55_55.640Z";"hw3.java";"57";" not a statement
        return 0;
               ^
2 errors
"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-07T20_24_08.746Z";"hw3.java";"118";" incompatible types"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-09T00_08_52.019Z";"hw3.java";"221";" incompatible types"
"8234cafa4dcd18c5bee3c95c4e76811026ea6a53";"2020-10-09T00_08_52.019Z";"hw3.java";"223";" incompatible types"
"833518764076caa037d114455cff8b00883bb085";"2020-10-05T18_49_55.122Z";"hw3.java";"25";" cannot find symbol
        return integerValue;
               ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-05T18_49_55.122Z";"hw3.java";"98";" incompatible types"
"833518764076caa037d114455cff8b00883bb085";"2020-10-05T19_29_47.096Z";"hw3.java";"21";" cannot find symbol
        int[] symbolValues = new int[str.length];
                                        ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-05T19_29_47.096Z";"hw3.java";"40";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-05T19_29_47.096Z";"hw3.java";"41";" cannot find symbol
            int positionI = symbols.charAt(i);
                                   ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-05T22_13_37.888Z";"hw3.java";"42";" incompatible types"
"833518764076caa037d114455cff8b00883bb085";"2020-10-06T19_33_41.441Z";"hw3.java";"77";" cannot find symbol
        int[] encodedSymbols = new symbolArrayToString[message];
                                   ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-06T19_33_41.441Z";"hw3.java";"77";" incompatible types"
"833518764076caa037d114455cff8b00883bb085";"2020-10-06T22_41_26.198Z";"hw3.java";"97";" incompatible types"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"112";" '(' expected
                if 
                  ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"113";" illegal start of expression
            }
            ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"113";" ')' expected
            }
             ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"126";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"126";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"126";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"126";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"126";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"126";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"137";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"137";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"137";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T00_13_21.995Z";"hw3.java";"170";" reached end of file while parsing
}
 ^
15 errors
"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"112";" '(' expected
            if 
              ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"113";" illegal start of expression
            for (int i = 0; i <= 25; i++) {
            ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"113";" ')' expected
            for (int i = 0; i <= 25; i++) {
               ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"113";" variable declaration not allowed here
            for (int i = 0; i <= 25; i++) {
                     ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"113";" not a statement
            for (int i = 0; i <= 25; i++) {
                              ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"113";" ';' expected
            for (int i = 0; i <= 25; i++) {
                                        ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"114";" '(' expected
                if 
                  ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"115";" illegal start of expression
            }
            ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"115";" ')' expected
            }
             ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"128";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"128";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"128";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"128";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"128";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"128";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"139";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"139";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"139";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"139";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"139";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T15_21_38.780Z";"hw3.java";"172";" reached end of file while parsing
}
 ^
21 errors
"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"117";" illegal start of expression
            }
            ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"120";" '(' expected
                if 
                  ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"121";" illegal start of expression
            }
            ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"121";" ')' expected
            }
             ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"134";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"148";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"148";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"148";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"148";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"148";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"181";" reached end of file while parsing
}
 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_24_01.705Z";"hw3.java";"182";" reached end of file while parsing
17 errors
"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"117";" illegal start of expression
            }
            ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"120";" '(' expected
                if 
                  ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"121";" illegal start of expression
            }
            ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"121";" ')' expected
            }
             ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"134";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"134";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"134";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"148";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"148";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"148";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"148";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"148";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"181";" reached end of file while parsing
}
 ^
/"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T19_36_50.207Z";"hw3.java";"182";" reached end of file while parsing
17 errors
"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T20_33_21.348Z";"hw3.java";"108";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T20_33_21.348Z";"hw3.java";"114";" cannot find symbol
            freqInCipherFile[i] = cipherText;
                             ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T20_33_21.348Z";"hw3.java";"121";" cannot find symbol
        cipherText = (freqInCipherFile[i]) / symbols.length;    
        ^
  symbol"
"833518764076caa037d114455cff8b00883bb085";"2020-10-07T20_33_21.348Z";"hw3.java";"121";" cannot find symbol
        cipherText = (freqInCipherFile[i]) / symbols.length;    
                                       ^
  symbol"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"25";" illegal start of expression
        }
        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"37";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"45";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"45";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"45";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"53";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"53";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"53";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T10_48_53.905Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
42 errors
"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T11_59_29.182Z";"hw3.java";"42";" illegal start of expression
        return null;
        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T11_59_29.182Z";"hw3.java";"42";" not a statement
        return null;
               ^
2 errors
"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T22_34_44.654Z";"hw3.java";"147";" cannot find symbol
        char numericalValue = charAt(args[2]);
                              ^
  symbol"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T22_34_44.654Z";"hw3.java";"152";" cannot find symbol
        message = function(message,6);
                  ^
  symbol"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T23_00_26.444Z";"hw3.java";"152";" cannot find symbol
        message = function(message,Integer.parseInt(args[2]));
                  ^
  symbol"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-05T23_44_41.964Z";"hw3.java";"152";" cannot find symbol
        message = function(message, (int)(offset.charAt(0) - 'A'));        
                  ^
  symbol"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T09_19_23.631Z";"hw3.java";"122";" not a statement
        }p
         ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T09_19_23.631Z";"hw3.java";"122";" ';' expected
        }p
          ^
2 errors
"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T15_46_56.239Z";"hw3.java";"176";" illegal start of expression
        }
        ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T15_46_56.239Z";"hw3.java";"182";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T15_46_56.239Z";"hw3.java";"182";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T15_46_56.239Z";"hw3.java";"182";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T15_46_56.239Z";"hw3.java";"182";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T15_46_56.239Z";"hw3.java";"182";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-06T15_46_56.239Z";"hw3.java";"231";" reached end of file while parsing
}
 ^
7 errors
"
"842fbda27b35b29ea68ee1c0c3da3bd2be207210";"2020-10-07T00_14_51.801Z";"hw3.java";"253";" cannot find symbol
        if (args[0] == encrypt){
                       ^
  symbol"
"86a8bdb0a8c9676a3c2341b787d4c693856791e1";"2020-10-04T09_40_08.293Z";"hw3.java";"148";" cannot find symbol
            position = symbols[i];
            ^
  symbol"
"86a8bdb0a8c9676a3c2341b787d4c693856791e1";"2020-10-04T09_40_08.293Z";"hw3.java";"149";" cannot find symbol
            frequencyArray[position] = frequencyArray[position] + 1;
                           ^
  symbol"
"86a8bdb0a8c9676a3c2341b787d4c693856791e1";"2020-10-04T09_40_08.293Z";"hw3.java";"149";" cannot find symbol
            frequencyArray[position] = frequencyArray[position] + 1;
                                                      ^
  symbol"
"86a8bdb0a8c9676a3c2341b787d4c693856791e1";"2020-10-04T11_31_28.337Z";"hw3.java";"199";" ']' expected
            String[] decryptedString[key] = decryptedMessage;
                                     ^
/"
"86a8bdb0a8c9676a3c2341b787d4c693856791e1";"2020-10-04T11_31_28.337Z";"hw3.java";"199";" illegal start of expression
            String[] decryptedString[key] = decryptedMessage;
                                        ^
/"
"86a8bdb0a8c9676a3c2341b787d4c693856791e1";"2020-10-04T11_31_28.337Z";"hw3.java";"202";" ']' expected
            double[] score[key] = scoreFrequencies(english, frequencyArray);
                           ^
/"
"86a8bdb0a8c9676a3c2341b787d4c693856791e1";"2020-10-04T11_31_28.337Z";"hw3.java";"202";" illegal start of expression
            double[] score[key] = scoreFrequencies(english, frequencyArray);
                              ^
4 errors
"
"89daac6f0b6f67287ebfb791365f69bb3fdaf8e7";"2020-10-09T22_55_41.864Z";"hw3.java";"21";" ';' expected
        str.toUpperCase()
                         ^
1 error
"
"89daac6f0b6f67287ebfb791365f69bb3fdaf8e7";"2020-10-10T22_11_35.297Z";"hw3.java";"97";" illegal start of expression
    }
    ^
/"
"89daac6f0b6f67287ebfb791365f69bb3fdaf8e7";"2020-10-10T22_11_35.297Z";"hw3.java";"99";" reached end of file while parsing
}
 ^
2 errors
"
"8b25c7b3a77c29e1c3d4b80e6d0d846ad2d491f1";"2020-10-07T07_21_54.791Z";"hw3.java";"22";" cannot find symbol
        str.charAt(i);
                   ^
  symbol"
"8b25c7b3a77c29e1c3d4b80e6d0d846ad2d491f1";"2020-10-07T12_49_59.330Z";"hw3.java";"46";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-05T23_05_54.518Z";"hw3.java";"23";" cannot find symbol
        for(int i = 0; i < str.length; i++) {
                              ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-05T23_05_54.518Z";"hw3.java";"24";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T01_26_04.876Z";"hw3.java";"10";" invalid method declaration; return type required
    stringToSymbolArray(args[]);
    ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T01_26_04.876Z";"hw3.java";"10";" <identifier> expected
    stringToSymbolArray(args[]);
                              ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T01_26_04.876Z";"hw3.java";"28";" '.class' expected
        return int;
                  ^
3 errors
"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_14_42.719Z";"hw3.java";"20";" cannot find symbol
        string str = (args[0]);
        ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_14_42.719Z";"hw3.java";"20";" variable str is already defined in method stringToSymbolArray(String)
        string str = (args[0]);
               ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_14_42.719Z";"hw3.java";"20";" cannot find symbol
        string str = (args[0]);
                      ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_14_42.719Z";"hw3.java";"21";" cannot find symbol
        char[] s = new char [args];
                             ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_14_42.719Z";"hw3.java";"28";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_32_30.637Z";"hw3.java";"20";" cannot find symbol
        string str = (args[0]);
        ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_32_30.637Z";"hw3.java";"20";" variable str is already defined in method stringToSymbolArray(String)
        string str = (args[0]);
               ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_32_30.637Z";"hw3.java";"20";" cannot find symbol
        string str = (args[0]);
                      ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_32_30.637Z";"hw3.java";"29";" cannot find symbol
        return s;
               ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_52_06.657Z";"hw3.java";"24";" '(' or '[' expected
        str = str.toUpperCase();
            ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_52_06.657Z";"hw3.java";"26";" ';' expected
            char l = str.charAt(i)
                                  ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T02_52_06.657Z";"hw3.java";"27";" ';' expected
            int ourSymbolRepresentation = (int) letter - l];
                                                          ^
3 errors
"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T03_49_21.479Z";"hw3.java";"26";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T21_03_01.608Z";"hw3.java";"19";" invalid method declaration; return type required
    stringToSymbolArray('CONSUL');
    ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T21_03_01.608Z";"hw3.java";"19";" illegal start of type
    stringToSymbolArray('CONSUL');
                        ^
2 errors
"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-06T21_23_23.094Z";"hw3.java";"106";" ';' expected
        int[] a = stringToSymbolArray('CONSUL')
                                               ^
1 error
"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T01_31_53.000Z";"hw3.java";"100";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T01_52_34.613Z";"hw3.java";"100";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"133";" cannot find symbol
        String m = inStream.readAll();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"135";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"136";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"137";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"138";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"139";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"140";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"141";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"142";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"143";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"144";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"145";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"146";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"147";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"148";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"149";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"150";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"151";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"152";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"153";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"154";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"155";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"156";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"157";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"158";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"159";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"160";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"162";" cannot find symbol
            A[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"163";" cannot find symbol
            B[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"164";" cannot find symbol
            C[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"165";" cannot find symbol
            D[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"166";" cannot find symbol
            E[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"167";" cannot find symbol
            F[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"168";" cannot find symbol
            G[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"169";" cannot find symbol
            H[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"170";" cannot find symbol
            I[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"171";" cannot find symbol
            J[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"172";" cannot find symbol
            K[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"173";" cannot find symbol
            L[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"174";" cannot find symbol
            M[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"175";" cannot find symbol
            N[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"176";" cannot find symbol
            O[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"177";" cannot find symbol
            P[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"178";" cannot find symbol
            Q[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"179";" cannot find symbol
            R[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"180";" cannot find symbol
            S[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"181";" cannot find symbol
            T[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"182";" cannot find symbol
            U[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"183";" cannot find symbol
            V[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"184";" cannot find symbol
            W[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"185";" cannot find symbol
            X[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"186";" cannot find symbol
            Y[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"187";" cannot find symbol
            Z[i] = inStream.readDouble();
                   ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T20_55_41.462Z";"hw3.java";"249";" cannot find symbol
        getDictionaryFrequencies(english.txt);
                                 ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-08T23_22_34.182Z";"hw3.java";"133";" bad operand types for binary operator '+'
            f = f + f[i];
                  ^
  first type"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"145";" ';' expected
        for (int i = 0, i < 26, i++) {
                         ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"145";" illegal start of type
        for (int i = 0, i < 26, i++) {
                            ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"145";" illegal start of expression
        for (int i = 0, i < 26, i++) {
                              ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"145";" ';' expected
        for (int i = 0, i < 26, i++) {
                               ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"145";" illegal start of expression
        for (int i = 0, i < 26, i++) {
                                   ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"147";" illegal start of expression
            for () {
            ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"147";" -> expected
            for () {
                  ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"147";" not a statement
            for () {
                ^
/"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T00_11_19.474Z";"hw3.java";"149";" ';' expected
            }
             ^
9 errors
"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T01_24_31.722Z";"hw3.java";"144";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T01_24_31.722Z";"hw3.java";"145";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T01_24_31.722Z";"hw3.java";"150";" cannot find symbol
                k[j] = inStream.readInt(stringToSymbolArray(filename));
                                                            ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T01_24_31.722Z";"hw3.java";"150";" cannot find symbol
                k[j] = inStream.readInt(stringToSymbolArray(filename));
                       ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T01_24_31.722Z";"hw3.java";"152";" bad operand types for binary operator '+'
                    numberOfTimes = numberOfTimes + 1;
                                                  ^
  first type"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T01_24_31.722Z";"hw3.java";"155";" incompatible types"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T01_24_31.722Z";"hw3.java";"162";" cannot find symbol
        return answer;
               ^
  symbol"
"8d6e3a4788b876ced6ef6f77912d1ee181b415fc";"2020-10-09T02_20_27.134Z";"hw3.java";"149";" bad operand type int[] for unary operator '++'
                numberOfLetters = (numberOfLetters++);
                                                  ^
1 error
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-07T21_20_19.987Z";"hw3.java";"98";" not a statement
                newSymbol 
                ^
/"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-07T21_20_19.987Z";"hw3.java";"98";" ';' expected
                newSymbol 
                         ^
2 errors
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-07T22_01_40.658Z";"hw3.java";"97";" not a statement
                newSymbol 
                ^
/"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-07T22_01_40.658Z";"hw3.java";"97";" ';' expected
                newSymbol 
                         ^
2 errors
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-08T04_14_58.638Z";"hw3.java";"44";" cannot find symbol
        System.out.println(getDictionaryFrequencies(english.txt));
                                                    ^
  symbol"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-08T04_14_58.638Z";"hw3.java";"179";" cannot find symbol
            frequency.to_f = dictionaryFrequencies[i];
                     ^
  symbol"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-08T22_51_01.199Z";"hw3.java";"235";" ';' expected
            String message = decrypt(messageFile, i)
                                                    ^
1 error
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-08T23_07_56.325Z";"hw3.java";"235";" ';' expected
            String message = decrypt(messageFile, i)
                                                    ^
1 error
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-08T23_25_58.649Z";"hw3.java";"235";" ';' expected
            String message = decrypt(messageFile, 0)
                                                    ^
/"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-08T23_25_58.649Z";"hw3.java";"240";" ';' expected
            String message = decrypt(messageFile, i)
                                                    ^
2 errors
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-08T23_44_35.806Z";"hw3.java";"234";" ';' expected
            String message = decrypt(messageFile, i)
                                                    ^
1 error
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-09T00_04_49.729Z";"hw3.java";"234";" ';' expected
            String message = decrypt(messageFile, i)
                                                    ^
1 error
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-09T00_32_41.597Z";"hw3.java";"235";" ';' expected
            String message = decrypt(messageFile, i)
                                                    ^
1 error
"
"8f44159e06781fa522902f2d7f8f3174706f414e";"2020-10-09T00_53_36.940Z";"hw3.java";"236";" ';' expected
            String message = decrypt(messageFile, i)
                                                    ^
1 error
"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-07T23_20_04.210Z";"hw3.java";"64";" ';' expected
        else {return symbol};
                           ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-07T23_20_04.210Z";"hw3.java";"134";" reached end of file while parsing
        }
         ^
2 errors
"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T04_29_07.573Z";"hw3.java";"107";" ']' expected
            shift(int[i], offset); 
                      ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T04_29_07.573Z";"hw3.java";"107";" ')' expected
            shift(int[i], offset); 
                       ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T04_29_07.573Z";"hw3.java";"107";" ';' expected
            shift(int[i], offset); 
                        ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T04_29_07.573Z";"hw3.java";"107";" not a statement
            shift(int[i], offset); 
                          ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T04_29_07.573Z";"hw3.java";"107";" ';' expected
            shift(int[i], offset); 
                                ^
5 errors
"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T05_07_27.194Z";"hw3.java";"110";" ']' expected
            shift(int[i], key); 
                      ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T05_07_27.194Z";"hw3.java";"110";" ')' expected
            shift(int[i], key); 
                       ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T05_07_27.194Z";"hw3.java";"110";" ';' expected
            shift(int[i], key); 
                        ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T05_07_27.194Z";"hw3.java";"110";" not a statement
            shift(int[i], key); 
                          ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T05_07_27.194Z";"hw3.java";"110";" ';' expected
            shift(int[i], key); 
                             ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T05_07_27.194Z";"hw3.java";"152";" not a statement
        int 
        ^
/"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T05_07_27.194Z";"hw3.java";"152";" ';' expected
        int 
           ^
7 errors
"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T20_54_45.896Z";"hw3.java";"182";" incompatible types"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T20_54_45.896Z";"hw3.java";"183";" incompatible types"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T20_54_45.896Z";"hw3.java";"184";" incompatible types"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T20_54_45.896Z";"hw3.java";"188";" bad operand types for binary operator '+'
            sumFrequency += allTheDifferences;
                         ^
  first type"
"91c12a36efaa95f40df93c9135741ad002737546";"2020-10-08T23_14_16.076Z";"hw3.java";"257";" reached end of file while parsing
}
 ^
1 error
"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T03_38_29.048Z";"hw3.java";"45";" illegal start of expression
            stringArray[i] = ;
                             ^
1 error
"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T05_33_50.822Z";"hw3.java";"13";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T05_33_50.822Z";"hw3.java";"15";" cannot find symbol
        double[] m = new double[numBodies];
                                ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T05_33_50.822Z";"hw3.java";"16";" cannot find symbol
        double[] px = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T05_33_50.822Z";"hw3.java";"17";" cannot find symbol
        double[] py = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T05_33_50.822Z";"hw3.java";"18";" cannot find symbol
        double[] vx = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T05_33_50.822Z";"hw3.java";"19";" cannot find symbol
        double[] vy = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T05_33_50.822Z";"hw3.java";"20";" cannot find symbol
        String[] img = new String[numBodies];
                                  ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T06_11_46.247Z";"hw3.java";"18";" cannot find symbol
        double[] m = new double[numBodies];
                                ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T06_11_46.247Z";"hw3.java";"19";" cannot find symbol
        double[] px = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T06_11_46.247Z";"hw3.java";"20";" cannot find symbol
        double[] py = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T06_11_46.247Z";"hw3.java";"21";" cannot find symbol
        double[] vx = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T06_11_46.247Z";"hw3.java";"22";" cannot find symbol
        double[] vy = new double[numBodies];
                                 ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T06_11_46.247Z";"hw3.java";"23";" cannot find symbol
        String[] img = new String[numBodies];
                                  ^
  symbol"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T07_14_07.653Z";"hw3.java";"137";" illegal start of expression
        */
        ^
/"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T07_14_07.653Z";"hw3.java";"137";" illegal start of expression
        */
         ^
2 errors
"
"91fbcb21c14a7530f2f3ef869853a53622ed7334";"2020-10-08T11_40_46.207Z";"hw3.java";"187";" cannot find symbol
            System.out.println(encrypt('ET TU, BRUTE', G));
                                                       ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-05T00_07_53.130Z";"hw3.java";"88";" not a statement
        hi 
        ^
/"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-05T00_07_53.130Z";"hw3.java";"88";" ';' expected
        hi 
          ^
2 errors
"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-06T05_24_49.020Z";"hw3.java";"145";" illegal start of statement
        }
        ^
1 error
"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-06T22_07_57.916Z";"hw3.java";"173";" incompatible types"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-06T22_07_57.916Z";"hw3.java";"183";" cannot find symbol
        int minDifference = scoreFrequencies(english, decrypt(message, 0));
                                             ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-06T22_07_57.916Z";"hw3.java";"187";" cannot find symbol
            if (scoreFrequencies(english, possibleDecryption) < minDifference) {
                                 ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-06T22_07_57.916Z";"hw3.java";"189";" cannot find symbol
                minDifference = scoreFrequencies(english, decrypt(message, i));
                                                 ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-06T22_07_57.916Z";"hw3.java";"212";" cannot find symbol
        findFrequencies(test);
        ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-06T23_33_03.965Z";"hw3.java";"230";" ';' expected
                String crack = crack()
                                      ^
1 error
"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-07T01_10_19.363Z";"hw3.java";"189";" cannot find symbol
        double minDifference = scoreFrequencies(getDictionaryFrequencies(filename2), findFrequencies(decryptedSymbolArray));
                                                                         ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-07T01_10_19.363Z";"hw3.java";"233";" variable key is already defined in method main(String[])
                int key = Integer.parseInt(args[2]);
                    ^
2 errors
"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-08T00_42_49.582Z";"hw3.java";"60";" cannot find symbol
        return letters;
               ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-08T01_46_42.151Z";"hw3.java";"60";" cannot find symbol
        return letters;
               ^
  symbol"
"93e7a80b207ccc4059daf3a1abba11dfa8c6c23c";"2020-10-08T04_20_33.991Z";"hw3.java";"60";" cannot find symbol
        return letters;
               ^
  symbol"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_17_25.037Z";"hw3.java";"242";" incompatible types"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_17_25.037Z";"hw3.java";"245";" incompatible types"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_17_25.037Z";"hw3.java";"247";" incompatible types"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_17_25.037Z";"hw3.java";"251";" cannot find symbol
        return message; 
               ^
  symbol"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_38_41.913Z";"hw3.java";"243";" incompatible types"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_38_41.913Z";"hw3.java";"247";" incompatible types"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_38_41.913Z";"hw3.java";"252";" cannot find symbol
            freqScore = scoreFrequencies(engFreqArr, messageFreqArr);
            ^
  symbol"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T02_38_41.913Z";"hw3.java";"258";" cannot find symbol
        return message; 
               ^
  symbol"
"958c9425eca66a75a15a62f0ba018c486934007c";"2020-10-07T03_19_16.225Z";"hw3.java";"265";" cannot find symbol
        return originalMessage;
               ^
  symbol"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-02T18_49_41.087Z";"hw3.java";"95";" incompatible types"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T03_09_20.150Z";"hw3.java";"155";" ';' expected
            totalScore += Math.abs(english[i] - currentFreqs[i])
                                                                ^
1 error
"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T16_51_39.591Z";"hw3.java";"155";" ';' expected
            totalScore += Math.abs(english[i] - currentFreqs[i])
                                                                ^
1 error
"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T19_24_06.655Z";"hw3.java";"155";" ';' expected
            totalScore += Math.abs(english[i] - currentFreqs[i])
                                                                ^
/"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T19_24_06.655Z";"hw3.java";"171";" illegal start of expression
        for (int i = 0; i < 26; i++) {
        ^
/"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T19_24_06.655Z";"hw3.java";"171";" ')' expected
        for (int i = 0; i < 26; i++) {
                  ^
/"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T19_24_06.655Z";"hw3.java";"171";" not a statement
        for (int i = 0; i < 26; i++) {
            ^
/"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T19_24_06.655Z";"hw3.java";"171";" illegal start of type
        for (int i = 0; i < 26; i++) {
                            ^
/"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T19_24_06.655Z";"hw3.java";"171";" not a statement
        for (int i = 0; i < 26; i++) {
                          ^
/"
"9626bfcdcbfdda64ce3a31191ceb88c9f8b52978";"2020-10-03T19_24_06.655Z";"hw3.java";"171";" ';' expected
        for (int i = 0; i < 26; i++) {
                                   ^
7 errors
"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T06_24_37.964Z";"hw3.java";"58";" illegal start of expression
        else if (symbol + offset > 25 && ){
                                         ^
1 error
"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"72";" illegal start of expression
        public static int unshift(int symbol, int offset) {
        ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"72";" illegal start of expression
        public static int unshift(int symbol, int offset) {
               ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"72";" ';' expected
        public static int unshift(int symbol, int offset) {
                     ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"72";" '.class' expected
        public static int unshift(int symbol, int offset) {
                                      ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"72";" ';' expected
        public static int unshift(int symbol, int offset) {
                                            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"72";" ';' expected
        public static int unshift(int symbol, int offset) {
                                                        ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" illegal start of expression
            public static String encrypt(String message, int key) {
            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" illegal start of expression
            public static String encrypt(String message, int key) {
                   ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" ';' expected
            public static String encrypt(String message, int key) {
                                ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" ')' expected
            public static String encrypt(String message, int key) {
                                               ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" illegal start of expression
            public static String encrypt(String message, int key) {
                                                       ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" ';' expected
            public static String encrypt(String message, int key) {
                                                        ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" not a statement
            public static String encrypt(String message, int key) {
                                                             ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"90";" ';' expected
            public static String encrypt(String message, int key) {
                                                                ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" illegal start of expression
            public static String decrypt(String cipher, int key) {
            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" illegal start of expression
            public static String decrypt(String cipher, int key) {
                   ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" ';' expected
            public static String decrypt(String cipher, int key) {
                                ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" ')' expected
            public static String decrypt(String cipher, int key) {
                                               ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" illegal start of expression
            public static String decrypt(String cipher, int key) {
                                                      ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" ';' expected
            public static String decrypt(String cipher, int key) {
                                                       ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" not a statement
            public static String decrypt(String cipher, int key) {
                                                            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"110";" ';' expected
            public static String decrypt(String cipher, int key) {
                                                               ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" illegal start of expression
            public static double[] getDictionaryFrequencies(String filename) {
            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" illegal start of expression
            public static double[] getDictionaryFrequencies(String filename) {
                   ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" ';' expected
            public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" illegal start of expression
            public static double[] getDictionaryFrequencies(String filename) {
                                ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" ';' expected
            public static double[] getDictionaryFrequencies(String filename) {
                                 ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" ')' expected
            public static double[] getDictionaryFrequencies(String filename) {
                                                                  ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" illegal start of expression
            public static double[] getDictionaryFrequencies(String filename) {
                                                                           ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"130";" ';' expected
            public static double[] getDictionaryFrequencies(String filename) {
                                                                            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"148";" illegal start of expression
            public static double[] findFrequencies(int[] symbols) {
            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"148";" illegal start of expression
            public static double[] findFrequencies(int[] symbols) {
                   ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"148";" ';' expected
            public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"148";" illegal start of expression
            public static double[] findFrequencies(int[] symbols) {
                                ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"148";" ';' expected
            public static double[] findFrequencies(int[] symbols) {
                                 ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"148";" '.class' expected
            public static double[] findFrequencies(int[] symbols) {
                                                         ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"148";" ';' expected
            public static double[] findFrequencies(int[] symbols) {
                                                                ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"170";" illegal start of expression
            public static double scoreFrequencies(double[] english, double[] currentFreqs) {
            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"170";" illegal start of expression
            public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                   ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"170";" ';' expected
            public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                         ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"170";" '.class' expected
            public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                           ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"170";" ';' expected
            public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                  ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"170";" ';' expected
            public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                         ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"175";" illegal start of expression
            public static void main(String[] args) {
            ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"175";" illegal start of expression
            public static void main(String[] args) {
                   ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"175";" ';' expected
            public static void main(String[] args) {
                         ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"175";" '.class' expected
            public static void main(String[] args) {
                                             ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"175";" ';' expected
            public static void main(String[] args) {
                                                 ^
/"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-08T22_53_19.144Z";"hw3.java";"195";" reached end of file while parsing
        }
         ^
49 errors
"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-09T03_58_46.796Z";"hw3.java";"197";" ';' expected
    public static String crack()
                                ^
1 error
"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-09T05_03_48.006Z";"hw3.java";"226";" ';' expected
        return cipher
                     ^
1 error
"
"96445cce79699a39851a184246b06b24c63497ff";"2020-10-09T05_20_51.868Z";"hw3.java";"211";" incompatible types"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_05_56.069Z";"hw3.java";"102";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_05_56.069Z";"hw3.java";"15";" variable str is already defined in method main(String[])
        String str = str.toUpperCase();
               ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_05_56.069Z";"hw3.java";"16";" cannot find symbol
        System.out.println(str.UpperCase());
                              ^
  symbol"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_18_59.653Z";"hw3.java";"14";" <identifier> expected
        System.out.println(str.UpperCase());
                          ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_18_59.653Z";"hw3.java";"14";" <identifier> expected
        System.out.println(str.UpperCase());
                                        ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_18_59.653Z";"hw3.java";"14";" ';' expected
        System.out.println(str.UpperCase());
                                         ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_18_59.653Z";"hw3.java";"14";" illegal start of type
        System.out.println(str.UpperCase());
                                          ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_18_59.653Z";"hw3.java";"14";" <identifier> expected
        System.out.println(str.UpperCase());
                                           ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T18_18_59.653Z";"hw3.java";"14";" ';' expected
        System.out.println(str.UpperCase());
                                            ^
6 errors
"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T19_48_33.351Z";"hw3.java";"25";" not a statement
        int  = (int) str.charAt(i) - 'A';
        ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T19_48_33.351Z";"hw3.java";"25";" ';' expected
        int  = (int) str.charAt(i) - 'A';
           ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T19_48_33.351Z";"hw3.java";"25";" not a statement
        int  = (int) str.charAt(i) - 'A';
                ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T19_48_33.351Z";"hw3.java";"25";" ';' expected
        int  = (int) str.charAt(i) - 'A';
                   ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-10T19_48_33.351Z";"hw3.java";"25";" not a statement
        int  = (int) str.charAt(i) - 'A';
                                   ^
5 errors
"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-11T01_33_16.536Z";"hw3.java";"186";" illegal start of type
}
^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-11T01_33_16.536Z";"hw3.java";"186";" reached end of file while parsing
}
 ^
/"
"96eef9f178b631ed0e867941742c25f4b9f65da7";"2020-10-11T01_33_16.536Z";"hw3.java";"187";" reached end of file while parsing
3 errors
"
"9736fd16bf30e047b764208a284acb5d921d6bc2";"2020-10-09T01_05_26.746Z";"hw3.java";"174";" incompatible types"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T02_23_34.548Z";"hw3.java";"20";" ';' expected
        str.toUpperCase()
                         ^
1 error
"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"60";" illegal start of expression
        }
        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T12_10_22.360Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
25 errors
"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"52";" illegal start of expression
        }
        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"59";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"59";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"59";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"59";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"59";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"59";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T19_11_58.033Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
31 errors
"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T20_25_46.319Z";"hw3.java";"59";" cannot find symbol
        return shift;            
               ^
  symbol"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-08T20_25_46.319Z";"hw3.java";"73";" cannot find symbol
       return unshift;
              ^
  symbol"
"986b7ca95742aa90d2aeb25dff1d6a22d497659e";"2020-10-09T00_20_04.545Z";"hw3.java";"148";" missing return statement
    }
    ^
1 error
"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"21";" variable str is already defined in method stringToSymbolArray(String)
        int str = new int[25];
            ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"21";" incompatible types"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"22";" cannot find symbol
        for (i = 0; i < str.length; i++){
             ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"22";" cannot find symbol
        for (i = 0; i < str.length; i++){
                    ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"22";" int cannot be dereferenced
        for (i = 0; i < str.length; i++){
                           ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"22";" cannot find symbol
        for (i = 0; i < str.length; i++){
                                    ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"23";" cannot find symbol
            char symbol = str.charAt(i);   
                                     ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_14_15.807Z";"hw3.java";"23";" int cannot be dereferenced
            char symbol = str.charAt(i);   
                             ^
8 errors
"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_35_30.546Z";"hw3.java";"21";" variable str is already defined in method stringToSymbolArray(String)
        double[] str = new double[25];
                 ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_35_30.546Z";"hw3.java";"23";" cannot find symbol
            char symbol = str.charAt(i);   
                             ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-04T23_35_30.546Z";"hw3.java";"104";" incompatible types"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-06T20_43_59.761Z";"hw3.java";"100";" -> expected
        for (int i = 0; i < (); i++){
                              ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-06T20_43_59.761Z";"hw3.java";"100";" ';' expected
        for (int i = 0; i < (); i++){
                               ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-06T20_43_59.761Z";"hw3.java";"100";" illegal start of expression
        for (int i = 0; i < (); i++){
                                   ^
3 errors
"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-06T23_04_09.617Z";"hw3.java";"35";" cannot find symbol
        char[] digits = new char[symbols.length()];
                                        ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-06T23_04_09.617Z";"hw3.java";"37";" cannot find symbol
            char number = (char) (str.charAt(i) + 'A');
                                  ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-06T23_04_09.617Z";"hw3.java";"41";" incompatible types"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T00_14_09.757Z";"hw3.java";"41";" incompatible types"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T00_54_33.352Z";"hw3.java";"102";" method symbolArrayToString in class Caesar cannot be applied to given types;
        int[] x = symbolArrayToString (2, 14, 13, 18, 20, 11);
                  ^
  required"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"138";" cannot find symbol
    for (i = 0; i < symbols.length; i++){
         ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"138";" cannot find symbol
    for (i = 0; i < symbols.length; i++){
                ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"138";" cannot find symbol
    for (i = 0; i < symbols.length; i++){
                                    ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"139";" cannot find symbol
        if (symbols[i] > 0 && symbols[i] < 26){
                    ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"139";" cannot find symbol
        if (symbols[i] > 0 && symbols[i] < 26){
                                      ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"140";" cannot find symbol
            dictionaryFrequencies[symbols[i]]++;
                                          ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"146";" cannot find symbol
    for (j = 0; j < dictionaryFrequencies.length; j++){
         ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"146";" cannot find symbol
    for (j = 0; j < dictionaryFrequencies.length; j++){
                ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"146";" cannot find symbol
    for (j = 0; j < dictionaryFrequencies.length; j++){
                                                  ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"147";" cannot find symbol
        dictionaryFrequencies[j] = dictionaryFrequencies[j]/counter;
                              ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"147";" cannot find symbol
        dictionaryFrequencies[j] = dictionaryFrequencies[j]/counter;
                                                         ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T20_35_42.229Z";"hw3.java";"147";" cannot find symbol
        dictionaryFrequencies[j] = dictionaryFrequencies[j]/counter;
                                                            ^
  symbol"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"180";" illegal start of expression
}
^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"182";" illegal start of expression
public static void main(String[] args) {
^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"182";" ';' expected
public static void main(String[] args) {
      ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"182";" illegal start of expression
public static void main(String[] args) {
              ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"182";" ';' expected
public static void main(String[] args) {
                       ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"182";" ';' expected
public static void main(String[] args) {
                                     ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"257";" ';' expected
        String //insert variable = Instream.readAll();
              ^
/"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-07T22_03_24.410Z";"hw3.java";"264";" reached end of file while parsing
}
 ^
8 errors
"
"9896989b45c42b1ac66b11763e914661966205d9";"2020-10-08T19_48_42.553Z";"hw3.java";"1";" illegal character"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T01_12_30.370Z";"hw3.java";"22";" cannot find symbol
        char symbol = str.charAt(i);
                                 ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T01_28_50.463Z";"hw3.java";"23";" cannot find symbol
            char symbol = s.charAt(i);
                          ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T01_28_50.463Z";"hw3.java";"24";" cannot find symbol
            if (current >= 'A' && current <= 'Z') { //ascii chart gives us numbers that match to upper case
                ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T01_28_50.463Z";"hw3.java";"24";" cannot find symbol
            if (current >= 'A' && current <= 'Z') { //ascii chart gives us numbers that match to upper case
                                  ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T01_28_50.463Z";"hw3.java";"25";" cannot find symbol
                counter++;
                ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T01_28_50.463Z";"hw3.java";"28";" cannot find symbol
        char symbol = str.charAt(i);
                                 ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T13_57_40.094Z";"hw3.java";"22";" not a statement
        int = 
        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T13_57_40.094Z";"hw3.java";"22";" ';' expected
        int = 
           ^
2 errors
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T16_15_04.300Z";"hw3.java";"23";" cannot find symbol
            char symbol = s.charAt(i);
                          ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T16_15_04.300Z";"hw3.java";"25";" cannot find symbol
                counter++;
                ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T16_15_04.300Z";"hw3.java";"28";" cannot find symbol
        return symbol;
               ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T16_38_40.990Z";"hw3.java";"24";" cannot find symbol
            char letter = s.charAt(i);
                          ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T16_38_40.990Z";"hw3.java";"29";" incompatible types"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T17_04_36.733Z";"hw3.java";"30";" incompatible types"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"29";" illegal start of expression
        return ?;
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"29";" illegal start of expression
        return ?;
                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"30";" illegal start of expression
    }
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"30";" ';' expected
    }
     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"40";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"40";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"40";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"40";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"48";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"48";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"48";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"48";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"48";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"48";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"56";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"56";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"56";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"56";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"56";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"56";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"64";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"72";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-05T20_23_21.373Z";"hw3.java";"80";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
44 errors
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T15_21_52.362Z";"hw3.java";"53";" cannot find symbol
            shift = (symbol + offset)*(mod % 26);
            ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T15_21_52.362Z";"hw3.java";"53";" cannot find symbol
            shift = (symbol + offset)*(mod % 26);
                                       ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"63";" illegal start of expression
        return ?;
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"63";" illegal start of expression
        return ?;
                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"64";" illegal start of expression
    }
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"64";" ';' expected
    }
     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"72";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"72";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"81";" illegal start of expression
        return ?;
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"81";" illegal start of expression
        return ?;
                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"82";" illegal start of expression
    }
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"82";" ';' expected
    }
     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"87";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"87";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"87";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"87";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"95";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"103";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"111";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"111";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"111";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"111";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"111";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"111";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"111";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"119";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"119";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"119";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"119";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"119";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"119";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"124";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"124";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"124";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"124";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"124";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T16_15_55.687Z";"hw3.java";"136";" reached end of file while parsing
}
 ^
55 errors
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"63";" illegal start of expression
        return ?;
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"63";" illegal start of expression
        return ?;
                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"64";" illegal start of expression
    }
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"64";" ';' expected
    }
     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"72";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"72";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"72";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"81";" illegal start of expression
        return ?;
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"81";" illegal start of expression
        return ?;
                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"82";" illegal start of expression
    }
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"82";" ';' expected
    }
     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"87";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"87";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"87";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"87";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"87";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"99";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T20_00_15.097Z";"hw3.java";"107";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
36 errors
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"66";" illegal start of expression
        return ?;
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"66";" illegal start of expression
        return ?;
                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"67";" illegal start of expression
    }
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"67";" ';' expected
    }
     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"78";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"78";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"78";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"78";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"78";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"87";" illegal start of expression
        return ?;
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"87";" illegal start of expression
        return ?;
                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"88";" illegal start of expression
    }
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"88";" ';' expected
    }
     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"99";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"99";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"99";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"99";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"99";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"99";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"99";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"114";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"122";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"130";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"130";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"130";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"130";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"130";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"130";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"130";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"138";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"138";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"138";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"138";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"138";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"138";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"143";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"143";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"143";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"143";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"143";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-07T22_00_14.374Z";"hw3.java";"157";" reached end of file while parsing
}
 ^
55 errors
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-08T14_25_27.699Z";"hw3.java";"192";" '.class' expected
       double[] ourfrequencies = findFrequencies(int[]);
                                                      ^
1 error
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-08T18_09_09.164Z";"hw3.java";"199";" '.class' expected
        double[] ourfrequencies = findFrequencies(int);
                                                     ^
1 error
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-08T19_39_19.346Z";"hw3.java";"181";" ';' expected
            allDifferences[i] = difference
                                          ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-08T19_39_19.346Z";"hw3.java";"184";" illegal start of expression
        return score;
        ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-08T19_39_19.346Z";"hw3.java";"184";" not a statement
        return score;
               ^
3 errors
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-08T21_18_53.007Z";"hw3.java";"206";" illegal start of statement
         }
         ^
1 error
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-08T22_01_05.611Z";"hw3.java";"205";" illegal start of statement
         }
         ^
1 error
"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-09T04_03_26.831Z";"hw3.java";"226";" cannot find symbol
        System.out.println(encrypt(messageE, shift));
                                             ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-09T04_03_26.831Z";"hw3.java";"230";" cannot find symbol
        System.out.println(decrypt(messageD, unshift));
                                             ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-09T16_26_17.261Z";"hw3.java";"228";" cannot find symbol
        switch (filename) {
                ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-09T16_26_17.261Z";"hw3.java";"228";" illegal start of type
        switch (filename) {
               ^
/"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-09T16_26_17.261Z";"hw3.java";"237";" cannot find symbol
                System.out.println(encrypt(messageE, shift));
                                                     ^
  symbol"
"99802559e72cbc82cce3a1f791d612faeeb5e9ef";"2020-10-09T16_26_17.261Z";"hw3.java";"242";" cannot find symbol
                System.out.println(decrypt(messageD, unshift));
                                                     ^
  symbol"
"9b6c40db29604939621b861681b84e5cca9d1938";"2020-10-07T04_27_14.875Z";"hw3.java";"80";" cannot find symbol
        return symbolArrayToString(Sam);
                                   ^
  symbol"
"9b6c40db29604939621b861681b84e5cca9d1938";"2020-10-07T17_52_03.202Z";"hw3.java";"141";" ';' expected
                System.out.println('Invalid input')
                                                   ^
/"
"9b6c40db29604939621b861681b84e5cca9d1938";"2020-10-07T17_52_03.202Z";"hw3.java";"145";" ';' expected
        String text = 'encryted_message.txt'
                                            ^
2 errors
"
"9c24a65c462341379b6429283ac93737801f9389";"2020-10-07T03_42_38.995Z";"hw3.java";"128";" ';' expected
        String message = ''
                           ^
1 error
"
"9c24a65c462341379b6429283ac93737801f9389";"2020-10-07T16_09_31.348Z";"hw3.java";"246";" variable cipher is already defined in method main(String[])
            String cipher = inStream.readString();
                   ^
1 error
"
"9e9976283823c7044a8ba42785855e9e16dc9134";"2020-10-08T07_02_31.243Z";"hw3.java";"45";" cannot find symbol
        String letter = String(symbols.length);
                        ^
  symbol"
"9e9976283823c7044a8ba42785855e9e16dc9134";"2020-10-08T07_38_51.793Z";"hw3.java";"47";" no suitable constructor found for String(char)
            String result = new String(letter);
                            ^
    constructor String.String(String) is not applicable
      (argument mismatch; char cannot be converted to String)
    constructor String.String(char[]) is not applicable
      (argument mismatch; char cannot be converted to char[])
    constructor String.String(byte[]) is not applicable
      (argument mismatch; char cannot be converted to byte[])
    constructor String.String(StringBuffer) is not applicable
      (argument mismatch; char cannot be converted to StringBuffer)
    constructor String.String(StringBuilder) is not applicable
      (argument mismatch; char cannot be converted to StringBuilder)
/"
"9e9976283823c7044a8ba42785855e9e16dc9134";"2020-10-08T07_38_51.793Z";"hw3.java";"49";" cannot find symbol
        return result;
               ^
  symbol"
"9e9976283823c7044a8ba42785855e9e16dc9134";"2020-10-08T22_57_50.800Z";"hw3.java";"136";" missing return statement
    }
    ^
1 error
"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T19_15_36.238Z";"hw3.java";"21";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T19_15_36.238Z";"hw3.java";"35";" ';' expected
        str = str.toUpperCase()
                               ^
2 errors
"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T20_53_53.681Z";"hw3.java";"21";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T20_53_53.681Z";"hw3.java";"35";" ';' expected
        str = str.toUpperCase()
                               ^
2 errors
"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"41";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"41";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"41";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"41";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"41";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"49";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"49";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"49";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"49";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"49";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"49";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"57";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"57";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"57";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"57";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"57";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"57";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"65";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"73";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T21_23_44.616Z";"hw3.java";"81";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
41 errors
"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-10T22_24_45.158Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < s.length; i++) {
                            ^
  symbol"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-11T02_51_47.811Z";"hw3.java";"42";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-11T02_51_47.811Z";"hw3.java";"120";" cannot find symbol
        symbolArrayToString(stringToSymbol);
                            ^
  symbol"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-11T03_53_03.139Z";"hw3.java";"43";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-11T03_53_03.139Z";"hw3.java";"118";" incompatible types"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-11T03_53_03.139Z";"hw3.java";"127";" incompatible types"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-11T03_53_03.139Z";"hw3.java";"132";" incompatible types"
"a0c979eb2ed3dd7ed0809650ab784850de9afadc";"2020-10-11T03_53_03.139Z";"hw3.java";"147";" cannot find symbol
            System.out.println(crack(words));
                                     ^
  symbol"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T02_14_57.971Z";"hw3.java";"22";" incompatible types"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T04_56_21.114Z";"hw3.java";"50";" '.class' expected
			char x = str1.charAt(i);
			     ^
/"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T04_56_21.114Z";"hw3.java";"50";" illegal start of expression
			char x = str1.charAt(i);
			       ^
/"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T04_56_21.114Z";"hw3.java";"50";" ';' expected
			char x = str1.charAt(i);
			             ^
3 errors
"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T05_22_35.051Z";"hw3.java";"51";" variable str1 is already defined in method symbolArrayToString(int[])
			String str1 = y1.toString(y1);
			       ^
/"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T05_22_35.051Z";"hw3.java";"51";" method toString in class Object cannot be applied to given types;
			String str1 = y1.toString(y1);
			                ^
  required"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T07_32_49.273Z";"hw3.java";"44";" variable symbols is already defined in method symbolArrayToString(int[])
	    String symbols = new String();
	           ^
1 error
"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T08_09_02.250Z";"hw3.java";"46";" array dimension missing
	    char symbols = new char[];
	                             ^
1 error
"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T08_29_00.605Z";"hw3.java";"46";" array dimension missing
	    char symbols = new char[];
	                             ^
1 error
"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T09_25_56.771Z";"hw3.java";"46";" variable symbols is already defined in method symbolArrayToString(int[])
	    char[] symbols = new char[26];
	           ^
/"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T09_25_56.771Z";"hw3.java";"51";" cannot find symbol
		for (int i = 0; i < symbols.length(); i++){
		                           ^
  symbol"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T09_25_56.771Z";"hw3.java";"53";" variable symbols is already defined in method symbolArrayToString(int[])
			char symbols = (char)(z + 'A');
			     ^
/"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-08T09_25_56.771Z";"hw3.java";"59";" incompatible types"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-09T02_46_34.571Z";"hw3.java";"66";" unreachable statement
        ;
        ^
1 error
"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-09T03_57_21.549Z";"hw3.java";"49";" missing return statement
    }
    ^
/"
"a0cef07197a2d3435d6f57d5e90ea32e0e18d44e";"2020-10-09T03_57_21.549Z";"hw3.java";"66";" unreachable statement
        ;
        ^
2 errors
"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"42";" ']' expected
            char[i] = (char) (symbols[i] + 'A');
                 ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"42";" ';' expected
            char[i] = (char) (symbols[i] + 'A');
                  ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"42";" not a statement
            char[i] = (char) (symbols[i] + 'A');
                       ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"42";" ';' expected
            char[i] = (char) (symbols[i] + 'A');
                           ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"42";" not a statement
            char[i] = (char) (symbols[i] + 'A');
                                         ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"42";" ';' expected
            char[i] = (char) (symbols[i] + 'A');
                                              ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"43";" ']' expected
            String addLetter = Character.toString(char[i]);
                                                       ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"43";" ')' expected
            String addLetter = Character.toString(char[i]);
                                                        ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T11_35_24.401Z";"hw3.java";"43";" ';' expected
            String addLetter = Character.toString(char[i]);
                                                         ^
9 errors
"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T14_36_48.175Z";"hw3.java";"117";" not a statement
        return null;?难
                    ^
/"
"a10b795c0a8f5add8833833866721769c75aa371";"2020-10-07T14_36_48.175Z";"hw3.java";"117";" ';' expected
        return null;?难
                      ^
2 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T05_14_22.525Z";"hw3.java";"21";" not a statement
        for(i)
            ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T05_14_22.525Z";"hw3.java";"21";" ';' expected
        for(i)
             ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T05_14_22.525Z";"hw3.java";"21";" ';' expected
        for(i)
              ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T05_14_22.525Z";"hw3.java";"22";" not a statement
        return null;
               ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T05_14_22.525Z";"hw3.java";"22";" ')' expected
        return null;
                   ^
5 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T12_53_51.555Z";"hw3.java";"21";" ';' expected
        for(i = 0; i < stringToSymbolArray)
                                          ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T13_37_08.860Z";"hw3.java";"21";" cannot find symbol
        for( int i = 0; i < stringToSymbolArray; i++) {
                            ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T14_44_08.106Z";"hw3.java";"21";" cannot find symbol
        for( int i = 0; i < str.length; i++) {
                               ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T14_44_08.106Z";"hw3.java";"41";" bad operand types for binary operator '<'
        for( int i = 0; i < symbols; i++) {
                          ^
  first type"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T14_44_08.106Z";"hw3.java";"42";" cannot find symbol
            str = str.toUpperCase();
            ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T14_44_08.106Z";"hw3.java";"42";" cannot find symbol
            str = str.toUpperCase();
                  ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T14_44_08.106Z";"hw3.java";"43";" cannot find symbol
            str.charAt(i);
            ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-05T14_44_08.106Z";"hw3.java";"44";" cannot find symbol
            char letter = str.charAt(i);
                          ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-06T23_22_02.308Z";"hw3.java";"21";" variable str is already defined in method stringToSymbolArray(String)
        String str = 'CONSUL';
               ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" illegal start of expression
        public static int[] stringToSymbolArray(String str){
        ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" illegal start of expression
        public static int[] stringToSymbolArray(String str){
               ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" ';' expected
        public static int[] stringToSymbolArray(String str){
                     ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" illegal start of expression
        public static int[] stringToSymbolArray(String str){
                         ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" ';' expected
        public static int[] stringToSymbolArray(String str){
                          ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" ')' expected
        public static int[] stringToSymbolArray(String str){
                                                      ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" illegal start of expression
        public static int[] stringToSymbolArray(String str){
                                                          ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"11";" ';' expected
        public static int[] stringToSymbolArray(String str){
                                                           ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"28";" class, interface, or enum expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"31";" class, interface, or enum expected
        for( int i = 0; i < str.length(); i++) {
        ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"31";" class, interface, or enum expected
        for( int i = 0; i < str.length(); i++) {
                        ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"31";" class, interface, or enum expected
        for( int i = 0; i < str.length(); i++) {
                                          ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"33";" class, interface, or enum expected
            char letter = str.charAt(i);
            ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"34";" class, interface, or enum expected
            int ourSymbolRepresentation = (int) letter - 'A';
            ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"35";" class, interface, or enum expected
            newArr[i] = ourSymbolRepresentation;
            ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"36";" class, interface, or enum expected
           System.out.println(newArr[i]);
           ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"37";" class, interface, or enum expected
        }
        ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_07_54.235Z";"hw3.java";"40";" class, interface, or enum expected
    }
    ^
18 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T16_41_22.705Z";"hw3.java";"33";" missing return statement
    }
    ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T19_32_10.600Z";"hw3.java";"43";" ';' expected
        for ( int i = 0; i < symbolsArr.length )
                                              ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T19_58_45.454Z";"hw3.java";"44";" not a statement
            symbols[i]
                   ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T19_58_45.454Z";"hw3.java";"44";" ';' expected
            symbols[i]
                      ^
2 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T20_23_38.064Z";"hw3.java";"46";" ';' expected
            char letter+=
                       ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T23_58_52.736Z";"hw3.java";"53";" '(' expected
        if symbol
          ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-07T23_58_52.736Z";"hw3.java";"53";" ')' expected
        if symbol
                 ^
2 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T00_34_47.337Z";"hw3.java";"55";" missing return statement
    }
    ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T00_58_04.132Z";"hw3.java";"54";" ';' expected
            symbol = symbol * 1
                               ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T15_07_32.955Z";"hw3.java";"90";" cannot find symbol
        for(int i = 0; i < message.length; i++){
                                  ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T15_07_32.955Z";"hw3.java";"93";" incompatible types"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T15_25_20.343Z";"hw3.java";"88";" cannot find symbol
        int[] encryptedArr = new int[messageToSymbol.length()];
                                                    ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T15_25_20.343Z";"hw3.java";"89";" cannot find symbol
        for(int i = 0; i < messageToSymbol.length(); i++){
                                          ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T15_25_20.343Z";"hw3.java";"93";" incompatible types"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_15_47.479Z";"hw3.java";"102";" ';' expected
       int[] decryptedArr = new int[cipher.length]
                                                  ^
1 error
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"102";" ';' expected
       int[] decryptedArr = new int[encrypt.length]
                                                   ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" not a statement
           for( int = 0, i < encrypt.length(); i++){
                ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" ';' expected
           for( int = 0, i < encrypt.length(); i++){
                   ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" illegal start of expression
           for( int = 0, i < encrypt.length(); i++){
                    ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" ';' expected
           for( int = 0, i < encrypt.length(); i++){
                     ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" illegal start of expression
           for( int = 0, i < encrypt.length(); i++){
                       ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" ')' expected
           for( int = 0, i < encrypt.length(); i++){
                        ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" > expected
           for( int = 0, i < encrypt.length(); i++){
                                           ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" ';' expected
           for( int = 0, i < encrypt.length(); i++){
                                            ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"103";" ';' expected
           for( int = 0, i < encrypt.length(); i++){
                                                  ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"105";" '.class' expected
               decryptedArr[i] = unshift(letter, int key)
                                                     ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T20_43_38.887Z";"hw3.java";"105";" ';' expected
               decryptedArr[i] = unshift(letter, int key)
                                                        ^
12 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" not a statement
           for( int = 0; i < encrypt.length(); i++){
                ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" ';' expected
           for( int = 0; i < encrypt.length(); i++){
                   ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" illegal start of expression
           for( int = 0; i < encrypt.length(); i++){
                    ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" ';' expected
           for( int = 0; i < encrypt.length(); i++){
                     ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" illegal start of expression
           for( int = 0; i < encrypt.length(); i++){
                       ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" ')' expected
           for( int = 0; i < encrypt.length(); i++){
                        ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" > expected
           for( int = 0; i < encrypt.length(); i++){
                                           ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" ';' expected
           for( int = 0; i < encrypt.length(); i++){
                                            ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"104";" ';' expected
           for( int = 0; i < encrypt.length(); i++){
                                                  ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"106";" '.class' expected
               decryptedArr[i] = unshift(letter, int key)
                                                     ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_10_01.860Z";"hw3.java";"106";" ';' expected
               decryptedArr[i] = unshift(letter, int key)
                                                        ^
11 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" not a statement
           for( int = 0; i < cipher.length(); i++){
                ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" ';' expected
           for( int = 0; i < cipher.length(); i++){
                   ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" illegal start of expression
           for( int = 0; i < cipher.length(); i++){
                    ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" ';' expected
           for( int = 0; i < cipher.length(); i++){
                     ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" illegal start of expression
           for( int = 0; i < cipher.length(); i++){
                       ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" ')' expected
           for( int = 0; i < cipher.length(); i++){
                        ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" > expected
           for( int = 0; i < cipher.length(); i++){
                                          ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" ';' expected
           for( int = 0; i < cipher.length(); i++){
                                           ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"106";" ';' expected
           for( int = 0; i < cipher.length(); i++){
                                                 ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"108";" '.class' expected
               decryptedArr[i] = unshift(letter, int key)
                                                     ^
/"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_38_54.119Z";"hw3.java";"108";" ';' expected
               decryptedArr[i] = unshift(letter, int key)
                                                        ^
11 errors
"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_52_30.950Z";"hw3.java";"90";" cannot find symbol
        int[] encryptedArr = new int[messageToSymbol.length()];
                                                    ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_52_30.950Z";"hw3.java";"91";" cannot find symbol
        for(int i = 0; i < messageToSymbol.length(); i++){
                                          ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_52_30.950Z";"hw3.java";"95";" cannot find symbol
        encryptedString = symbolArrayToString(encryptedArr);
        ^
  symbol"
"a2ed97ccae0bb30d89307c34d163ec2761a8eacd";"2020-10-08T21_52_30.950Z";"hw3.java";"96";" cannot find symbol
        return encryptedString;
               ^
  symbol"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T02_19_20.529Z";"hw3.java";"106";" method main(String[]) is already defined in class Caesar
    public static void main(String[] args) {
                       ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T02_19_20.529Z";"hw3.java";"12";" cannot find symbol
        for (int i = 0; i < stringToSymbolArray.length; i++) {
                            ^
  symbol"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T02_19_20.529Z";"hw3.java";"13";" cannot find symbol
            System.out.println(stringToSymbolArray[i]);
                               ^
  symbol"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T02_19_20.529Z";"hw3.java";"28";" cannot find symbol
            stringToSymbolArray[i] = (int) str.charAt(i);
            ^
  symbol"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T02_19_20.529Z";"hw3.java";"34";" cannot find symbol
        return stringToSymbolArray;
               ^
  symbol"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" illegal start of expression
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                  ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" not a statement
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" ';' expected
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" not a statement
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" ';' expected
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" not a statement
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" ';' expected
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" not a statement
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" ';' expected
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" not a statement
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" ';' expected
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" not a statement
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"252";" ';' expected
        foundFrequenciesLetters = {countA, countB, countC, countD, countE, countF, 
                                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" not a statement
                                   countG, countH, countI, countJ, countK, countL, 
                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" ';' expected
                                   countG, countH, countI, countJ, countK, countL, 
                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" not a statement
                                   countG, countH, countI, countJ, countK, countL, 
                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" ';' expected
                                   countG, countH, countI, countJ, countK, countL, 
                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" not a statement
                                   countG, countH, countI, countJ, countK, countL, 
                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" ';' expected
                                   countG, countH, countI, countJ, countK, countL, 
                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" not a statement
                                   countG, countH, countI, countJ, countK, countL, 
                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" ';' expected
                                   countG, countH, countI, countJ, countK, countL, 
                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" not a statement
                                   countG, countH, countI, countJ, countK, countL, 
                                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" ';' expected
                                   countG, countH, countI, countJ, countK, countL, 
                                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" not a statement
                                   countG, countH, countI, countJ, countK, countL, 
                                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"253";" ';' expected
                                   countG, countH, countI, countJ, countK, countL, 
                                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" not a statement
                                   countM, countN, countO, countP, countQ, countR, 
                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" ';' expected
                                   countM, countN, countO, countP, countQ, countR, 
                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" not a statement
                                   countM, countN, countO, countP, countQ, countR, 
                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" ';' expected
                                   countM, countN, countO, countP, countQ, countR, 
                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" not a statement
                                   countM, countN, countO, countP, countQ, countR, 
                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" ';' expected
                                   countM, countN, countO, countP, countQ, countR, 
                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" not a statement
                                   countM, countN, countO, countP, countQ, countR, 
                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" ';' expected
                                   countM, countN, countO, countP, countQ, countR, 
                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" not a statement
                                   countM, countN, countO, countP, countQ, countR, 
                                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" ';' expected
                                   countM, countN, countO, countP, countQ, countR, 
                                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" not a statement
                                   countM, countN, countO, countP, countQ, countR, 
                                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"254";" ';' expected
                                   countM, countN, countO, countP, countQ, countR, 
                                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" not a statement
                                   countS, countT, countU, countV, countW, countX, 
                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" ';' expected
                                   countS, countT, countU, countV, countW, countX, 
                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" not a statement
                                   countS, countT, countU, countV, countW, countX, 
                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" ';' expected
                                   countS, countT, countU, countV, countW, countX, 
                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" not a statement
                                   countS, countT, countU, countV, countW, countX, 
                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" ';' expected
                                   countS, countT, countU, countV, countW, countX, 
                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" not a statement
                                   countS, countT, countU, countV, countW, countX, 
                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" ';' expected
                                   countS, countT, countU, countV, countW, countX, 
                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" not a statement
                                   countS, countT, countU, countV, countW, countX, 
                                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" ';' expected
                                   countS, countT, countU, countV, countW, countX, 
                                                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" not a statement
                                   countS, countT, countU, countV, countW, countX, 
                                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"255";" ';' expected
                                   countS, countT, countU, countV, countW, countX, 
                                                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"256";" not a statement
                                   countY, countX}
                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"256";" ';' expected
                                   countY, countX}
                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"256";" not a statement
                                   countY, countX}
                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"256";" ';' expected
                                   countY, countX}
                                                 ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"259";" illegal start of type
        for (int i = 0; i < foundFrequenciesLetters; i++) {
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"259";" ')' expected
        for (int i = 0; i < foundFrequenciesLetters; i++) {
                  ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"259";" illegal start of type
        for (int i = 0; i < foundFrequenciesLetters; i++) {
                     ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"259";" <identifier> expected
        for (int i = 0; i < foundFrequenciesLetters; i++) {
                      ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"259";" ';' expected
        for (int i = 0; i < foundFrequenciesLetters; i++) {
                       ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"259";" > expected
        for (int i = 0; i < foundFrequenciesLetters; i++) {
                                                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"259";" '(' expected
        for (int i = 0; i < foundFrequenciesLetters; i++) {
                                                      ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"262";" illegal start of type
        return dividedFoundFrequencies;
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"262";" ';' expected
        return dividedFoundFrequencies;
              ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"268";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"271";" class, interface, or enum expected
    }
    ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"273";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"276";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"277";" class, interface, or enum expected
        String stringCipherKey = args[2];
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"278";" class, interface, or enum expected
        char characterCipherKey = stringCipherKey.charAt(0);
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"279";" class, interface, or enum expected
        int cipherKey = (int) characterCipherKey - 'A';
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"282";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"283";" class, interface, or enum expected
        String file = inStream.readAll();
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"287";" class, interface, or enum expected
        if (encryptOrDecrypt.equals('encrypt')) {
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"289";" class, interface, or enum expected
            System.out.println(commandEncryption);
            ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"290";" class, interface, or enum expected
        }
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"293";" class, interface, or enum expected
            System.out.println(commandDecryption);
            ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"295";" class, interface, or enum expected
        }
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"301";" class, interface, or enum expected
        In inStream = new In(cipher.txt);
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"302";" class, interface, or enum expected
        String frequenciesInFile = inStream.readAll();
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"303";" class, interface, or enum expected
        double[] fileFrequencies = findFrequencies(frequencyFile);
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"306";" class, interface, or enum expected
        double[] testFrequencies = findFrequencies('The quick black fox jumped over the fat lazy dog')
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"307";" class, interface, or enum expected
            for (int i = 0; i < test.length; i++) {
                            ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"307";" class, interface, or enum expected
            for (int i = 0; i < test.length; i++) {
                                             ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T10_43_10.744Z";"hw3.java";"349";" class, interface, or enum expected
    }
    ^
83 errors
"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2020-10-08T21_38_23.042Z";"hw3.java";"219";" incompatible types"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"212";" illegal start of type
    1. function that counts gives the frequency of a letter in a phrase
    ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"212";" ';' expected
    1. function that counts gives the frequency of a letter in a phrase
      ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"212";" ';' expected
    1. function that counts gives the frequency of a letter in a phrase
                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"212";" ';' expected
    1. function that counts gives the frequency of a letter in a phrase
                                     ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"212";" ';' expected
    1. function that counts gives the frequency of a letter in a phrase
                                                  ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"212";" ';' expected
    1. function that counts gives the frequency of a letter in a phrase
                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"212";" ';' expected
    1. function that counts gives the frequency of a letter in a phrase
                                                                ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" ';' expected
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" invalid method declaration; return type required
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" <identifier> expected
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" ';' expected
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" illegal start of type
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" <identifier> expected
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" ';' expected
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" illegal start of type
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"214";" ';' expected
        def freq (x"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"217";" ';' expected
        def sum_freq (y"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"217";" invalid method declaration; return type required
        def sum_freq (y"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"217";" <identifier> expected
        def sum_freq (y"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"217";" ';' expected
        def sum_freq (y"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"217";" illegal start of type
        def sum_freq (y"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"217";" <identifier> expected
        def sum_freq (y"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"217";" ';' expected
        def sum_freq (y"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"218";" illegal start of type
            counter = 0;
                    ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"218";" <identifier> expected
            counter = 0;
                     ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" illegal start of type
        for (int i = 0; i < y.length(); i++)
        ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" ')' expected
        for (int i = 0; i < y.length(); i++)
                  ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" illegal start of type
        for (int i = 0; i < y.length(); i++)
                     ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" <identifier> expected
        for (int i = 0; i < y.length(); i++)
                      ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" ';' expected
        for (int i = 0; i < y.length(); i++)
                       ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" > expected
        for (int i = 0; i < y.length(); i++)
                             ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" <identifier> expected
        for (int i = 0; i < y.length(); i++)
                                         ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"219";" illegal start of type
        for (int i = 0; i < y.length(); i++)
                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" ';' expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                   ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" <identifier> expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                               ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" ')' expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                             ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" <identifier> expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                               ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" <identifier> expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                                  ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" invalid method declaration; return type required
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                                     ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" <identifier> expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                                                          ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" ';' expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                                                           ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" illegal start of type
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                                                            ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" <identifier> expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                                                             ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"220";" ';' expected
            counter += Math.abs(freq y.charAt(i) y - letter_count(y.charAt(i)))
                                                                              ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"222";" illegal start of type
            return counter
            ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"222";" ';' expected
            return counter
                          ^
/"
"a301279665527c8fa4add8ad5a7d04c50fc2ea12";"2021-03-01T02_08_21.389Z";"hw3.java";"224";" <identifier> expected
      min 
         ^
47 errors
"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"219";" ';' expected
                    LetterAmount++
                                  ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"222";" ';' expected
        int timesAppeared = 0
                             ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"227";" illegal start of expression
            if()
               ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"229";" illegal start of statement
            }
            ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"234";" illegal start of type
        return null;
        ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"234";" ';' expected
        return null;
              ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"240";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"243";" class, interface, or enum expected
    }
    ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"245";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"249";" class, interface, or enum expected
        String fileString = inStream.readAll();
        ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"254";" class, interface, or enum expected
        String stringFile = args[1];
        ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"259";" class, interface, or enum expected
        char CharKey = args[2].charAt(0);
        ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"260";" class, interface, or enum expected
        int IntKey = (int)(CharKey - 'A');
        ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"262";" class, interface, or enum expected
        switch(args[0]){
        ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"266";" class, interface, or enum expected
            break;
            ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"268";" class, interface, or enum expected
            case 'decrypt'"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"270";" class, interface, or enum expected
            break;
            ^
/"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T07_06_41.035Z";"hw3.java";"271";" class, interface, or enum expected
       }
       ^
18 errors
"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-08T11_35_33.214Z";"hw3.java";"277";" cannot find symbol
        double[] currentFreq = getDictionaryFrequenciesArr(fileName);
                               ^
  symbol"
"a4e9bd7a39a4a3fa3ba6fa3d9fcc4226d3d63a46";"2020-10-09T02_14_16.007Z";"hw3.java";"1";" class, interface, or enum expected
 g/**
 ^
1 error
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T01_04_35.507Z";"hw3.java";"25";" cannot find symbol
        int[] fillArray = new int[str.length];
                                     ^
  symbol"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T02_52_30.305Z";"hw3.java";"24";" cannot find symbol
        int[] fillArray = new int[str.length];
                                     ^
  symbol"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T04_19_42.885Z";"hw3.java";"38";" '.class' expected
            int charRepresentation = (char) c + 'A';
                ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T04_19_42.885Z";"hw3.java";"38";" illegal start of expression
            int charRepresentation = (char) c + 'A';
                                   ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T04_19_42.885Z";"hw3.java";"38";" ';' expected
            int charRepresentation = (char) c + 'A';
                                    ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T04_19_42.885Z";"hw3.java";"38";" not a statement
            int charRepresentation = (char) c + 'A';
                                      ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T04_19_42.885Z";"hw3.java";"38";" ';' expected
            int charRepresentation = (char) c + 'A';
                                          ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T04_19_42.885Z";"hw3.java";"38";" not a statement
            int charRepresentation = (char) c + 'A';
                                              ^
6 errors
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T16_51_39.919Z";"hw3.java";"34";" '.class' expected
        int[] fillSymArray = new int[symbols.length()];
              ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T16_51_39.919Z";"hw3.java";"34";" illegal start of expression
        int[] fillSymArray = new int[symbols.length()];
                           ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T16_51_39.919Z";"hw3.java";"34";" ';' expected
        int[] fillSymArray = new int[symbols.length()];
                            ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T16_51_39.919Z";"hw3.java";"34";" ']' expected
        int[] fillSymArray = new int[symbols.length()];
                                     ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T16_51_39.919Z";"hw3.java";"34";" ';' expected
        int[] fillSymArray = new int[symbols.length()];
                                            ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T16_51_39.919Z";"hw3.java";"34";" ';' expected
        int[] fillSymArray = new int[symbols.length()];
                                                     ^
6 errors
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T20_28_34.410Z";"hw3.java";"116";" method symbolArrayToString in class Caesar cannot be applied to given types;
        symbolArrayToString(2, 14, 13, 18, 20, 11);
        ^
  required"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T20_59_12.084Z";"hw3.java";"116";" illegal start of expression
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                              ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T20_59_12.084Z";"hw3.java";"116";" not a statement
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                               ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T20_59_12.084Z";"hw3.java";"116";" ';' expected
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                                ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T20_59_12.084Z";"hw3.java";"123";" class, interface, or enum expected
}
^
4 errors
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T21_49_23.591Z";"hw3.java";"55";" illegal start of expression
        if () {
            ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T21_49_23.591Z";"hw3.java";"115";" illegal start of expression
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                              ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T21_49_23.591Z";"hw3.java";"115";" not a statement
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                               ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T21_49_23.591Z";"hw3.java";"115";" ';' expected
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                                ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T21_49_23.591Z";"hw3.java";"122";" class, interface, or enum expected
}
^
5 errors
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T22_32_27.210Z";"hw3.java";"55";" illegal start of expression
        if () {
            ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T22_32_27.210Z";"hw3.java";"109";" illegal start of expression
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                              ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T22_32_27.210Z";"hw3.java";"109";" not a statement
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                               ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T22_32_27.210Z";"hw3.java";"109";" ';' expected
        symbolArrayToString = {2, 14, 13, 18, 20, 11};
                                ^
/"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-07T22_32_27.210Z";"hw3.java";"116";" class, interface, or enum expected
}
^
5 errors
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-08T00_59_34.588Z";"hw3.java";"46";" incompatible types"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-08T02_05_31.734Z";"hw3.java";"46";" incompatible types"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-08T17_03_31.966Z";"hw3.java";"162";" incompatible types"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-08T18_32_29.279Z";"hw3.java";"187";" ';' expected
    public static String crack()
                                ^
1 error
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-08T19_28_01.827Z";"hw3.java";"187";" ';' expected
    public static String crack()
                                ^
1 error
"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-08T20_25_40.094Z";"hw3.java";"202";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"a89be8df0626f0b9957032dd58fdeab74412a8b5";"2020-10-08T22_01_39.526Z";"hw3.java";"244";" incompatible types"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T01_46_13.516Z";"hw3.java";"29";" cannot find symbol
        str.charAt(i);
                   ^
  symbol"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"25";" illegal start of type
        return null;
        ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"25";" ';' expected
        return null;
              ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"36";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"39";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"47";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"50";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"58";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"61";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"69";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"72";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"80";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"83";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"91";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"94";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"102";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"105";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"113";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"116";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T02_20_46.840Z";"hw3.java";"118";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
19 errors
"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"31";" class, interface, or enum expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"33";" class, interface, or enum expected
        for (int i = 0; i < 0; i++) {
        ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"33";" class, interface, or enum expected
        for (int i = 0; i < 0; i++) {
                        ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"33";" class, interface, or enum expected
        for (int i = 0; i < 0; i++) {
                               ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"35";" class, interface, or enum expected
            int asciiRepresentation = (int) letter;
            ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"36";" class, interface, or enum expected
            int encoding = (letter + str.charAt(i)) % 26; 
            ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"37";" class, interface, or enum expected
            int ourSymbolRepresentation = (int) letter - 'A'; 
            ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"38";" class, interface, or enum expected
        }
        ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"51";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"54";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"62";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"65";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"73";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"76";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"84";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"87";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"95";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"98";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"106";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"117";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"120";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"128";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T04_16_51.372Z";"hw3.java";"131";" class, interface, or enum expected
    }                      
    ^
24 errors
"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"31";" class, interface, or enum expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"33";" class, interface, or enum expected
        t
        ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"35";" class, interface, or enum expected
            int asciiRepresentation = (int) letter;
            ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"36";" class, interface, or enum expected
            int encoding = (letter + str.charAt(i)) % 26; 
            ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"37";" class, interface, or enum expected
            int ourSymbolRepresentation = (int) letter - 'A'; 
            ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"40";" class, interface, or enum expected
        return str;
        ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"51";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"54";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"62";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"65";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"73";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"76";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"84";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"87";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"95";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"98";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"106";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"109";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"117";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"120";" class, interface, or enum expected
    }
    ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"128";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T08_00_25.230Z";"hw3.java";"131";" class, interface, or enum expected
    }                      
    ^
22 errors
"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T09_56_14.791Z";"hw3.java";"42";" cannot find symbol
  return stringToSymbolArray; 
         ^
  symbol"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T09_56_14.791Z";"hw3.java";"59";" cannot find symbol
   return symbolArrayToString; 
          ^
  symbol"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T18_15_17.088Z";"hw3.java";"42";" cannot find symbol
  return our; 
         ^
  symbol"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T21_07_31.506Z";"hw3.java";"71";" variable symbol is already defined in method shift(int,int)
            int symbol = (symbol + symbols) % 26; 
                ^
/"
"a89caf8c7abe4da1a5f1ff069ce7e210c9a54df4";"2020-10-08T21_07_31.506Z";"hw3.java";"71";" cannot find symbol
            int symbol = (symbol + symbols) % 26; 
                                   ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T04_25_46.974Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T04_25_46.974Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T04_25_46.974Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T04_25_46.974Z";"hw3.java";"24";" cannot find symbol
            str.charAt(i) = (int) str.charAt(i) - 'A';
                       ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T04_25_46.974Z";"hw3.java";"24";" cannot find symbol
            str.charAt(i) = (int) str.charAt(i) - 'A';
                                             ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T04_25_46.974Z";"hw3.java";"25";" cannot find symbol
            System.out.println(str.charAt(i));
                                          ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"24";" cannot find symbol
            x[i] = (int) str.charAt(i) - 'A';
              ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"24";" cannot find symbol
            x[i] = (int) str.charAt(i) - 'A';
                                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"25";" cannot find symbol
            System.out.println(x[i]);
                                 ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
             ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                                        ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"42";" cannot find symbol
            y[i] = (char) (symbols[i] + 'A');
              ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"42";" cannot find symbol
            y[i] = (char) (symbols[i] + 'A');
                                   ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-05T05_04_35.683Z";"hw3.java";"43";" cannot find symbol
            str = str + y[i];
                          ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
             ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"23";" cannot find symbol
        for (i = 0; i < str.length(); i++) {
                                      ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"24";" cannot find symbol
            x[i] = (int) str.charAt(i) - 'A';
              ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"24";" cannot find symbol
            x[i] = (int) str.charAt(i) - 'A';
                                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"25";" cannot find symbol
            System.out.println(x[i]);
                                 ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
             ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"41";" cannot find symbol
        for (i = 0; i < symbols.length; i++) {
                                        ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"42";" cannot find symbol
            y[i] = (char) (symbols[i] + 'A');
              ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"42";" cannot find symbol
            y[i] = (char) (symbols[i] + 'A');
                                   ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-07T19_03_11.029Z";"hw3.java";"43";" cannot find symbol
            str = str + y[i];
                          ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-08T22_49_40.188Z";"hw3.java";"71";" missing return statement
    }
    ^
/"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-08T22_49_40.188Z";"hw3.java";"60";" variable shiftedSymbol might not have been initialized
        return shiftedSymbol;
               ^
2 errors
"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T01_08_26.595Z";"hw3.java";"153";" cannot find symbol
        if (args[0] = encrypt) {
                      ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T01_08_26.595Z";"hw3.java";"153";" incompatible types"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T01_08_26.595Z";"hw3.java";"156";" cannot find symbol
        else if (args[0] = decrypt) {
                           ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T01_08_26.595Z";"hw3.java";"156";" incompatible types"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T03_15_10.932Z";"hw3.java";"141";" illegal start of statement
        }
        ^
1 error
"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T03_42_14.157Z";"hw3.java";"158";" incompatible types"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"129";" cannot find symbol
            getDictionaryFrequencies[i] = inStream.readDouble();
            ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"131";" cannot find symbol
        return getDictionaryFrequencies;
               ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"139";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
             ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"139";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                    ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"139";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                               ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"139";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                                          ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"140";" cannot find symbol
            for (j = 0; j < 26; j++) {
                 ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"140";" cannot find symbol
            for (j = 0; j < 26; j++) {
                        ^
  symbol"
"a96f6211648f9ecbd94850e4271c8cfe29f7ddfb";"2020-10-09T04_13_53.052Z";"hw3.java";"140";" cannot find symbol
            for (j = 0; j < 26; j++) {
                                ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-04T23_18_22.778Z";"hw3.java";"25";" cannot find symbol
        int intArray [] = new int [str.length];
                                      ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-04T23_18_22.778Z";"hw3.java";"26";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-04T23_57_58.272Z";"hw3.java";"25";" cannot find symbol
        int intArray [] = new int [str.length];
                                      ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-04T23_57_58.272Z";"hw3.java";"26";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-05T02_03_59.259Z";"hw3.java";"27";" cannot find symbol
            char[] cur = str.charAt[i];
                            ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-05T04_47_52.964Z";"hw3.java";"76";" cannot find symbol
        return newPos;
               ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-05T04_47_52.964Z";"hw3.java";"87";" cannot find symbol
        return oldPos;
               ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-05T21_23_08.762Z";"hw3.java";"82";" 'else' without 'if'
        else{
        ^
1 error
"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" illegal character"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                         ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" not a statement
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                            ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                              ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" illegal character"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" illegal start of expression
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                       ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" not a statement
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                     ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                        ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T13_51_04.564Z";"hw3.java";"18";" illegal start of expression
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                          ^
9 errors
"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" illegal character"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                         ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" not a statement
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                            ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                              ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" illegal character"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" illegal start of expression
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                       ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" not a statement
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                     ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                        ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T16_35_22.401Z";"hw3.java";"18";" illegal start of expression
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                          ^
9 errors
"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" illegal character"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                         ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" not a statement
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                            ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                              ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" illegal character"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" illegal start of expression
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                       ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" not a statement
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                     ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" ';' expected
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                        ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-06T17_07_40.618Z";"hw3.java";"18";" illegal start of expression
        String realEncryption = encrypt(“ET TU, BRUTE?”, 6);
                                                          ^
9 errors
"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-07T00_32_23.614Z";"hw3.java";"14";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-07T21_09_28.628Z";"hw3.java";"220";" ';' expected
        double sumScoredFreqCounter
                                   ^
/"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-07T21_09_28.628Z";"hw3.java";"221";" '.class' expected
        return double sumScoredFreqCounter;
                      ^
2 errors
"
"ac39e2fbeae46c23551eb54e9ffe6735af6ebbac";"2020-10-07T22_09_14.612Z";"hw3.java";"228";" incompatible types"
"ad32cd8b3114fa67f291bfe5cac9bd96401fdb0d";"2020-10-07T14_02_46.891Z";"hw3.java";"25";" no suitable method found for charAt(no arguments)
        char[] strArray = str.charAt();
                             ^
    method CharSequence.charAt(int) is not applicable
      (actual and formal argument lists differ in length)
    method String.charAt(int) is not applicable
      (actual and formal argument lists differ in length)
1 error
"
"ad32cd8b3114fa67f291bfe5cac9bd96401fdb0d";"2020-10-07T15_55_21.420Z";"hw3.java";"44";" ';' expected
        String message = ''
                           ^
1 error
"
"ad32cd8b3114fa67f291bfe5cac9bd96401fdb0d";"2020-10-08T01_05_16.747Z";"hw3.java";"175";" variable key is already defined in method main(String[])
        int key = (int) asciiKey - 'A';        int key = (int) asciiKey - 'A';
                                                   ^
1 error
"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-05T23_40_57.396Z";"hw3.java";"20";" method stringToSymbolArray(String) is already defined in class Caesar
    public static int[] stringToSymbolArray(String str) {
                        ^
1 error
"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-06T15_40_14.007Z";"hw3.java";"22";" method stringToSymbolArray(String) is already defined in class Caesar
    public static int[] stringToSymbolArray(String str) {
                        ^
1 error
"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-06T21_58_58.127Z";"hw3.java";"25";" method stringToSymbolArray(String) is already defined in class Caesar
    public static int[] stringToSymbolArray(String str) {
                        ^
/"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-06T21_58_58.127Z";"hw3.java";"38";" method symbolArrayToString(int[]) is already defined in class Caesar
    public static String symbolArrayToString(int[] symbols) {
                         ^
2 errors
"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-06T22_27_26.662Z";"hw3.java";"20";" cannot find symbol
        int asciiRepresentation = (int) letter - 'A';
                                        ^
  symbol"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-06T22_27_26.662Z";"hw3.java";"34";" bad operand types for binary operator '+'
        char letter = (char) (symbols + 'A');
                                      ^
  first type"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-06T23_03_11.337Z";"hw3.java";"41";" cannot find symbol
    public static String symbolArrayToString(symboint[] ls) {
                                             ^
  symbol"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-06T23_03_11.337Z";"hw3.java";"43";" cannot find symbol
        char letter = (char) (symbols + 'A');
                              ^
  symbol"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T00_14_33.098Z";"hw3.java";"29";" not a statement
       y
       ^
/"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T00_14_33.098Z";"hw3.java";"29";" ';' expected
       y
        ^
2 errors
"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T01_38_10.098Z";"hw3.java";"41";" <identifier> expected
    public static String symbolArrayToString(symbol int[] ls) {
                                                   ^
/"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T01_38_10.098Z";"hw3.java";"41";" ';' expected
    public static String symbolArrayToString(symbol int[] ls) {
                                                         ^
2 errors
"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T22_01_34.485Z";"hw3.java";"43";" int cannot be dereferenced
        String[] letterArray = new String [symbols.length()];
                                                  ^
/"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T22_01_34.485Z";"hw3.java";"44";" int cannot be dereferenced
        for (int i = 0; i < symbols.length(); i++){
                                   ^
/"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T22_01_34.485Z";"hw3.java";"47";" incompatible types"
"ade33521e7d76a3811bb51f5b3a319d05e6e6ef7";"2020-10-07T22_01_34.485Z";"hw3.java";"49";" incompatible types"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"43";" illegal start of expression
        }
        ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"51";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"51";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"51";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"51";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"51";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"51";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"59";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"59";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"59";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"59";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"59";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"59";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"67";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"75";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-02T23_50_58.070Z";"hw3.java";"83";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
37 errors
"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"81";" ']' expected
            symbols[i] = shift[symbols[i], key];
                                         ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"81";" not a statement
            symbols[i] = shift[symbols[i], key];
                                           ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"81";" ';' expected
            symbols[i] = shift[symbols[i], key];
                                              ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"84";" '.class' expected
        String encryptedMessage = symbolArrayToString(symbols[]);
                                                               ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"96";" ']' expected
            symbols[i] = unshift[symbols[i], key];
                                           ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"96";" not a statement
            symbols[i] = unshift[symbols[i], key];
                                             ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"96";" ';' expected
            symbols[i] = unshift[symbols[i], key];
                                                ^
/"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-03T01_15_20.060Z";"hw3.java";"99";" '.class' expected
        String decryptedMessage = symbolArrayToString(symbols[]);
                                                               ^
8 errors
"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-06T00_20_46.907Z";"hw3.java";"179";" cannot find symbol
            frequencies[i] = letterCount / numSymbols; 
                                           ^
  symbol"
"af8848d505a376b4e59386d65856ccdd1ddf1afd";"2020-10-06T00_20_46.907Z";"hw3.java";"193";" cannot find symbol
            frequenciesScore = Math.abs(english[i] - currentFreqs[i]); 
            ^
  symbol"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-06T15_00_10.624Z";"hw3.java";"60";" cannot find symbol
        char[] letters = new char[symbols.length()];
                                         ^
  symbol"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-06T15_00_10.624Z";"hw3.java";"61";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-06T15_00_10.624Z";"hw3.java";"62";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-06T15_00_10.624Z";"hw3.java";"63";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-06T15_00_10.624Z";"hw3.java";"67";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"177";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"177";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"177";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"177";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"177";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"177";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"182";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"182";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"182";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"182";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"182";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T04_20_42.046Z";"hw3.java";"225";" reached end of file while parsing
}
 ^
12 errors
"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T05_30_40.835Z";"hw3.java";"172";" not a statement
            frequencies[i] / symbols.length;
                           ^
1 error
"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T06_28_18.011Z";"hw3.java";"172";" not a statement
            frequencies[i] / symbols.length;
                           ^
1 error
"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T18_16_26.809Z";"hw3.java";"168";" ';' expected
            frequencies[]++;
                         ^
/"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T18_16_26.809Z";"hw3.java";"171";" not a statement
            frequencies[i] / symbols.length;
                           ^
2 errors
"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T18_37_12.855Z";"hw3.java";"172";" not a statement
            frequencies[i] / symbols.length;
                           ^
1 error
"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T20_04_36.329Z";"hw3.java";"159";" method stringToSymbolArray in class Caesar cannot be applied to given types;
        symbols = stringToSymbolArray();
                  ^
  required"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T20_04_36.329Z";"hw3.java";"159";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T20_04_36.329Z";"hw3.java";"162";" cannot find symbol
            stringToSymbolArray(encrypt(message, i));
                                        ^
  symbol"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T20_58_42.625Z";"hw3.java";"207";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T20_58_42.625Z";"hw3.java";"208";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T20_58_42.625Z";"hw3.java";"211";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T22_02_10.623Z";"hw3.java";"207";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T22_02_10.623Z";"hw3.java";"208";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T22_02_10.623Z";"hw3.java";"211";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-07T22_02_10.623Z";"hw3.java";"249";" incompatible types"
"b0562a7e84830696ceb1f739f48ce79230064a56";"2020-10-08T03_30_11.713Z";"hw3.java";"209";" cannot find symbol
            System.out.println(Arrays.toString(possibleMsg));
                               ^
  symbol"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-05T22_24_42.228Z";"hw3.java";"85";" incompatible types"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-05T22_24_42.228Z";"hw3.java";"86";" cannot find symbol
        key = shift(symbol,offset);
                    ^
  symbol"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-05T22_24_42.228Z";"hw3.java";"86";" cannot find symbol
        key = shift(symbol,offset);
                           ^
  symbol"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-07T22_55_25.559Z";"hw3.java";"128";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-07T22_55_25.559Z";"hw3.java";"130";" incompatible types"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T04_01_38.792Z";"hw3.java";"128";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T04_01_38.792Z";"hw3.java";"130";" incompatible types"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T04_19_55.505Z";"hw3.java";"128";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T04_19_55.505Z";"hw3.java";"130";" incompatible types"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T20_07_01.946Z";"hw3.java";"148";" '(' expected
                if symbols[i] == 
                  ^
/"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T20_07_01.946Z";"hw3.java";"149";" ')' expected
                letterFrequencies[x] ++
                                       ^
/"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T20_07_01.946Z";"hw3.java";"150";" ';' expected
                countLetter++
                             ^
3 errors
"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T21_30_36.941Z";"hw3.java";"147";" illegal start of expression
            if (x == )
                     ^
/"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T21_30_36.941Z";"hw3.java";"149";" '(' expected
                if symbols[i] == 
                  ^
/"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T21_30_36.941Z";"hw3.java";"150";" ')' expected
                letterFrequencies[x] ++
                                       ^
/"
"b153914f2e02d75d24451557bd564a3fac4473ae";"2020-10-08T21_30_36.941Z";"hw3.java";"151";" ';' expected
                countLetter++
                             ^
4 errors
"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T02_09_43.728Z";"hw3.java";"147";" ')' expected
        else if (args[0].equals('decrypt') {
                                          ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T02_09_43.728Z";"hw3.java";"150";" ')' expected
        else if (args[0].equals('crack') {
                                        ^
2 errors
"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T06_59_05.062Z";"hw3.java";"152";" incompatible types"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"192";" array dimension missing
        new double[] nums = findFrequencies(stringToSymbolArray(test)));
                     ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"192";" illegal start of expression
        new double[] nums = findFrequencies(stringToSymbolArray(test)));
                          ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"192";" ';' expected
        new double[] nums = findFrequencies(stringToSymbolArray(test)));
                                           ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"192";" ';' expected
        new double[] nums = findFrequencies(stringToSymbolArray(test)));
                                                                     ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"193";" not a statement
        for (num )
             ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"193";" ';' expected
        for (num )
                ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"193";" illegal start of expression
        for (num )
                 ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"193";" ';' expected
        for (num )
                  ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"198";" illegal start of expression
}
^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"198";" reached end of file while parsing
}
 ^
/"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T07_30_06.894Z";"hw3.java";"199";" illegal start of statement
11 errors
"
"b39d544b1afbe0322c1ceb413137cd994e42fd7c";"2020-10-08T15_31_09.103Z";"hw3.java";"202";" missing return statement
    }
    ^
1 error
"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-06T16_41_07.927Z";"hw3.java";"39";" unexpected type
            str.charAt(i) = (char) symbols[i] + 'A';
                      ^
  required"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T17_31_11.813Z";"hw3.java";"39";" unexpected type
            str.charAt(i) = (char) symbols[i] + 'A';
                      ^
  required"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T18_36_08.626Z";"hw3.java";"58";" variable symbol is already defined in method unshift(int,int)
        char symbol = Integer.parseInt(symbol);
             ^
/"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T18_36_08.626Z";"hw3.java";"58";" incompatible types"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T18_36_08.626Z";"hw3.java";"59";" variable offset is already defined in method unshift(int,int)
        int offset;
            ^
Note"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T19_04_13.515Z";"hw3.java";"58";" variable symbol is already defined in method unshift(int,int)
        char symbol = Integer.parseInt(symbol);
             ^
/"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T19_04_13.515Z";"hw3.java";"58";" incompatible types"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T19_04_13.515Z";"hw3.java";"59";" variable offset is already defined in method unshift(int,int)
        int offset;
            ^
/"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T19_04_13.515Z";"hw3.java";"60";" bad operand types for binary operator '<='
        if (0 <= symbol <= 25) {
                        ^
  first type"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T19_04_13.515Z";"hw3.java";"61";" incompatible types"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T20_08_30.123Z";"hw3.java";"62";" not a statement
        } else (symbol < 0 || symbol > 25) {
               ^
/"
"b4821e2a765f1e58c10bfb4aa61c636dd21fae1a";"2020-10-08T20_08_30.123Z";"hw3.java";"62";" ';' expected
        } else (symbol < 0 || symbol > 25) {
                                          ^
2 errors
"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-06T22_23_38.841Z";"hw3.java";"21";" cannot find symbol
        int[] numeric = new int[str.length];
                                   ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-06T23_04_15.073Z";"hw3.java";"8";" cannot find symbol
import java.lang;
           ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-06T23_04_15.073Z";"hw3.java";"23";" cannot find symbol
        int[] numeric = new int[str.length];
                                   ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-06T23_04_15.073Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < str.Length; i++)
                               ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-06T23_04_15.073Z";"hw3.java";"43";" cannot find symbol
        for(int i =0 ; i < symbols.Length; i++)
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-06T23_04_15.073Z";"hw3.java";"45";" array required, but String found
            str[i] = (char) (symbols[i] + 'A');
               ^
5 errors
"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"8";" cannot find symbol
import java.lang;
           ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"9";" cannot find symbol
import java.util;
           ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"25";" cannot find symbol
        int[] numeric = new int[str.length];
                                   ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"26";" cannot find symbol
        for (int i = 0; i < str.Length; i++)
                               ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"45";" cannot find symbol
        for(int i =0 ; i < symbols.Length; i++)
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"47";" array required, but String found
            str[i] = (char) (symbols[i] + 'A');
               ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"82";" cannot find symbol
            for(int i = 0 ; i < encArr.Length; i ++)
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"85";" array required, but String found
           EncMessage[i] = (char)shifArr[i];
                     ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"98";" cannot find symbol
        in[] unshiarr = new int[encdyc.length];
        ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"100";" cannot find symbol
        for (int i = 0; i < encdyc.Length; i++) {
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"102";" array required, but String found
            OriginalMess[i] = (char)unshiarr[i];
                        ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"135";" cannot find symbol
            if (args[0].equals(encrypt))
                               ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"140";" cannot find symbol
                String encryptedContent = encrypt(s, arga[2]);
                                                     ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T00_19_04.402Z";"hw3.java";"148";" cannot find symbol
                String decryptedContent = decrypt(s, arga[2]);
                                                     ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"44";" cannot find symbol
        for(int i =0 ; i < symbols.length(); i++)
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"46";" array required, but String found
            str[i] = (char) (symbols[i] + 'A');
               ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"79";" cannot find symbol
        int[] shifArr = new int[encArr.length()]; 
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"81";" cannot find symbol
            for(int i = 0 ; i < encArr.length(); i ++)
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"84";" array required, but String found
           EncMessage[i] = (char)shifArr[i];
                     ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"97";" cannot find symbol
        in[] unshiarr = new int[encdyc.length()];
        ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"97";" cannot find symbol
        in[] unshiarr = new int[encdyc.length()];
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"99";" cannot find symbol
        for (int i = 0; i < encdyc.length(); i++) {
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"101";" array required, but String found
            OriginalMess[i] = (char)unshiarr[i];
                        ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"132";" array required, but String found
            freq[(int) (strS[i] - 'A')]++;
                            ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"146";" cannot find symbol
        if (args.length() == 3) {
                ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"152";" cannot find symbol
                String encryptedContent = encrypt(s, Integer.ParseInt( args[2]));
                                                            ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T01_40_44.442Z";"hw3.java";"160";" cannot find symbol
                String decryptedContent = decrypt(s, Integer.ParseInt(args[2]));
                                                            ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"44";" cannot find symbol
        for(int i =0 ; i < symbols.length(); i++)
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"46";" array required, but String found
            str[i] = (char) (symbols[i] + 'A');
               ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"79";" cannot find symbol
        int[] shifArr = new int[encArr.length()]; 
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"81";" cannot find symbol
            for(int i = 0 ; i < encArr.length(); i ++)
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"84";" array required, but String found
           EncMessage[i] = (char)shifArr[i];
                     ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"97";" cannot find symbol
        in[] unshiarr = new int[encdyc.length()];
        ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"97";" cannot find symbol
        in[] unshiarr = new int[encdyc.length()];
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"99";" cannot find symbol
        for (int i = 0; i < encdyc.length(); i++) {
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"101";" array required, but String found
            OriginalMess[i] = (char)unshiarr[i];
                        ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"132";" array required, but String found
            freq[(int) (strS[i] - 'A')]++;
                            ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"146";" cannot find symbol
        if (args.length() == 3) {
                ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"152";" cannot find symbol
                String encryptedContent = encrypt(s, Integer.ParseInt( args[2]));
                                                            ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T05_43_12.604Z";"hw3.java";"160";" cannot find symbol
                String decryptedContent = decrypt(s, Integer.ParseInt(args[2]));
                                                            ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"44";" cannot find symbol
        for(int i =0 ; i < symbols.length(); i++)
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"46";" array required, but String found
            str[i] = (char) (symbols[i] + 'A');
               ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"79";" cannot find symbol
        int[] shifArr = new int[encArr.length()]; 
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"81";" cannot find symbol
            for(int i = 0 ; i < encArr.length(); i ++)
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"84";" array required, but String found
           EncMessage[i] = (char)shifArr[i];
                     ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"97";" cannot find symbol
        in[] unshiarr = new int[encdyc.length()];
        ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"97";" cannot find symbol
        in[] unshiarr = new int[encdyc.length()];
                                      ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"99";" cannot find symbol
        for (int i = 0; i < encdyc.length(); i++) {
                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"101";" array required, but String found
            OriginalMess[i] = (char)unshiarr[i];
                        ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"132";" array required, but String found
            freq[(int) (strS[i] - 'A')]++;
                            ^
/"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"146";" cannot find symbol
        if (args.length() == 3) {
                ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"152";" cannot find symbol
                String encryptedContent = encrypt(s, Integer.ParseInt( args[2]));
                                                            ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-07T16_39_36.210Z";"hw3.java";"160";" cannot find symbol
                String decryptedContent = decrypt(s, Integer.ParseInt(args[2]));
                                                            ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T17_41_15.187Z";"hw3.java";"22";" cannot find symbol
            if (character.isLetter(str.charAt(i))) {
                ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T17_41_15.187Z";"hw3.java";"43";" cannot find symbol
                c = (char)(x + 65);
                ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T17_41_15.187Z";"hw3.java";"44";" cannot find symbol
            else c = (char)x;
                 ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T17_41_15.187Z";"hw3.java";"45";" cannot find symbol
            s = s + c;
                    ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T18_15_41.123Z";"hw3.java";"22";" cannot find symbol
            if (character.isLetter(str.charAt(i))) {
                ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T18_15_41.123Z";"hw3.java";"43";" cannot find symbol
                c = (char)(x + 65);
                ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T18_15_41.123Z";"hw3.java";"44";" cannot find symbol
            else c = (char)x;
                 ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-08T18_15_41.123Z";"hw3.java";"45";" cannot find symbol
            s = s + c;
                    ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-09T00_45_35.566Z";"hw3.java";"168";" cannot find symbol
            String codedstring = crack(plaintext, key);
                                                  ^
  symbol"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-09T01_09_36.801Z";"hw3.java";"165";" incompatible types"
"b5cd0e6c19a855f779db1522e8aae08c8e5bef43";"2020-10-09T01_09_36.801Z";"hw3.java";"166";" cannot find symbol
            System.out.println(codedstring);
                               ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T00_50_43.808Z";"hw3.java";"25";" incompatible types"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T16_04_12.089Z";"hw3.java";"109";" '.class' expected
        System.out.println('The result of stringToSymbolArray is ' + symbolRep[]); // how do I write this return?
                                                                                ^
/"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T16_04_12.089Z";"hw3.java";"111";" '.class' expected
        System.out.println('The result of symbolArrayToString is ' + strRep[]);
                                                                             ^
2 errors
"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"43";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
             ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"43";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                    ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"43";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                               ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"43";" cannot find symbol
        for (i = 0; i < symbols.length(); i++) {
                                          ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"44";" cannot find symbol
            int ourSymbolRepresentation = symbols[i];
                                                  ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"45";" cannot find symbol
            letter[i] = (S) (ourSymbolRepresentation + 'A');
                   ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"45";" array required, but String found
            letter[i] = (S) (ourSymbolRepresentation + 'A');
                  ^
/"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-06T21_31_40.264Z";"hw3.java";"45";" cannot find symbol
            letter[i] = (S) (ourSymbolRepresentation + 'A');
                         ^
  symbol"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-08T13_38_19.651Z";"hw3.java";"183";" incompatible types"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-08T13_38_19.651Z";"hw3.java";"195";" variable cipher is already defined in method main(String[])
                String cipher = inStream.readAll();
                       ^
/"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-08T13_38_19.651Z";"hw3.java";"196";" variable message is already defined in method main(String[])
                String message = decrypt(cipher, key);
                       ^
3 errors
"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-08T13_57_13.387Z";"hw3.java";"183";" incompatible types"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-08T13_57_13.387Z";"hw3.java";"196";" variable cipher is already defined in method main(String[])
                String cipher = inStream.readAll();
                       ^
/"
"b5e0812e60445d3fe7535f892e0b7735479b52fc";"2020-10-08T13_57_13.387Z";"hw3.java";"197";" variable message is already defined in method main(String[])
                String message = decrypt(cipher, key);
                       ^
3 errors
"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T01_14_00.542Z";"hw3.java";"173";" ';' expected
        String convertFile = inStream.readAll()
                                               ^
1 error
"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"161";" illegal start of expression
        for ()
             ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"162";" illegal start of expression
        return null;
        ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"162";" ';' expected
        return null;
              ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"162";" illegal start of expression
        return null;
                   ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"162";" ')' expected
        return null;
                    ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
          ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                         ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" <identifier> expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                           ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                  ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                   ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" not a statement
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                     ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"168";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" illegal start of expression
     public static String crack(String cipher, String filename) {
     ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" illegal start of expression
     public static String crack(String cipher, String filename) {
            ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" ';' expected
     public static String crack(String cipher, String filename) {
                         ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" ')' expected
     public static String crack(String cipher, String filename) {
                                      ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" illegal start of expression
     public static String crack(String cipher, String filename) {
                                             ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" ';' expected
     public static String crack(String cipher, String filename) {
                                                     ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" not a statement
     public static String crack(String cipher, String filename) {
                                                      ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"176";" ';' expected
     public static String crack(String cipher, String filename) {
                                                              ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"180";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"180";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"180";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"180";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"180";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"b6ebdf3e5f0e4bbfda909dac06134289016c7359";"2020-10-07T17_33_10.363Z";"hw3.java";"212";" reached end of file while parsing
}
 ^
27 errors
"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-05T19_15_38.819Z";"hw3.java";"31";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-05T20_55_02.414Z";"hw3.java";"53";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-05T20_55_02.414Z";"hw3.java";"55";" cannot find symbol
            char current = symbols.charAt[i];
                                  ^
  symbol"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-05T22_46_09.476Z";"hw3.java";"70";" bad operand types for binary operator '<='
        if (0 <= symbol <= 25) {
                        ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-05T23_35_42.525Z";"hw3.java";"71";" bad operand types for binary operator '<='
            if (0 <= symbol[i] <= 25) {
                               ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-05T23_35_42.525Z";"hw3.java";"74";" bad operand types for binary operator '<='
            else if (22 <= symbol[i] <= 25) {
                                     ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-05T23_35_42.525Z";"hw3.java";"81";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-06T14_40_05.855Z";"hw3.java";"71";" bad operand types for binary operator '<='
            if ('A' <= symbol[i] <= 'Z') {
                                 ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-06T14_40_05.855Z";"hw3.java";"74";" bad operand types for binary operator '<='
            else if (22 <= symbol[i] <= 25) {
                                     ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-06T14_40_05.855Z";"hw3.java";"82";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-06T16_57_54.372Z";"hw3.java";"74";" bad operand types for binary operator '<='
            if (0 <= symbol <= 25) {
                            ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-06T16_57_54.372Z";"hw3.java";"77";" bad operand types for binary operator '<='
            else if (22 <= symbol <= 25) {
                                  ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-07T00_42_20.625Z";"hw3.java";"80";" non-static variable textWrapCase cannot be referenced from a static context
            textWrapCase = true;
            ^
/"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-07T00_42_20.625Z";"hw3.java";"84";" non-static variable normalCase cannot be referenced from a static context
            normalCase = true;
            ^
/"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-07T00_42_20.625Z";"hw3.java";"99";" non-static variable normalCase cannot be referenced from a static context
        if (normalCase) {
            ^
/"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-07T00_42_20.625Z";"hw3.java";"102";" non-static variable textWrapCase cannot be referenced from a static context
        else if (textWrapCase) {
                 ^
4 errors
"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-07T19_30_35.969Z";"hw3.java";"194";" ';' expected
        double [] frequencyCount = new double[symbols.length]
                                                             ^
1 error
"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T03_58_41.430Z";"hw3.java";"241";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T04_11_04.543Z";"hw3.java";"241";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T04_27_28.768Z";"hw3.java";"245";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T06_09_13.019Z";"hw3.java";"250";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T14_40_07.773Z";"hw3.java";"251";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T18_09_45.742Z";"hw3.java";"250";" incompatible types"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T20_55_52.592Z";"hw3.java";"264";" bad operand types for binary operator '<'
            if ((scoreFrequencies(xInput, yInput)) < score) {
                                                   ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T20_55_52.592Z";"hw3.java";"265";" bad operand types for binary operator '<'
                if ((scoreFrequencies(xInput, yInput)) < (scoreFrequencies(xInput, yInput))) {
                                                       ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T21_12_57.565Z";"hw3.java";"264";" bad operand types for binary operator '<'
            if ((scoreFrequencies(xInput, yInput)) < score) {
                                                   ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T21_12_57.565Z";"hw3.java";"265";" bad operand types for binary operator '<'
                if ((scoreFrequencies(xInput, yInput)) < (scoreFrequencies(xInput, yInput))) {
                                                       ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T21_36_18.605Z";"hw3.java";"264";" bad operand types for binary operator '<'
            if ((scoreFrequencies(xInput, yInput)) < score) {
                                                   ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T21_36_18.605Z";"hw3.java";"265";" bad operand types for binary operator '<'
                if ((scoreFrequencies(xInput, yInput)) < (scoreFrequencies(xInput, yInput))) {
                                                       ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T22_26_54.950Z";"hw3.java";"257";" bad operand types for binary operator '<'
            if ((scoreFrequencies(xInput, yInput)) < score) {
                                                   ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-08T22_26_54.950Z";"hw3.java";"258";" bad operand types for binary operator '<'
                if ((scoreFrequencies(xInput, yInput)) < (scoreFrequencies(xInput, yInput))) {
                                                       ^
  first type"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-09T00_47_40.546Z";"hw3.java";"257";" illegal start of type
    return crackedMessage;
    ^
/"
"b736d508e99ced70c414fb27044a0f8eef9cf0fc";"2020-10-09T00_47_40.546Z";"hw3.java";"257";" ';' expected
    return crackedMessage;
          ^
2 errors
"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-04T18_47_38.897Z";"hw3.java";"28";" missing return statement
    }
    ^
1 error
"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-04T19_55_55.773Z";"hw3.java";"30";" incompatible types"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-04T21_14_24.945Z";"hw3.java";"22";" bad operand types for binary operator '<'
        for (int i = 0; i < str; i++) {
                          ^
  first type"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-04T21_14_24.945Z";"hw3.java";"31";" cannot find symbol
        return ourSymbolRepresentation;
               ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-04T21_37_38.849Z";"hw3.java";"22";" bad operand types for binary operator '<'
        for (int i = 0; i < str; i++) {
                          ^
  first type"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-04T21_37_38.849Z";"hw3.java";"33";" cannot find symbol
        return ourSymbolRepresentation;
               ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T11_57_53.871Z";"hw3.java";"110";" cannot find symbol
        System.out.println(Arrays.toString(character));
                           ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T13_40_56.642Z";"hw3.java";"43";" cannot find symbol
        String[] ourCharacterRepresentation = new String[symbols.length()];
                                                                ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T13_40_56.642Z";"hw3.java";"44";" cannot find symbol
        for(int i = 0; i < symbols.length(); i++) {
                                  ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T13_40_56.642Z";"hw3.java";"45";" cannot find symbol
            int current = symbols.StringAt[i];
                                 ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T13_40_56.642Z";"hw3.java";"46";" incompatible types"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T13_40_56.642Z";"hw3.java";"48";" incompatible types"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T15_42_55.303Z";"hw3.java";"43";" cannot find symbol
        String[] ourCharacterRep = new String[symbols.length()];
                                                     ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T15_42_55.303Z";"hw3.java";"44";" bad operand types for binary operator '<'
        for(int i = 0; i < symbols; i++) {
                         ^
  first type"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T15_42_55.303Z";"hw3.java";"45";" cannot find symbol
            int current = symbols.StringAt[i];
                                 ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T15_42_55.303Z";"hw3.java";"46";" incompatible types"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T15_42_55.303Z";"hw3.java";"48";" incompatible types"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T16_04_06.084Z";"hw3.java";"43";" cannot find symbol
       String ourCharacter = String(symbols);
                             ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T17_07_22.060Z";"hw3.java";"43";" cannot find symbol
       String ourCharacter = String(symbols);
                             ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T17_50_49.509Z";"hw3.java";"43";" incompatible types"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-05T23_24_23.471Z";"hw3.java";"57";" variable offset is already defined in method shift(int,int)
        int offset = 'E';
            ^
1 error
"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T00_29_44.615Z";"hw3.java";"59";" cannot find symbol
          shift = symbol + offset;  
          ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T14_09_44.562Z";"hw3.java";"101";" method shift in class Caesar cannot be applied to given types;
            symbol[i] = shift(symbol);
                        ^
  required"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T14_26_57.250Z";"hw3.java";"101";" method shift in class Caesar cannot be applied to given types;
            symbol[i] = shift(symbol);
                        ^
  required"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T14_26_57.250Z";"hw3.java";"146";" cannot find symbol
        String s = symbolArrayToString(character);
                   ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T18_58_58.916Z";"hw3.java";"129";" array dimension missing
        return null;
        ^
/"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T18_58_58.916Z";"hw3.java";"129";" not a statement
        return null;
               ^
2 errors
"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T22_13_03.960Z";"hw3.java";"167";" illegal start of expression
        return 0.0;
        ^
/"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T22_13_03.960Z";"hw3.java";"167";" not a statement
        return 0.0;
               ^
2 errors
"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T23_15_14.591Z";"hw3.java";"166";" ';' expected
        double totalScore = 0.0
                               ^
/"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T23_15_14.591Z";"hw3.java";"167";" illegal start of expression
        for (int i = 0; i < ;i++){
                            ^
/"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T23_15_14.591Z";"hw3.java";"169";" ';' expected
            totalScore += score
                               ^
3 errors
"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T23_40_56.480Z";"hw3.java";"220";" ')' expected
        double totalScore = scoreFrequencies((0.2, 0.1, 0.0), (0.1, 0.1, 0.05));
                                                 ^
/"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T23_40_56.480Z";"hw3.java";"220";" <identifier> expected
        double totalScore = scoreFrequencies((0.2, 0.1, 0.0), (0.1, 0.1, 0.05));
                                                             ^
/"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T23_40_56.480Z";"hw3.java";"220";" not a statement
        double totalScore = scoreFrequencies((0.2, 0.1, 0.0), (0.1, 0.1, 0.05));
                                                               ^
/"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-06T23_40_56.480Z";"hw3.java";"220";" ';' expected
        double totalScore = scoreFrequencies((0.2, 0.1, 0.0), (0.1, 0.1, 0.05));
                                                                  ^
4 errors
"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-07T00_05_25.167Z";"hw3.java";"166";" method getDictionaryFrequencies in class Caesar cannot be applied to given types;
        english = getDictionaryFrequencies();
                  ^
  required"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-07T00_05_25.167Z";"hw3.java";"167";" method findFrequencies in class Caesar cannot be applied to given types;
        currentFreqs = findFrequencies();
                       ^
  required"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-07T00_05_25.167Z";"hw3.java";"222";" method scoreFrequencies in class Caesar cannot be applied to given types;
        double totalScore = scoreFrequencies();
                            ^
  required"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-07T10_55_35.690Z";"hw3.java";"181";" cannot find symbol
        String decrypted = decrypt(cipher, key.charAt(0) - 'A');
                                           ^
  symbol"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-07T10_55_35.690Z";"hw3.java";"182";" incompatible types"
"b73f677e519a4bf4d446832eb58b3f0a04112b43";"2020-10-07T10_55_35.690Z";"hw3.java";"183";" bad operand types for binary operator '-'
        double scoreFreqs = scoreFrequencies(freqs -
                                                   ^
  first type"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < args.length; i++); {
                            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                             ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                                         ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                                     ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                                                 ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"44";" cannot find symbol
            System.out.println(symbolArray[i]);
                               ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"44";" cannot find symbol
            System.out.println(symbolArray[i]);
                                           ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T00_20_12.761Z";"hw3.java";"47";" cannot find symbol
        return symbolArray;
               ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < args.length; i++); {
                            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                             ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"42";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                                         ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                                     ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                                                 ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"44";" cannot find symbol
            System.out.println(symbolArray[i]);
                               ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"44";" cannot find symbol
            System.out.println(symbolArray[i]);
                                           ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T03_25_16.538Z";"hw3.java";"47";" cannot find symbol
        return symbolArray;
               ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"41";" cannot find symbol
        String[] symbolArray = new String[args.length];
                                          ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"42";" cannot find symbol
        for (int i = 0; i < args.length; i++); {
                            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"43";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                                         ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"44";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"44";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                                                 ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"44";" incompatible types"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"45";" cannot find symbol
            System.out.println(symbolArray[i]);
                                           ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_09_19.183Z";"hw3.java";"48";" incompatible types"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-08T05_27_27.353Z";"hw3.java";"59";" ';' expected
           symbol = symbol + offset 
                                   ^
1 error
"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"42";" cannot find symbol
        String[] symbolArray = new String[args.length];
                                          ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"43";" cannot find symbol
        for (int i = 0; i < args.length; i++); {
                            ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"44";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"44";" cannot find symbol
            symbolArray[i] = symbolArray[i] + 'A';
                                         ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"45";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                        ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"45";" cannot find symbol
            symbolArray[i] = (char) (symbolArray[i]);
                                                 ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"45";" incompatible types"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"46";" cannot find symbol
            System.out.println(symbolArray[i]);
                                           ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"49";" incompatible types"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"57";" cannot find symbol
        offset = str.charAt(offset) - 'A';
                 ^
  symbol"
"b86d77222bb623cd350b6ffd4406591ce46dbbac";"2020-10-09T23_26_21.406Z";"hw3.java";"59";" bad operand types for binary operator '&&'
        if ((symbol <= 25) && (subtract ) ) {
                           ^
  first type"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-05T18_07_38.148Z";"hw3.java";"13";" incompatible types"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-05T18_07_38.148Z";"hw3.java";"30";" cannot find symbol
                counter++;
                ^
  symbol"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-05T18_58_27.101Z";"hw3.java";"11";" cannot find symbol
        int [] symbolArray = new int[str.length()];
                                     ^
  symbol"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-05T18_58_27.101Z";"hw3.java";"30";" cannot find symbol
             symbolArray[i] = (int) str.charAt(i) - 'A';
                         ^
  symbol"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-05T18_58_27.101Z";"hw3.java";"30";" cannot find symbol
             symbolArray[i] = (int) str.charAt(i) - 'A';
                                               ^
  symbol"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-05T21_14_23.107Z";"hw3.java";"50";" unexpected type
            letters.charAt(i) = (char) (symbols[i] + 'A');
                          ^
  required"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-05T21_52_29.413Z";"hw3.java";"53";" variable letters might not have been initialized
        return letters;
               ^
1 error
"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-06T00_28_22.183Z";"hw3.java";"62";" not a statement
            symbol + offset
                   ^
/"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-06T00_28_22.183Z";"hw3.java";"62";" ';' expected
            symbol + offset
                           ^
2 errors
"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-06T02_51_29.392Z";"hw3.java";"85";" ';' expected
            int shiftedSymbol  + symbol - offset;
                             ^
/"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-06T02_51_29.392Z";"hw3.java";"85";" not a statement
            int shiftedSymbol  + symbol - offset;
                                        ^
2 errors
"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-06T17_12_12.406Z";"hw3.java";"106";" cannot find symbol
        int[] encodedSymbolsArray = stringToSymbolArray(message);
                                                        ^
  symbol"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-07T15_58_25.681Z";"hw3.java";"40";" variable keyArray is already defined in method main(String[])
                int[] keyArray = stringToSymbolArray(key);
                      ^
/"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-07T15_58_25.681Z";"hw3.java";"41";" variable keyInt is already defined in method main(String[])
                int keyInt = keyArray[0];        
                    ^
/"
"b8dd4bb13b8b9d3dacaf062bc30800dbdccecf4b";"2020-10-07T15_58_25.681Z";"hw3.java";"46";" variable unEncryptedFile is already defined in method main(String[])
                String unEncryptedFile = decrypt(file, keyInt);
                       ^
3 errors
"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T00_02_07.453Z";"hw3.java";"22";" cannot find symbol
        stringToSymbolArray = new int[str.length];
        ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T00_02_07.453Z";"hw3.java";"22";" cannot find symbol
        stringToSymbolArray = new int[str.length];
                                         ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T00_02_07.453Z";"hw3.java";"25";" cannot find symbol
            stringToSymbolArray[i] = str.charAt(i) - 'A';
            ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T00_02_07.453Z";"hw3.java";"27";" incompatible types"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T01_17_29.190Z";"hw3.java";"22";" array required, but String found
            str[i] = Integer.parseInt[i];
               ^
/"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T01_17_29.190Z";"hw3.java";"22";" cannot find symbol
            str[i] = Integer.parseInt[i];
                            ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T01_31_30.313Z";"hw3.java";"22";" cannot find symbol
            stringToSymbolArray[i] = Integer.parseInt[i];
            ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T01_31_30.313Z";"hw3.java";"22";" cannot find symbol
            stringToSymbolArray[i] = Integer.parseInt[i];
                                            ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T03_04_50.781Z";"hw3.java";"21";" not a statement
        int[] 
           ^
/"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T03_04_50.781Z";"hw3.java";"21";" ';' expected
        int[] 
             ^
2 errors
"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T04_42_47.466Z";"hw3.java";"41";" cannot find symbol
            Text[i] = (char) (symbols.charAt(i) + 'A');
                                     ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T04_42_47.466Z";"hw3.java";"41";" incompatible types"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T04_42_47.466Z";"hw3.java";"43";" incompatible types"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T05_13_20.975Z";"hw3.java";"41";" cannot find symbol
            master[i] = (char) (symbols.charAt(i) + 'A');
                                       ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T05_43_24.713Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T05_43_24.713Z";"hw3.java";"42";" cannot find symbol
            master[i] = (char) (symbols.charAt(i) + 'A');
                                       ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T05_56_04.125Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T05_56_04.125Z";"hw3.java";"42";" cannot find symbol
            master[i] = (char) (symbols.charAt(i) + 'A');
                                       ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-07T06_07_19.346Z";"hw3.java";"42";" cannot find symbol
            master[i] = (char) (symbols.charAt(i) + 'A');
                                       ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-08T18_39_45.884Z";"hw3.java";"209";" cannot find symbol
                String encryptedMessage = encrpyt(message, key);
                                          ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-08T18_39_45.884Z";"hw3.java";"214";" cannot find symbol
                decrpy(args[1]);
                ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-08T18_59_32.294Z";"hw3.java";"209";" cannot find symbol
                String encryptedMessage = encrpyt(message, key);
                                          ^
  symbol"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-08T18_59_32.294Z";"hw3.java";"214";" method decrypt in class Caesar cannot be applied to given types;
                decrypt(args[1]);
                ^
  required"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-08T21_04_08.281Z";"hw3.java";"171";" no suitable method found for split(no arguments)
        String[] englishStrings = english.split();
                                         ^
    method String.split(String,int) is not applicable
      (actual and formal argument lists differ in length)
    method String.split(String) is not applicable
      (actual and formal argument lists differ in length)
1 error
"
"b99245183799dac29608c895bd5481a4f83d71d6";"2020-10-08T22_41_17.570Z";"hw3.java";"171";" no suitable method found for split(no arguments)
        String[] englishStrings = english.split();
                                         ^
    method String.split(String,int) is not applicable
      (actual and formal argument lists differ in length)
    method String.split(String) is not applicable
      (actual and formal argument lists differ in length)
1 error
"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"11";" illegal start of type
    if (args.length != 3) {
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"11";" <identifier> expected
    if (args.length != 3) {
                   ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"11";" ';' expected
    if (args.length != 3) {
                      ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"11";" illegal start of type
    if (args.length != 3) {
                        ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"11";" <identifier> expected
    if (args.length != 3) {
                         ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"11";" ';' expected
    if (args.length != 3) {
                           ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"12";" illegal start of type
        System.err.println()
              ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"12";" ';' expected
        System.err.println()
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"12";" invalid method declaration; return type required
        System.err.println()
                   ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"12";" ';' expected
        System.err.println()
                            ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"23";" class, interface, or enum expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"26";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"36";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"39";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"44";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"47";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"52";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"55";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"60";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"63";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"68";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"71";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"76";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"79";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"84";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"87";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"92";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"95";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_00_10.497Z";"hw3.java";"97";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
29 errors
"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"11";" illegal start of type
    if (args.length != 3) {
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"11";" <identifier> expected
    if (args.length != 3) {
                   ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"11";" ';' expected
    if (args.length != 3) {
                      ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"11";" illegal start of type
    if (args.length != 3) {
                        ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"11";" <identifier> expected
    if (args.length != 3) {
                         ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"11";" ';' expected
    if (args.length != 3) {
                           ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"12";" illegal start of type
        System.err.println('Please use java Caeasar in action, filename, and key');
              ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"12";" ';' expected
        System.err.println('Please use java Caeasar in action, filename, and key');
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"12";" invalid method declaration; return type required
        System.err.println('Please use java Caeasar in action, filename, and key');
                   ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"12";" illegal start of type
        System.err.println('Please use java Caeasar in action, filename, and key');
                           ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"13";" <identifier> expected
        System.exit(1);
                   ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"13";" illegal start of type
        System.exit(1);
                    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"24";" class, interface, or enum expected
    public static int[] stringToSymbolArray(String str) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"28";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"38";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"41";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"46";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"49";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"54";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"57";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"62";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"65";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"70";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"73";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"78";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"81";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"86";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"89";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"94";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"97";" class, interface, or enum expected
    }
    ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-05T05_30_38.945Z";"hw3.java";"99";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
31 errors
"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-06T17_14_31.163Z";"hw3.java";"21";" cannot find symbol
        String message = instream.readAll();
                         ^
  symbol"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-06T19_46_25.921Z";"hw3.java";"230";" unclosed comment
        /**
        ^
/"
"b9c2d0d2342a353dad6ddd8bb452466719b8f726";"2020-10-06T19_46_25.921Z";"hw3.java";"239";" reached end of file while parsing
2 errors
"
"ba15266164841b505d1d1ae06d5932e085308ec2";"2020-10-08T01_14_16.106Z";"hw3.java";"124";" not a statement
        double[] 
              ^
/"
"ba15266164841b505d1d1ae06d5932e085308ec2";"2020-10-08T01_14_16.106Z";"hw3.java";"124";" ';' expected
        double[] 
                ^
2 errors
"
"ba3b42be44a09ab0db64b811784be57512ecf985";"2020-10-06T01_10_53.662Z";"hw3.java";"44";" incompatible types"
"ba3b42be44a09ab0db64b811784be57512ecf985";"2020-10-06T15_51_42.963Z";"hw3.java";"170";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"ba3b42be44a09ab0db64b811784be57512ecf985";"2020-10-06T21_38_17.771Z";"hw3.java";"174";" method encrypt in class Caesar cannot be applied to given types;
        String encryptedMsg = encrypt(str);
                              ^
  required"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T00_59_20.057Z";"hw3.java";"143";" not a statement
                symbols[i]
                       ^
/"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T00_59_20.057Z";"hw3.java";"143";" ';' expected
                symbols[i]
                          ^
/"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T00_59_20.057Z";"hw3.java";"145";" illegal start of expression
            if()
               ^
/"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T00_59_20.057Z";"hw3.java";"146";" illegal start of statement
        }
        ^
4 errors
"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T01_37_51.464Z";"hw3.java";"146";" not a statement
            freqStorage
            ^
/"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T01_37_51.464Z";"hw3.java";"146";" ';' expected
            freqStorage
                       ^
2 errors
"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T02_28_39.808Z";"hw3.java";"145";" not a statement
                    freqStorage[i]
                               ^
/"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T02_28_39.808Z";"hw3.java";"145";" ';' expected
                    freqStorage[i]
                                  ^
2 errors
"
"ba5871e0c8d519c35c818eb8cee94c7f49e7eaa4";"2020-10-08T12_15_45.141Z";"hw3.java";"1";" class, interface, or enum expected
+/**
^
1 error
"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-05T21_08_36.034Z";"hw3.java";"76";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-05T21_08_36.034Z";"hw3.java";"78";" cannot find symbol
            integerArray[i] = (int) str.charAt(i) - 'A'; // convert ith char to int  
            ^
  symbol"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-05T21_08_36.034Z";"hw3.java";"78";" cannot find symbol
            integerArray[i] = (int) str.charAt(i) - 'A'; // convert ith char to int  
                                    ^
  symbol"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T17_50_56.907Z";"hw3.java";"174";" cannot find symbol
        return message;
               ^
  symbol"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_35_02.331Z";"hw3.java";"233";" incompatible types"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_35_02.331Z";"hw3.java";"235";" bad operand types for binary operator '>='
        if (a >= 0 && a <= 26) { 
              ^
  first type"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_35_02.331Z";"hw3.java";"235";" bad operand types for binary operator '<='
        if (a >= 0 && a <= 26) { 
                        ^
  first type"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_35_02.331Z";"hw3.java";"236";" cannot find symbol
            int keyInt = keyString.charAt(0) - 'A';
                         ^
  symbol"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_47_32.478Z";"hw3.java";"233";" incompatible types"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_47_32.478Z";"hw3.java";"235";" bad operand types for binary operator '>='
        if (a >= 0 && a <= 26) { 
              ^
  first type"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_47_32.478Z";"hw3.java";"235";" bad operand types for binary operator '<='
        if (a >= 0 && a <= 26) { 
                        ^
  first type"
"bce6c9a25c13892e6af4da6592b09ab5a90e5515";"2020-10-07T19_47_32.478Z";"hw3.java";"236";" cannot find symbol
            int keyInt = keyString.charAt(0) - 'A';        
                         ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-08T21_39_09.389Z";"hw3.java";"41";" cannot find symbol
            word = word + String ((char) symbols[i] + 65);  
                          ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-08T21_39_09.389Z";"hw3.java";"113";" cannot find symbol
            percent = find[i] / count;
            ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-08T21_39_09.389Z";"hw3.java";"114";" cannot find symbol
            find [i] = percent;
                       ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-09T01_21_20.352Z";"hw3.java";"41";" cannot find symbol
            word = word + String ((char) symbols[i] + 65);  
                          ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-09T01_21_20.352Z";"hw3.java";"113";" cannot find symbol
            percent = find[i] / count;
            ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-09T01_21_20.352Z";"hw3.java";"114";" cannot find symbol
            find [i] = percent;
                       ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-09T01_21_20.352Z";"hw3.java";"125";" cannot find symbol
        Math.abs(currentFreqs[i] - english[j]);
                              ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-09T01_21_20.352Z";"hw3.java";"125";" cannot find symbol
        Math.abs(currentFreqs[i] - english[j]);
                                           ^
  symbol"
"bcecca23914ff5e3b78d6f043dac4e641bf1592e";"2020-10-09T01_21_20.352Z";"hw3.java";"125";" incompatible types"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-07T19_31_22.860Z";"hw3.java";"95";" method encrypt in class Caesar cannot be applied to given types;
            encrypt();
            ^
  required"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T03_04_55.851Z";"hw3.java";"20";" <identifier> expected
        str. = str.toUpperCase();
            ^
1 error
"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T03_25_47.301Z";"hw3.java";"20";" <identifier> expected
        str. = str.toUpperCase();
            ^
1 error
"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T04_56_51.810Z";"hw3.java";"20";" <identifier> expected
        str. = str.toUpperCase();
            ^
1 error
"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"20";" <identifier> expected
        str. = str.toUpperCase();
            ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"204";" illegal start of expression
        for (int i = )
                     ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"205";" illegal start of expression
        return 0.0;
        ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"205";" ';' expected
        return 0.0;
              ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"205";" illegal start of expression
        return 0.0;
                  ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"205";" ')' expected
        return 0.0;
                   ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"208";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"208";" ';' expected
    public static void main(String[] args) {
          ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"208";" illegal start of expression
    public static void main(String[] args) {
                  ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"208";" ';' expected
    public static void main(String[] args) {
                           ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"208";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T05_22_45.530Z";"hw3.java";"212";" reached end of file while parsing
}
 ^
12 errors
"
"c061d1f68b6b074424d6fdebae21d15b25686750";"2020-10-08T15_31_02.290Z";"hw3.java";"20";" <identifier> expected
        str. = str.toUpperCase();
            ^
1 error
"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-08T22_14_47.937Z";"hw3.java";"39";" illegal start of expression
        String str =;
                    ^
1 error
"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-08T23_57_31.989Z";"hw3.java";"95";" <identifier> expected
    public static int shift(int symbol, offset) {
                                              ^
1 error
"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-09T00_56_37.304Z";"hw3.java";"85";" ';' expected
        int[] stringToSymbolArray(message);
                                 ^
/"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-09T00_56_37.304Z";"hw3.java";"85";" not a statement
        int[] stringToSymbolArray(message);
                                  ^
/"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-09T00_56_37.304Z";"hw3.java";"85";" ';' expected
        int[] stringToSymbolArray(message);
                                         ^
/"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-09T00_56_37.304Z";"hw3.java";"86";" illegal start of expression
        for (i = 0; i < )
                        ^
/"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-09T00_56_37.304Z";"hw3.java";"87";" illegal start of expression
        return null;
        ^
/"
"c090aea6396949a3e236f180d10c0a6d2c0830c2";"2020-10-09T00_56_37.304Z";"hw3.java";"87";" ')' expected
        return null;
              ^
6 errors
"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-07T19_15_57.858Z";"hw3.java";"22";" illegal start of expression
        for(i = 0; i < )
                       ^
/"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-07T19_15_57.858Z";"hw3.java";"23";" illegal start of expression
        return null;
        ^
/"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-07T19_15_57.858Z";"hw3.java";"23";" ')' expected
        return null;
              ^
3 errors
"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-07T22_18_21.581Z";"hw3.java";"26";" ']' expected
            int[i] symbolArray = ourSymbolRepresentation;
                ^
/"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-07T22_18_21.581Z";"hw3.java";"26";" ';' expected
            int[i] symbolArray = ourSymbolRepresentation;
                 ^
2 errors
"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_48_26.239Z";"hw3.java";"92";" ']' expected
        int symbols[j] = stringToSymbolArray(message);
                    ^
/"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_48_26.239Z";"hw3.java";"92";" illegal start of expression
        int symbols[j] = stringToSymbolArray(message);
                     ^
/"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_48_26.239Z";"hw3.java";"107";" ']' expected
        int symbols[j] = stringToSymbolArray(cipher);
                    ^
/"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_48_26.239Z";"hw3.java";"107";" illegal start of expression
        int symbols[j] = stringToSymbolArray(cipher);
                     ^
4 errors
"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"94";" cannot find symbol
            int symbol = shift(symbols(i), key);
                               ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"95";" incompatible types"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"97";" cannot find symbol
        System.out.println(sentence);
                           ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"98";" cannot find symbol
        return sentence;
               ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"108";" cannot find symbol
        for(int i = 0; i < cipher.length; i++) {
                                 ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"109";" cannot find symbol
            int symbol = unshift(symbols(i), key);
                                 ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"110";" incompatible types"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T00_59_57.785Z";"hw3.java";"112";" cannot find symbol
        return sentence;
               ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"95";" incompatible types"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"97";" cannot find symbol
        System.out.println(sentence);
                           ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"98";" cannot find symbol
        return sentence;
               ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"109";" cannot find symbol
            int symbol = unshift(symbols(i), key);
                                 ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"110";" incompatible types"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"112";" cannot find symbol
        return sentence;
               ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"172";" cannot find symbol
            double[] frequency = findFrequencies(symbol);
                                                 ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"179";" cannot find symbol
        sentence = decrypt(cipher, crackKey);
        ^
  symbol"
"c0c9189b7b9396f01b6da23677de6c1f2ca8bba7";"2020-10-08T03_58_27.683Z";"hw3.java";"180";" cannot find symbol
        return sentence;  
               ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-04T20_56_16.996Z";"hw3.java";"21";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-04T20_56_16.996Z";"hw3.java";"22";" ';' expected
        stringToSymbolArray()
                             ^
2 errors
"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-06T01_59_16.183Z";"hw3.java";"119";" class, interface, or enum expected
}
^
1 error
"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-06T21_41_57.993Z";"hw3.java";"135";" bad operand types for binary operator '-'
        int numberKey = (int)(args[2] - 'A');
                                      ^
  first type"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-07T02_46_38.084Z";"hw3.java";"146";" repeated modifier
    public static void main(String[] args) {
    ^
/"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-07T02_46_38.084Z";"hw3.java";"146";" repeated modifier
    public static void main(String[] args) {
           ^
2 errors
"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-07T03_11_43.667Z";"hw3.java";"146";" missing return statement
    }
    ^
1 error
"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-07T22_38_48.325Z";"hw3.java";"147";" missing return statement
    }
    ^
1 error
"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T04_04_05.792Z";"hw3.java";"179";" cannot find symbol
                String cipher = encrypt(text, numberKey);
                                              ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T04_04_05.792Z";"hw3.java";"183";" cannot find symbol
                String decrypted = decrypt(text, numberKey);
                                                 ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T14_55_01.722Z";"hw3.java";"190";" cannot find symbol
                String cipher = encrypt(text, numberKey);
                                              ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T14_55_01.722Z";"hw3.java";"194";" cannot find symbol
                String decrypted = decrypt(text, numberKey);
                                                 ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T15_25_04.013Z";"hw3.java";"198";" cannot find symbol
                String cipher = encrypt(text, numberKey);
                                              ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T15_25_04.013Z";"hw3.java";"202";" cannot find symbol
                String decrypted = decrypt(text, numberKey);
                                                 ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T15_58_26.773Z";"hw3.java";"204";" cannot find symbol
                String cipher = encrypt(text, numberKey);
                                              ^
  symbol"
"c1628523a89e117f0d7a76d14a1620df270e8677";"2020-10-08T15_58_26.773Z";"hw3.java";"208";" cannot find symbol
                String decrypted = decrypt(text, numberKey);
                                                 ^
  symbol"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-04T03_17_26.568Z";"hw3.java";"217";" ';' expected
        arrayNew = findFrequencies('THE DOG IS COOL.')
                                                      ^
1 error
"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-04T15_27_53.573Z";"hw3.java";"216";" ';' expected
        int[] arrayFun = {1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 5, 5, 5, 5, 5, 3,3, 3, 3, 3, 3, 6, 6,6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12}
                                                                                                                                                                                                                 ^
1 error
"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-05T03_40_09.706Z";"hw3.java";"212";" missing return statement
    }
    ^
1 error
"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-05T14_36_00.235Z";"hw3.java";"220";" ';' expected
        for (int i = 0, i < 26, i++) {
                         ^
/"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-05T14_36_00.235Z";"hw3.java";"220";" illegal start of type
        for (int i = 0, i < 26, i++) {
                            ^
/"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-05T14_36_00.235Z";"hw3.java";"220";" illegal start of expression
        for (int i = 0, i < 26, i++) {
                              ^
/"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-05T14_36_00.235Z";"hw3.java";"220";" ';' expected
        for (int i = 0, i < 26, i++) {
                               ^
/"
"c1c1f0a1fe3eee55891c2f5d9a921e0c0d7e1005";"2020-10-05T14_36_00.235Z";"hw3.java";"220";" illegal start of expression
        for (int i = 0, i < 26, i++) {
                                   ^
5 errors
"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-06T04_03_54.209Z";"hw3.java";"122";" ']' expected
        char[] stringRep = symbolArrayToString[2 14 13 10];
                                                ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-06T04_03_54.209Z";"hw3.java";"122";" not a statement
        char[] stringRep = symbolArrayToString[2 14 13 10];
                                                    ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-06T04_03_54.209Z";"hw3.java";"122";" ';' expected
        char[] stringRep = symbolArrayToString[2 14 13 10];
                                                      ^
3 errors
"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-06T20_48_51.463Z";"hw3.java";"122";" ')' expected
        char[] stringRep = symbolArrayToString(2 14 13 10);
                                                ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-06T20_48_51.463Z";"hw3.java";"122";" not a statement
        char[] stringRep = symbolArrayToString(2 14 13 10);
                                                    ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-06T20_48_51.463Z";"hw3.java";"122";" ';' expected
        char[] stringRep = symbolArrayToString(2 14 13 10);
                                                      ^
3 errors
"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T03_07_50.383Z";"hw3.java";"89";" ';' expected
            currentSymbol += key
                                ^
1 error
"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T03_27_23.284Z";"hw3.java";"91";" incompatible types"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"89";" illegal start of expression
    }
    ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"94";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"94";" ';' expected
    public static String decrypt(String cipher, int key) {
          ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"94";" ';' expected
    public static String decrypt(String cipher, int key) {
                                ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"94";" <identifier> expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"94";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"94";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"c2a32a9dd1f7c70f0249589f590c01385948a7b4";"2020-10-08T22_21_46.712Z";"hw3.java";"102";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
15 errors
"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-06T21_47_54.084Z";"hw3.java";"19";" ';' expected
    String str.toUpperCase();
              ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-06T21_47_54.084Z";"hw3.java";"19";" invalid method declaration; return type required
    String str.toUpperCase();
               ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-06T21_47_54.084Z";"hw3.java";"20";" <identifier> expected
    str = str.toUpperCase;
       ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-06T21_47_54.084Z";"hw3.java";"26";" illegal start of expression
            str.charAt(i) = ;
                            ^
4 errors
"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T05_51_51.383Z";"hw3.java";"27";" ';' expected
            String str.charAt(i);
                      ^
1 error
"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T16_52_49.570Z";"hw3.java";"36";" incompatible types"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T16_52_49.570Z";"hw3.java";"39";" incompatible types"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T18_54_40.826Z";"hw3.java";"30";" cannot find symbol
        str = str.toUppercase();
                 ^
  symbol"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T19_19_11.474Z";"hw3.java";"30";" cannot find symbol
        str = str.toUppercase();
                 ^
  symbol"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T19_19_11.474Z";"hw3.java";"57";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T19_35_18.588Z";"hw3.java";"36";" incompatible types"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T20_20_49.564Z";"hw3.java";"29";" cannot find symbol
        int[] newArray = new int[(str.length)];
                                     ^
  symbol"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T20_20_49.564Z";"hw3.java";"29";" illegal start of type
        int[] newArray = new int[(str.length)];
                                 ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-08T20_20_49.564Z";"hw3.java";"38";" incompatible types"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-09T21_05_39.736Z";"hw3.java";"115";" incompatible types"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-09T21_05_39.736Z";"hw3.java";"121";" incompatible types"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T01_21_28.718Z";"hw3.java";"182";" illegal start of expression
    }
    ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T01_21_28.718Z";"hw3.java";"184";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T01_21_28.718Z";"hw3.java";"184";" ';' expected
    public static void main(String[] args) {
          ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T01_21_28.718Z";"hw3.java";"184";" illegal start of expression
    public static void main(String[] args) {
                  ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T01_21_28.718Z";"hw3.java";"184";" ';' expected
    public static void main(String[] args) {
                           ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T01_21_28.718Z";"hw3.java";"184";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T01_21_28.718Z";"hw3.java";"190";" reached end of file while parsing
}
 ^
7 errors
"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T02_51_22.907Z";"hw3.java";"188";" illegal start of expression
    }
    ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T02_51_22.907Z";"hw3.java";"190";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T02_51_22.907Z";"hw3.java";"190";" ';' expected
    public static void main(String[] args) {
          ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T02_51_22.907Z";"hw3.java";"190";" illegal start of expression
    public static void main(String[] args) {
                  ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T02_51_22.907Z";"hw3.java";"190";" ';' expected
    public static void main(String[] args) {
                           ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T02_51_22.907Z";"hw3.java";"190";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T02_51_22.907Z";"hw3.java";"196";" reached end of file while parsing
}
 ^
7 errors
"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T03_16_35.069Z";"hw3.java";"203";" incompatible types"
"c3fc16e36541476612e0bb0f315be56cc89f2256";"2020-10-10T03_16_35.069Z";"hw3.java";"205";" incompatible types"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" ']' expected
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                 ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" <identifier> expected
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                  ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" illegal start of expression
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                     ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" ';' expected
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                      ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" illegal start of expression
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                         ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" ';' expected
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                          ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" illegal start of expression
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                             ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" ';' expected
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                              ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" illegal start of expression
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                                 ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" ';' expected
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                                  ^
/"
"c42a26e12767fd486062cdf3ac84420acbc71766";"2020-10-06T00_39_22.057Z";"hw3.java";"132";" illegal start of expression
        int random[] = new int [2, 14, 13, 18, 20, 11];
                                                     ^
11 errors
"
"c4655f02078e14a8504b692a8f7f62e3571ff38f";"2020-10-07T01_17_49.958Z";"hw3.java";"73";" ')' expected
        if ((symbol - offset >= 0) {
                                  ^
1 error
"
"c4655f02078e14a8504b692a8f7f62e3571ff38f";"2020-10-07T01_57_33.269Z";"hw3.java";"92";" cannot find symbol
        for (int i = 0; i < stringToSymbolArray.length; i++) {
                            ^
  symbol"
"c4655f02078e14a8504b692a8f7f62e3571ff38f";"2020-10-07T01_57_33.269Z";"hw3.java";"96";" incompatible types"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-03T23_57_59.777Z";"hw3.java";"100";" illegal start of expression
        for (int i = 0; )
                        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-03T23_57_59.777Z";"hw3.java";"101";" illegal start of expression
    }
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-03T23_57_59.777Z";"hw3.java";"101";" ')' expected
    }
     ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-03T23_57_59.777Z";"hw3.java";"104";" illegal start of statement
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-03T23_57_59.777Z";"hw3.java";"103";" reached end of file while parsing
}
 ^
5 errors
"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T02_40_10.638Z";"hw3.java";"116";" cannot find symbol
            System.out.print(a[i] + ' ');
                             ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"58";" illegal start of expression
        if () {
            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"62";" illegal start of type
        return 0;
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"62";" ';' expected
        return 0;
              ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"68";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"71";" class, interface, or enum expected
    }
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"76";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"79";" class, interface, or enum expected
    }
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"84";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"87";" class, interface, or enum expected
    }
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"92";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"95";" class, interface, or enum expected
    }
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"100";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"103";" class, interface, or enum expected
    }
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"108";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"111";" class, interface, or enum expected
    }
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"113";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"117";" class, interface, or enum expected
        int[] array = stringToSymbolArray(input);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"118";" class, interface, or enum expected
        for (int i = 0; i < array.length; i++) {
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"118";" class, interface, or enum expected
        for (int i = 0; i < array.length; i++) {
                        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"118";" class, interface, or enum expected
        for (int i = 0; i < array.length; i++) {
                                          ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"120";" class, interface, or enum expected
        }
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"124";" class, interface, or enum expected
        System.out.println(string);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T03_36_11.679Z";"hw3.java";"125";" class, interface, or enum expected
    }
    ^
23 errors
"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T04_59_32.487Z";"hw3.java";"121";" cannot find symbol
                  SymbolArray[i] = str.charAt(i) - 'A';
                  ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T04_59_32.487Z";"hw3.java";"121";" cannot find symbol
                  SymbolArray[i] = str.charAt(i) - 'A';
                              ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T04_59_32.487Z";"hw3.java";"121";" cannot find symbol
                  SymbolArray[i] = str.charAt(i) - 'A';
                                              ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-04T04_59_32.487Z";"hw3.java";"121";" cannot find symbol
                  SymbolArray[i] = str.charAt(i) - 'A';
                                   ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"100";" cannot find symbol
        int[] offsetNumber = new int[offset.length()]; // initialize array to store integer
                                     ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"102";" cannot find symbol
            offsetNumber[i] = offset.charAt(i) - 'A'; // account for ascii
                              ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"106";" cannot find symbol
        int[] array = stringToSymbolArray(input);
                                          ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"151";" cannot find symbol
        String string = symbolArrayToString(array);
                                            ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"155";" cannot find symbol
        int[] shiftedArray = new int[array.length]; // initialize shifted array
                                     ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"157";" cannot find symbol
            shiftedArray[i] = shift(array[i], offsetNumber[0]); // shift each element in array
                                    ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"157";" cannot find symbol
            shiftedArray[i] = shift(array[i], offsetNumber[0]); // shift each element in array
                                              ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"164";" cannot find symbol
        int[] unshiftedArray = new int[array.length]; // initialize unshifted array
                                       ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-05T22_53_00.288Z";"hw3.java";"166";" cannot find symbol
            unshiftedArray[i] = unshift(shiftedArray[i], offsetNumber[0]); // unshift each element in shifted array
                                                         ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T00_34_30.553Z";"hw3.java";"98";" int cannot be dereferenced
        int keyInteger = key.charAt(0) - 'A';
                            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T00_34_30.553Z";"hw3.java";"153";" cannot find symbol
        String string = symbolArrayToString(array);
                                            ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T00_34_30.553Z";"hw3.java";"158";" cannot find symbol
        int[] unshiftedArray = new int[array.length]; // initialize unshifted array
                                       ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T00_34_30.553Z";"hw3.java";"160";" cannot find symbol
            unshiftedArray[i] = unshift(shiftedArray[i], offsetNumber[0]); // unshift each element in shifted array
                                        ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T00_34_30.553Z";"hw3.java";"160";" cannot find symbol
            unshiftedArray[i] = unshift(shiftedArray[i], offsetNumber[0]); // unshift each element in shifted array
                                                         ^
  symbol"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"171";" illegal start of expression
        for (i = )
                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"172";" illegal start of expression
        return null;
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"172";" ';' expected
        return null;
              ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"172";" illegal start of expression
        return null;
                   ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"172";" ')' expected
        return null;
                    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
          ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                         ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" <identifier> expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                           ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                   ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" not a statement
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                     ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"183";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"183";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"183";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"183";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"183";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_18_13.079Z";"hw3.java";"198";" reached end of file while parsing
}
 ^
19 errors
"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"171";" illegal start of expression
        for (i = )
                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"172";" illegal start of expression
        return null;
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"172";" ';' expected
        return null;
              ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"172";" illegal start of expression
        return null;
                   ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"172";" ')' expected
        return null;
                    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
          ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                         ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" <identifier> expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                           ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                   ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" not a statement
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                     ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"178";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"183";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"183";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"183";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"183";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"183";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T02_30_38.916Z";"hw3.java";"197";" reached end of file while parsing
}
 ^
19 errors
"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"201";" illegal start of type
    public static String crack(String encrypted, ) {
                                                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"201";" ')' expected
    public static String crack(String encrypted, ) {
                                                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"201";" ';' expected
    public static String crack(String encrypted, ) {
                                                    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"203";" illegal start of type
        int[] encryptedArray = stringToSymbolArray(encrypted);
           ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"203";" <identifier> expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"203";" ';' expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
             ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"203";" illegal start of type
        int[] encryptedArray = stringToSymbolArray(encrypted);
                             ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"203";" <identifier> expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
                                                            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"209";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"224";" class, interface, or enum expected
        String encrypted = encrypt(message, keyInteger);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"225";" class, interface, or enum expected
        System.out.println(encrypted);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"228";" class, interface, or enum expected
        String decrypted = decrypt(encrypted, keyInteger);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"229";" class, interface, or enum expected
        System.out.println(decrypted);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_00_14.679Z";"hw3.java";"230";" class, interface, or enum expected
    }
    ^
14 errors
"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"201";" illegal start of type
    public static String crack(String encrypted, ) {
                                                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"201";" ')' expected
    public static String crack(String encrypted, ) {
                                                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"201";" ';' expected
    public static String crack(String encrypted, ) {
                                                    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"203";" illegal start of type
        int[] encryptedArray = stringToSymbolArray(encrypted);
           ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"203";" <identifier> expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"203";" ';' expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
             ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"203";" illegal start of type
        int[] encryptedArray = stringToSymbolArray(encrypted);
                             ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"203";" <identifier> expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
                                                            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"209";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"222";" class, interface, or enum expected
        int keyInteger = (int) key.charAt(0) - 'A';
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"227";" class, interface, or enum expected
        String encrypted = encrypt(message, keyInteger);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"228";" class, interface, or enum expected
        System.out.println(encrypted);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"231";" class, interface, or enum expected
        String decrypted = decrypt(encrypted, keyInteger);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"232";" class, interface, or enum expected
        System.out.println(decrypted);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_31_17.745Z";"hw3.java";"233";" class, interface, or enum expected
    }
    ^
15 errors
"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"201";" illegal start of type
    public static String crack(String encrypted, ) {
                                                 ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"201";" ')' expected
    public static String crack(String encrypted, ) {
                                                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"201";" ';' expected
    public static String crack(String encrypted, ) {
                                                    ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"203";" illegal start of type
        int[] encryptedArray = stringToSymbolArray(encrypted);
           ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"203";" <identifier> expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"203";" ';' expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
             ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"203";" illegal start of type
        int[] encryptedArray = stringToSymbolArray(encrypted);
                             ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"203";" <identifier> expected
        int[] encryptedArray = stringToSymbolArray(encrypted);
                                                            ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"209";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"226";" class, interface, or enum expected
        int keyInteger = (int) key.charAt(0) - 'A';
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"231";" class, interface, or enum expected
        String encrypted = encrypt(message, keyInteger);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"232";" class, interface, or enum expected
        System.out.println(encrypted);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"235";" class, interface, or enum expected
        String decrypted = decrypt(encrypted, keyInteger);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"236";" class, interface, or enum expected
        System.out.println(decrypted);
        ^
/"
"c59765dbf72a19a26a730a0dee227a097a1abbca";"2020-10-06T04_50_01.791Z";"hw3.java";"237";" class, interface, or enum expected
    }
    ^
15 errors
"
"c7aadf4912f25ac6317e98926d87a85c772adc2d";"2020-10-08T16_12_03.564Z";"hw3.java";"22";" method stringToSymbolArray in class Caesar cannot be applied to given types;
        stringToSymbolArray();
        ^
  required"
"c7aadf4912f25ac6317e98926d87a85c772adc2d";"2020-10-09T15_34_14.134Z";"hw3.java";"30";" cannot find symbol
        return System.out.println(ASCIIRepresentation);
                                  ^
  symbol"
"c7aadf4912f25ac6317e98926d87a85c772adc2d";"2020-10-09T16_08_58.410Z";"hw3.java";"29";" missing return statement
    }
    ^
1 error
"
"c7aadf4912f25ac6317e98926d87a85c772adc2d";"2020-10-11T03_59_12.869Z";"hw3.java";"201";" unclosed comment
    /** 
    ^
/"
"c7aadf4912f25ac6317e98926d87a85c772adc2d";"2020-10-11T03_59_12.869Z";"hw3.java";"234";" reached end of file while parsing
2 errors
"
"c7daed73009c0d31a410be0d1212d298cf9b7f92";"2020-10-08T22_01_47.933Z";"hw3.java";"205";" missing return statement
    public static int crack() {}
                               ^
1 error
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-05T20_04_04.298Z";"hw3.java";"20";" cannot find symbol
        int ourSymbolRepresentation = (int) letter - 'A';
                                            ^
  symbol"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-05T20_42_44.009Z";"hw3.java";"20";" cannot find symbol
        str upper = str.toUpperCase();
        ^
  symbol"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-05T20_42_44.009Z";"hw3.java";"23";" cannot find symbol
        int ourSymbolRepresentation = (int) letter - 'A';
                                            ^
  symbol"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"76";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"76";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"76";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"76";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"76";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"76";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"84";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"92";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-06T23_35_28.671Z";"hw3.java";"100";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
30 errors
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-07T05_32_17.841Z";"hw3.java";"20";" cannot find symbol
        In inStream = new In(file);
                             ^
  symbol"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-07T05_32_17.841Z";"hw3.java";"21";" incompatible types"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-07T23_18_06.801Z";"hw3.java";"27";" not a statement
        else (args[0].equals('decrypt')) {
             ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-07T23_18_06.801Z";"hw3.java";"27";" ';' expected
        else (args[0].equals('decrypt')) {
                                        ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-07T23_18_06.801Z";"hw3.java";"154";" illegal start of expression
        if ()
            ^
3 errors
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T01_11_00.166Z";"hw3.java";"172";" illegal start of expression
            store[i] = ;
                       ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T01_11_00.166Z";"hw3.java";"182";" ';' expected
        Math.abs()
                  ^
2 errors
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T02_30_14.806Z";"hw3.java";"172";" illegal start of expression
            store[i] = ;
                       ^
/"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T02_30_14.806Z";"hw3.java";"182";" ';' expected
        Math.abs()
                  ^
2 errors
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T03_25_34.551Z";"hw3.java";"172";" illegal start of expression
            store[i] = ;
                       ^
1 error
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T03_45_41.560Z";"hw3.java";"172";" illegal start of expression
            store[i] = ;
                       ^
1 error
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T05_34_19.735Z";"hw3.java";"172";" illegal start of expression
            store[i] = ;
                       ^
1 error
"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T06_30_29.599Z";"hw3.java";"219";" incompatible types"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T06_42_30.441Z";"hw3.java";"219";" incompatible types"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T06_56_19.806Z";"hw3.java";"222";" incompatible types"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T07_22_33.377Z";"hw3.java";"222";" incompatible types"
"c8644b4cd562816bcc1a3c5dd236ec0d1a178ee1";"2020-10-08T20_56_32.704Z";"hw3.java";"222";" incompatible types"
"caf15d25f4ffc5852c73026246492a2fa5a850e2";"2020-10-08T23_59_50.522Z";"hw3.java";"191";" ';' expected
            totalScore += Math.abs()
                                    ^
1 error
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T00_43_42.471Z";"hw3.java";"26";" cannot find symbol
        for (int i = 0; i <= str.length; i++) {
                                ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T00_43_42.471Z";"hw3.java";"27";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T00_43_42.471Z";"hw3.java";"30";" cannot find symbol
        return symbolArray;
               ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T00_43_42.471Z";"hw3.java";"103";" cannot find symbol
        System.out.println(symbolArray);
                           ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T15_59_20.058Z";"hw3.java";"26";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T15_59_20.058Z";"hw3.java";"27";" cannot find symbol
        for (int i = 0; i <= str.length; i++) {
                                ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T15_59_20.058Z";"hw3.java";"28";" cannot find symbol
            char letter = charAt(i);
                          ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T15_59_20.058Z";"hw3.java";"104";" cannot find symbol
        System.out.println(symbolArray);
                           ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T22_30_54.350Z";"hw3.java";"45";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-05T22_30_54.350Z";"hw3.java";"49";" array required, but String found
            toString[i] = ourNumberRepresentation;
                    ^
2 errors
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T06_28_19.203Z";"hw3.java";"131";" no suitable method found for length(int)
            frequencies[i] = filename.length(i);
                                     ^
    method CharSequence.length() is not applicable
      (actual and formal argument lists differ in length)
    method String.length() is not applicable
      (actual and formal argument lists differ in length)
1 error
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T06_48_25.461Z";"hw3.java";"131";" ']' expected
            double frequencies[i] = new double[filename.length(i)];
                               ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T06_48_25.461Z";"hw3.java";"131";" illegal start of expression
            double frequencies[i] = new double[filename.length(i)];
                                ^
2 errors
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T08_07_47.633Z";"hw3.java";"162";" ';' expected
        for (int i = 0; i < symbols.length, i++) {
                                          ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T08_07_47.633Z";"hw3.java";"162";" ')' expected
        for (int i = 0; i < symbols.length, i++) {
                                           ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T08_07_47.633Z";"hw3.java";"162";" illegal start of expression
        for (int i = 0; i < symbols.length, i++) {
                                               ^
3 errors
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T08_31_16.125Z";"hw3.java";"150";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T08_31_16.125Z";"hw3.java";"172";" bad operand type double[] for unary operator '++'
                    numberTimes++;
                               ^
2 errors
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T13_54_30.880Z";"hw3.java";"150";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T13_54_30.880Z";"hw3.java";"172";" bad operand type int[] for unary operator '++'
                    numberTimes++;
                               ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T13_54_30.880Z";"hw3.java";"177";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T15_28_31.785Z";"hw3.java";"177";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T20_28_00.792Z";"hw3.java";"150";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T20_28_00.792Z";"hw3.java";"152";" array required, but String found
            filename[i] = frequencies[i];
                    ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T20_28_00.792Z";"hw3.java";"182";" cannot find symbol
        return frequency;
               ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T20_40_54.949Z";"hw3.java";"150";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T20_40_54.949Z";"hw3.java";"152";" array required, but int found
            frequencies[i] = stringLength[i];
                                         ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T20_40_54.949Z";"hw3.java";"182";" cannot find symbol
        return frequency;
               ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T21_03_49.596Z";"hw3.java";"150";" incompatible types"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T21_03_49.596Z";"hw3.java";"152";" array required, but int found
            frequencies[i] = stringLength[i];
                                         ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-08T21_03_49.596Z";"hw3.java";"182";" cannot find symbol
        return frequency;
               ^
  symbol"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-09T00_03_29.986Z";"hw3.java";"207";" <identifier> expected
    public static String 
                        ^
1 error
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-09T00_25_41.353Z";"hw3.java";"209";" missing return statement
    }
    ^
1 error
"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-09T01_39_08.002Z";"hw3.java";"212";" array required, but double found
        double minScore = score[0];
                               ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-09T01_39_08.002Z";"hw3.java";"214";" array required, but double found
            if (score[i] < minScore) {
                     ^
/"
"ccc40dc59deb20f9d2aa162f32a897042c6ff8a1";"2020-10-09T01_39_08.002Z";"hw3.java";"215";" array required, but double found
                minScore = score[i];
                                ^
3 errors
"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T08_04_48.127Z";"hw3.java";"44";" cannot find symbol
            String originalMessage = String.valueOf;
                                           ^
  symbol"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T08_04_48.127Z";"hw3.java";"47";" non-static variable originalMessage cannot be referenced from a static context
        return originalMessage;
               ^
2 errors
"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T08_27_23.077Z";"hw3.java";"47";" variable originalMessage might not have been initialized
        return originalMessage;
               ^
1 error
"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T18_21_07.448Z";"hw3.java";"56";" ';' expected
            char shiftedSymbol = (char) (symbol + offset)
                                                         ^
1 error
"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T18_43_20.692Z";"hw3.java";"57";" ';' expected
            return shiftedSymbol
                                ^
1 error
"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T19_16_27.794Z";"hw3.java";"84";" cannot find symbol
        for (int i = 0; i < symbolArray.length; i++) {
                            ^
  symbol"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T19_16_27.794Z";"hw3.java";"85";" cannot find symbol
            shift (symbolArray[i], key);
                   ^
  symbol"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T19_33_22.223Z";"hw3.java";"84";" cannot find symbol
        for (int i = 0; i < message.length; i++) {
                                   ^
  symbol"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-07T19_33_22.223Z";"hw3.java";"85";" cannot find symbol
            shift (symbolArray[i], key);
                   ^
  symbol"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-08T01_18_28.250Z";"hw3.java";"142";" cannot find symbol
        In inStream = new In(filename); 
                             ^
  symbol"
"ce42cdf26990c18f000612e72044b1c5ec54213f";"2020-10-08T01_18_28.250Z";"hw3.java";"143";" method readAll in class In cannot be applied to given types;
        String filename = inStream.readAll(args[2]);
                                  ^
  required"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-04T23_14_09.792Z";"hw3.java";"47";" incompatible types"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_26_53.136Z";"hw3.java";"144";" '.class' expected
        for (int i = 0; i < message.length[]; i++) {
                                            ^
1 error
"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"144";" '.class' expected
        for (int i = 0; i < message.length[]; i++) {
                                            ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"147";" '.class' expected
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                               ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"147";" illegal start of type
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                      ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"147";" not a statement
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                    ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"147";" ';' expected
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                       ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"147";" illegal start of expression
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"147";" ';' expected
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                         ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"150";" 'else' without 'if'
            else {
            ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"154";" illegal start of type
        return dictionaryFrequencies;
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"154";" ';' expected
        return dictionaryFrequencies;
              ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"160";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"163";" class, interface, or enum expected
    }
    ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"168";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"171";" class, interface, or enum expected
    }
    ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"173";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"175";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"176";" class, interface, or enum expected
        char keyChar = args[2].charAt(0);
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"177";" class, interface, or enum expected
        int key = (int)keyChar - (int)'A';
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"178";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"179";" class, interface, or enum expected
        String message = inStream.readAll();
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"180";" class, interface, or enum expected
        if (commandType.equals('encrypt')) {
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"182";" class, interface, or enum expected
        }
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T00_58_56.591Z";"hw3.java";"185";" class, interface, or enum expected
        }
        ^
23 errors
"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"147";" '.class' expected
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                               ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"147";" illegal start of type
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                      ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"147";" not a statement
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                    ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"147";" ';' expected
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                       ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"147";" illegal start of expression
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"147";" ';' expected
            if (currentIntCharacter > 25 || int(currentIntCharacter < 0)) {
                                                                         ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"150";" 'else' without 'if'
            else {
            ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"155";" illegal start of type
        return dictionaryFrequencies;
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"155";" ';' expected
        return dictionaryFrequencies;
              ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"161";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"164";" class, interface, or enum expected
    }
    ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"169";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"172";" class, interface, or enum expected
    }
    ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"174";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"176";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"179";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"180";" class, interface, or enum expected
        String message = inStream.readAll();
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"181";" class, interface, or enum expected
        if (commandType.equals('encrypt')) {
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"183";" class, interface, or enum expected
        }
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"186";" class, interface, or enum expected
        }
        ^
/"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T01_32_24.789Z";"hw3.java";"189";" class, interface, or enum expected
        }
        ^
21 errors
"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T02_32_02.560Z";"hw3.java";"141";" cannot find symbol
        String filenameDict = args[1];
                              ^
  symbol"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T02_32_02.560Z";"hw3.java";"151";" cannot find symbol
                dictionaryFrequences[currentIntCharacter - 1]++;
                ^
  symbol"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T02_32_02.560Z";"hw3.java";"153";" cannot find symbol
            System.out.print('This is array symbol rn"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T02_32_02.560Z";"hw3.java";"182";" cannot find symbol
            encrypt(message, key);
                             ^
  symbol"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T02_32_02.560Z";"hw3.java";"185";" cannot find symbol
            decrypt(message, key);
                             ^
  symbol"
"ce441af47af87f111d102b2233f3d9a5072e1add";"2020-10-08T04_41_17.505Z";"hw3.java";"158";" cannot find symbol
        String filenameMsgTxt = args[1];
                                ^
  symbol"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-05T21_51_03.314Z";"hw3.java";"23";" cannot find symbol
            char current = s.charAt(i);
                           ^
  symbol"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T01_41_50.690Z";"hw3.java";"116";" array dimension missing
        return null;
        ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T01_41_50.690Z";"hw3.java";"116";" not a statement
        return null;
               ^
2 errors
"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T02_25_06.844Z";"hw3.java";"129";" incompatible types"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"136";" not a statement
                letterFreq[] = counter / symbols.length;
                          ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"136";" ';' expected
                letterFreq[] = counter / symbols.length;
                            ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"136";" not a statement
                letterFreq[] = counter / symbols.length;
                                       ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"139";" illegal start of type
        return letterFreq;
        ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"139";" ';' expected
        return letterFreq;
              ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"142";" class, interface, or enum expected
    array = {7, 4, 11, 11, 14}
    ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"148";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"151";" class, interface, or enum expected
    }
    ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"153";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"172";" class, interface, or enum expected
        double[] testResult = findFrequencies(test);
        ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"173";" class, interface, or enum expected
        for (int i = 0; i < testResult.length; i++) {
        ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"173";" class, interface, or enum expected
        for (int i = 0; i < testResult.length; i++) {
                        ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"173";" class, interface, or enum expected
        for (int i = 0; i < testResult.length; i++) {
                                               ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-07T23_21_04.730Z";"hw3.java";"175";" class, interface, or enum expected
        }
        ^
14 errors
"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-08T03_50_56.311Z";"hw3.java";"162";" ';' expected
            double[] cipherFreq = findFrequencies
                                                 ^
1 error
"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-08T21_24_33.609Z";"hw3.java";"165";" illegal start of expression
            if (score < )
                        ^
/"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-08T21_24_33.609Z";"hw3.java";"166";" illegal start of statement
        }
        ^
2 errors
"
"d095c107bc365afe22ee3154484d4eb12440aa56";"2020-10-08T21_59_47.479Z";"hw3.java";"206";" variable inStream is already defined in method main(String[])
        In inStream = new In(filename2);
           ^
1 error
"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-09T03_58_15.825Z";"hw3.java";"24";" cannot find symbol
        int[] ascii = new int[str.length]; // create array
                                 ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-09T03_58_15.825Z";"hw3.java";"26";" cannot find symbol
        for (int j = 0; j < str.length; j++){ // for loop
                               ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-09T03_58_15.825Z";"hw3.java";"44";" cannot find symbol
        for (int j = 0; i < symbols.length; j++){ // for loop
                        ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-09T03_58_15.825Z";"hw3.java";"49";" cannot find symbol
        str = str.toUpperCase; 
                 ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-11T00_35_16.437Z";"hw3.java";"24";" cannot find symbol
        int[] ascii = new int[str.length]; // create array
                                 ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-11T00_35_16.437Z";"hw3.java";"26";" cannot find symbol
        for (int j = 0; j < str.length; j++){ // for loop
                               ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-11T00_35_16.437Z";"hw3.java";"49";" cannot find symbol
        str = str.toUpperCase; 
                 ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-11T00_51_01.507Z";"hw3.java";"24";" cannot find symbol
        int[] ascii = new int[str.length]; // create array
                                 ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-11T00_51_01.507Z";"hw3.java";"26";" cannot find symbol
        for (int j = 0; j < str.length; j++){ // for loop
                               ^
  symbol"
"d148af6f7dbcd9232375295c6a1cd1b08e885dd5";"2020-10-11T00_51_01.507Z";"hw3.java";"49";" cannot find symbol
        str = str.toUpperCase; 
                 ^
  symbol"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T17_53_59.347Z";"hw3.java";"30";" invalid method declaration; return type required
    stringToSymbolArray('CONSUL');
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T17_53_59.347Z";"hw3.java";"30";" illegal start of type
    stringToSymbolArray('CONSUL');
                        ^
2 errors
"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_12_32.872Z";"hw3.java";"30";" invalid method declaration; return type required
    stringToSymbolArray('CONSUL');
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_12_32.872Z";"hw3.java";"30";" illegal start of type
    stringToSymbolArray('CONSUL');
                        ^
2 errors
"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" illegal start of type
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" ')' expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
              ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" illegal start of type
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                 ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" <identifier> expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" ';' expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                   ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" > expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                          ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" <identifier> expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                           ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" '(' expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                   ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" illegal start of type
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" <identifier> expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                     ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" ';' expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                      ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" <identifier> expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                             ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" <identifier> expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                                ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" illegal start of type
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" <identifier> expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                                   ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"30";" ';' expected
    for (int i = 0; i< stringToSymbolArray('CONSUL')[].length; i++) {
                                                                     ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" illegal start of type
        System.out.print(stringToSymbolArray('CONSUL')[i]);
              ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" ';' expected
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" invalid method declaration; return type required
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                   ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" <identifier> expected
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                                            ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" ';' expected
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                                             ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" illegal start of type
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                                                     ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" <identifier> expected
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                                                      ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" ';' expected
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                                                       ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" illegal start of type
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                                                        ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"31";" <identifier> expected
        System.out.print(stringToSymbolArray('CONSUL')[i]);
                                                         ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"42";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"45";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"50";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"53";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"58";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"61";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"66";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"69";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"74";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"77";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"82";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"85";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"90";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"93";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"98";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"101";" class, interface, or enum expected
    }
    ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T18_38_53.559Z";"hw3.java";"103";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
43 errors
"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T21_11_27.617Z";"hw3.java";"42";" cannot find symbol
            messageString.charAt(i) = (char) (symbols[i] + 'A');
                         ^
  symbol"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T21_11_27.617Z";"hw3.java";"44";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T22_15_28.273Z";"hw3.java";"42";" cannot find symbol
            messageString.charAt(i) = (char) (symbols[i] + 'A');
                         ^
  symbol"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T22_15_28.273Z";"hw3.java";"44";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T22_15_28.273Z";"hw3.java";"52";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T22_15_28.273Z";"hw3.java";"53";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T22_15_28.273Z";"hw3.java";"61";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T22_15_28.273Z";"hw3.java";"62";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T23_11_30.096Z";"hw3.java";"53";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T23_11_30.096Z";"hw3.java";"54";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T23_11_30.096Z";"hw3.java";"62";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-07T23_11_30.096Z";"hw3.java";"63";" incompatible types"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-08T21_39_57.734Z";"hw3.java";"109";" cannot find symbol
        int[] fileConverted = stringToSymbolArray(textComplete);
                                                  ^
  symbol"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-08T21_39_57.734Z";"hw3.java";"162";" cannot find symbol
        double[] testArray = dictionaryFrequenciesArr(filename);
                             ^
  symbol"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-08T21_39_57.734Z";"hw3.java";"163";" cannot find symbol
        for (int i = 0; i < arr.length; i++) {
                            ^
  symbol"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-08T23_17_37.756Z";"hw3.java";"111";" ')' expected
        for ((int i = 0; i < textComplete.length; i++) {
                   ^
/"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-08T23_17_37.756Z";"hw3.java";"111";" not a statement
        for ((int i = 0; i < textComplete.length; i++) {
             ^
2 errors
"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-10T01_28_06.590Z";"hw3.java";"152";" cannot find symbol
        scoreFreq = Math.abs(currentFreqs[i] - english[i]);
                                          ^
  symbol"
"d22db1196fa0ac6d2dcc909f62b7cc18b7780057";"2020-10-10T01_28_06.590Z";"hw3.java";"152";" cannot find symbol
        scoreFreq = Math.abs(currentFreqs[i] - english[i]);
                                                       ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T20_59_59.342Z";"hw3.java";"20";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T20_59_59.342Z";"hw3.java";"21";" ';' expected
        int [] stringtoSymbol = (int) str
                                         ^
2 errors
"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T21_10_24.614Z";"hw3.java";"21";" incompatible types"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T22_18_50.427Z";"hw3.java";"21";" cannot find symbol
        int [] inputString = new int[str.length];
                                        ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T22_18_50.427Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T22_18_50.427Z";"hw3.java";"23";" cannot find symbol
            inputString[i] = str.CharAt(i);
                                ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T23_39_14.947Z";"hw3.java";"21";" cannot find symbol
        int [] inputString = new int[str.length];
                                        ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-05T23_39_14.947Z";"hw3.java";"22";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-06T05_08_45.941Z";"hw3.java";"29";" unreachable statement
        System.out.println(stringToSymbolArray('CONSUL'));
        ^
/"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-06T05_08_45.941Z";"hw3.java";"30";" missing return statement
    }
    ^
2 errors
"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-07T03_30_06.544Z";"hw3.java";"57";" ';' expected
        zeroSymbol = symbol - 65
                                ^
/"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-07T03_30_06.544Z";"hw3.java";"58";" ';' expected
        zeroOffset = offset
                           ^
2 errors
"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-07T04_02_30.568Z";"hw3.java";"59";" ';' expected
            int shiftOutput
                           ^
1 error
"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_15_33.850Z";"hw3.java";"92";" '.class' expected
        symbolArrayToString(encryptArray[]);
                                          ^
1 error
"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_36_45.702Z";"hw3.java";"87";" cannot find symbol
        int[] encryptArray = new int [intEncoding.length];
                                      ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_36_45.702Z";"hw3.java";"88";" cannot find symbol
        for (int i = 0; i < intEncoding.length; i++ ) {
                            ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_36_45.702Z";"hw3.java";"89";" cannot find symbol
            shift(intEncoding[i], key);
                  ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_36_45.702Z";"hw3.java";"90";" cannot find symbol
            encryptArray[i] = shiftOutput;
                              ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_36_45.702Z";"hw3.java";"93";" cannot find symbol
        return messageText;
               ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_59_12.556Z";"hw3.java";"87";" cannot find symbol
        int[] encryptArray = new int [intEncoding.length];
                                      ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_59_12.556Z";"hw3.java";"88";" cannot find symbol
        for (int i = 0; i < intEncoding.length; i++ ) {
                            ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_59_12.556Z";"hw3.java";"89";" cannot find symbol
            shift(intEncoding[i], key);
                  ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_59_12.556Z";"hw3.java";"90";" cannot find symbol
            encryptArray[i] = shiftOutput;
                              ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T14_59_12.556Z";"hw3.java";"93";" cannot find symbol
        return messageText;
               ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T15_42_53.207Z";"hw3.java";"87";" cannot find symbol
        int[] encryptArray = new int [intEncoding.length];
                                      ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T15_42_53.207Z";"hw3.java";"88";" cannot find symbol
        for (int i = 0; i < intEncoding.length; i++ ) {
                            ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T15_42_53.207Z";"hw3.java";"89";" cannot find symbol
            shift(intEncoding[i], key);
                  ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T15_42_53.207Z";"hw3.java";"90";" cannot find symbol
            encryptArray[i] = shiftOutput;
                              ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T16_59_15.238Z";"hw3.java";"92";" incompatible types"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-08T23_09_59.102Z";"hw3.java";"132";" cannot find symbol
        System.out.println(inStreamreadAll(args[1]));
                           ^
  symbol"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-09T03_56_51.556Z";"hw3.java";"169";" ';' expected
        System.out.println(scoreFrequencies(getDictionaryFrequencies('english.txt'), findFrequencies(stringToSymbolArray())))
                                                                                                                             ^
1 error
"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-09T04_49_22.132Z";"hw3.java";"148";" ';' expected
        String message = inStream.readAll()
                                           ^
/"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-09T04_49_22.132Z";"hw3.java";"150";" '.class' expected
            encrypt(message, int i);
                                 ^
/"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-09T04_49_22.132Z";"hw3.java";"150";" ';' expected
            encrypt(message, int i);
                                  ^
/"
"d4389a01a42868ac533884b4b8b94af7a65121a6";"2020-10-09T04_49_22.132Z";"hw3.java";"171";" ';' expected
        System.out.println(scoreFrequencies(getDictionaryFrequencies('english.txt'), findFrequencies(stringToSymbolArray())))
                                                                                                                             ^
4 errors
"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-07T10_48_32.338Z";"hw3.java";"98";" <identifier> expected
    }ll
       ^
/"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-07T10_48_32.338Z";"hw3.java";"100";" reached end of file while parsing
}
 ^
2 errors
"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-07T10_59_52.327Z";"hw3.java";"97";" cannot find symbol
    public static vioid main(String[] args) {
                  ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T00_54_24.507Z";"hw3.java";"45";" cannot find symbol
        for (int i = 0; i < str.length(); i++){
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T00_54_24.507Z";"hw3.java";"46";" cannot find symbol
            str.charAt(i) = (char) symbols[i] + 'A';
            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T00_54_24.507Z";"hw3.java";"49";" cannot find symbol
        return str;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"44";" cannot find symbol
        for (int i = 0; i < str.length(); i++){
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"45";" cannot find symbol
            str.charAt(i) = (char) symbols[i] + 'A';
            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"47";" cannot find symbol
        return str;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"56";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"57";" cannot find symbol
            symbol = symbols[i];
                     ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"64";" cannot find symbol
        return symbols;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"71";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"72";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                 ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"72";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                                        ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T03_32_23.326Z";"hw3.java";"73";" cannot find symbol
                symbols[i] -= offset;
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"45";" cannot find symbol
        for (int i = 0; i < str.length(); i++){
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"46";" cannot find symbol
            if ((str.charAt(i) >= 'A') && (str.charAt(i) <= 'Z')) {
                 ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"46";" cannot find symbol
            if ((str.charAt(i) >= 'A') && (str.charAt(i) <= 'Z')) {
                                           ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"47";" cannot find symbol
                str.charAt(i) = (char) symbols[i] + 'A';
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"50";" cannot find symbol
        return str;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"59";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"60";" cannot find symbol
            symbol = symbols[i];
                     ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"67";" cannot find symbol
        return symbols;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"74";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"75";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                 ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"75";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                                        ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T04_56_29.817Z";"hw3.java";"76";" cannot find symbol
                symbols[i] -= offset;
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"45";" cannot find symbol
        for (int i = 0; i < str.length(); i++){
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"46";" cannot find symbol
            if ((str.charAt(i) >= 'A') && (str.charAt(i) <= 'Z')) {
                 ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"46";" cannot find symbol
            if ((str.charAt(i) >= 'A') && (str.charAt(i) <= 'Z')) {
                                           ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"47";" cannot find symbol
                str.charAt(i) = (char) symbols[i] + 'A';
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"50";" cannot find symbol
        return str;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"59";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"60";" cannot find symbol
            symbol = symbols[i];
                     ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"67";" cannot find symbol
        return symbols;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"74";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"75";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                 ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"75";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                                        ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_02_39.248Z";"hw3.java";"76";" cannot find symbol
                symbols[i] -= offset;
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"43";" cannot find symbol
        for (int i = 0; i < str.length(); i++){
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"44";" cannot find symbol
            if ((str.charAt(i) >= 'A') && (str.charAt(i) <= 'Z')) {
                 ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"44";" cannot find symbol
            if ((str.charAt(i) >= 'A') && (str.charAt(i) <= 'Z')) {
                                           ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"45";" cannot find symbol
                str.charAt(i) = (char) symbols[i] + 'A';
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"48";" cannot find symbol
        return str;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"57";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"58";" cannot find symbol
            symbol = symbols[i];
                     ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"65";" cannot find symbol
        return symbols;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"72";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"73";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                 ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"73";" cannot find symbol
            if ((symbols[i] >= 'A') && (symbols[i] <= 'Z')) {
                                        ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"74";" cannot find symbol
                symbols[i] -= offset;
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T06_34_21.208Z";"hw3.java";"124";" cannot find symbol
        str = 'CONSUL';
        ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T08_18_00.036Z";"hw3.java";"48";" cannot find symbol
                str.charAt(i) = (char) symbols[i] + 'A';
                ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T08_18_00.036Z";"hw3.java";"51";" cannot find symbol
        return str;
               ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T08_48_17.836Z";"hw3.java";"49";" unexpected type
                str.charAt(i) = (char) symbols[i] + 'A';
                          ^
  required"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T18_59_10.536Z";"hw3.java";"72";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-08T19_09_30.881Z";"hw3.java";"72";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T01_46_11.469Z";"hw3.java";"197";" method scoreFrequencies(double[],double[]) is already defined in class Caesar
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                         ^
1 error
"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T02_59_35.429Z";"hw3.java";"200";" incompatible types"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T02_59_35.429Z";"hw3.java";"203";" cannot find symbol
        double[] dictionaryFrequencies = getDictionaryFrequencies(english.txt);
                                                                  ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T02_59_35.429Z";"hw3.java";"204";" incompatible types"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T02_59_35.429Z";"hw3.java";"205";" incompatible types"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T03_48_15.178Z";"hw3.java";"191";" cannot find symbol
        double[] dictionaryFrequencies = getDictionaryFrequencies(dictionary);
                                                                  ^
  symbol"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T03_48_15.178Z";"hw3.java";"239";" cannot find symbol
            case crack"
"d5cc740e95c44f2dbaeae9e413a3837747409278";"2020-10-09T03_48_15.178Z";"hw3.java";"239";" cannot find symbol
            case crack"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T11_46_39.143Z";"hw3.java";"96";" cannot find symbol
        if (task == encrypt) {
                    ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T11_46_39.143Z";"hw3.java";"99";" cannot find symbol
        else if (task == decrypt) {
                         ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T11_46_39.143Z";"hw3.java";"102";" cannot find symbol
        else if (task == crack) {
                         ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T15_58_29.758Z";"hw3.java";"40";" cannot find symbol
        String[] textString = new String[symbols.length()];
                                                ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T15_58_29.758Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T15_58_29.758Z";"hw3.java";"42";" cannot find symbol
            for (int j = 0; j < symbols.length(); i++) {
                                       ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T15_58_29.758Z";"hw3.java";"43";" incompatible types"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T15_58_29.758Z";"hw3.java";"45";" cannot find symbol
            textString[i] = (String) letter; 
                                     ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T16_23_12.569Z";"hw3.java";"40";" cannot find symbol
        String[] textString = new String[symbols.length()];
                                                ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T16_23_12.569Z";"hw3.java";"41";" cannot find symbol
        for (int i = 0; i < symbols.length(); i++) {
                                   ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T16_23_12.569Z";"hw3.java";"42";" cannot find symbol
            for (int j = 0; j < symbols.length(); i++) {
                                       ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T16_23_12.569Z";"hw3.java";"43";" incompatible types"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T16_23_12.569Z";"hw3.java";"45";" cannot find symbol
            textString[i] = (String) letter; 
                                     ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T17_36_30.212Z";"hw3.java";"43";" incompatible types"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T17_36_30.212Z";"hw3.java";"45";" cannot find symbol
            textString[i] = (String) letter; 
                                     ^
  symbol"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T21_14_08.375Z";"hw3.java";"42";" ']' expected
            char textString[i] = (char) (symbols[i] + 'A');                       
                            ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-05T21_14_08.375Z";"hw3.java";"42";" illegal start of expression
            char textString[i] = (char) (symbols[i] + 'A');                       
                             ^
2 errors
"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T09_12_53.517Z";"hw3.java";"42";" ']' expected
            char textString[i] = (char) (symbols[i] + 'A');                       
                            ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T09_12_53.517Z";"hw3.java";"42";" illegal start of expression
            char textString[i] = (char) (symbols[i] + 'A');                       
                             ^
2 errors
"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T14_27_16.480Z";"hw3.java";"140";" not a statement
        double[] 
              ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T14_27_16.480Z";"hw3.java";"140";" ';' expected
        double[] 
                ^
2 errors
"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"164";" illegal start of type
    public static char crack(String cipher, ) {
                                            ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"164";" ')' expected
    public static char crack(String cipher, ) {
                                             ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"164";" ';' expected
    public static char crack(String cipher, ) {
                                               ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" illegal start of type
        double[] diff = new double[26];
              ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" <identifier> expected
        double[] diff = new double[26];
               ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" ';' expected
        double[] diff = new double[26];
                ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" illegal start of type
        double[] diff = new double[26];
                      ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" <identifier> expected
        double[] diff = new double[26];
                       ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" ';' expected
        double[] diff = new double[26];
                           ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" illegal start of type
        double[] diff = new double[26];
                                  ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" <identifier> expected
        double[] diff = new double[26];
                                   ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"165";" ';' expected
        double[] diff = new double[26];
                                     ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"169";" ')' expected
                    decrypt(cipher, 1);
                                      ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"170";" ';' expected
                    ))) //????????
                     ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" illegal start of type
        for (int i = 0; i < diff.length; i++) {
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" ')' expected
        for (int i = 0; i < diff.length; i++) {
                  ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" illegal start of type
        for (int i = 0; i < diff.length; i++) {
                     ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" <identifier> expected
        for (int i = 0; i < diff.length; i++) {
                      ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" ';' expected
        for (int i = 0; i < diff.length; i++) {
                       ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" > expected
        for (int i = 0; i < diff.length; i++) {
                                ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" '(' expected
        for (int i = 0; i < diff.length; i++) {
                                       ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" <identifier> expected
        for (int i = 0; i < diff.length; i++) {
                                          ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" illegal start of type
        for (int i = 0; i < diff.length; i++) {
                                            ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" <identifier> expected
        for (int i = 0; i < diff.length; i++) {
                                             ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"172";" ';' expected
        for (int i = 0; i < diff.length; i++) {
                                               ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"173";" illegal start of type
            diff = scoreFrequencies(
                 ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" <identifier> expected
                findFrequencies(stringToSymbolArray(english.txt)), 
                               ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" ';' expected
                findFrequencies(stringToSymbolArray(english.txt)), 
                                ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" illegal start of type
                findFrequencies(stringToSymbolArray(english.txt)), 
                                                   ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" ';' expected
                findFrequencies(stringToSymbolArray(english.txt)), 
                                                           ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" <identifier> expected
                findFrequencies(stringToSymbolArray(english.txt)), 
                                                               ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" illegal start of type
                findFrequencies(stringToSymbolArray(english.txt)), 
                                                                ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" <identifier> expected
                findFrequencies(stringToSymbolArray(english.txt)), 
                                                                 ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"174";" ';' expected
                findFrequencies(stringToSymbolArray(english.txt)), 
                                                                  ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"175";" illegal start of type
                findFrequencies(stringToSymbolArray(
                               ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"176";" <identifier> expected
                    decrypt(cipher, i);
                           ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"176";" ';' expected
                    decrypt(cipher, i);
                            ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"176";" illegal start of type
                    decrypt(cipher, i);
                                  ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"176";" ';' expected
                    decrypt(cipher, i);
                                     ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"177";" illegal start of type
                    ))) //????????
                    ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"177";" ';' expected
                    ))) //????????
                     ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"177";" illegal start of type
                    ))) //????????
                      ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"177";" <identifier> expected
                    ))) //????????
                       ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"178";" > expected
            if (diff < minDiff) {
                              ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"178";" ')' expected
            if (diff < minDiff) {
                               ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"178";" ';' expected
            if (diff < minDiff) {
                                 ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"179";" illegal start of type
                minDiff = diff;
                        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"182";" class, interface, or enum expected
        }
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"184";" class, interface, or enum expected
    }
    ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"186";" class, interface, or enum expected
    public static void main(String[] args) {        
                  ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"188";" class, interface, or enum expected
        String file = args[1];
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"189";" class, interface, or enum expected
        String keyLetter = args[2];
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"190";" class, interface, or enum expected
        int key = (keyLetter.charAt(0) - 'A');
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"191";" class, interface, or enum expected
        In inStream = new In(file);         
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"192";" class, interface, or enum expected
       if (task.equals('encrypt')) {
       ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"194";" class, interface, or enum expected
            System.out.println(result);
            ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"195";" class, interface, or enum expected
        }
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"198";" class, interface, or enum expected
            System.out.println(result);
            ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"199";" class, interface, or enum expected
        }
        ^
/"
"d63d4cb3004981a57f0f8aa89708bb414a06f23e";"2020-10-06T15_49_50.585Z";"hw3.java";"205";" class, interface, or enum expected
        }     
        ^
60 errors
"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-07T21_05_52.251Z";"hw3.java";"20";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-08T19_56_11.204Z";"hw3.java";"22";" ';' expected
            str.charAt(i)
                         ^
1 error
"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T15_50_29.040Z";"hw3.java";"121";" cannot find symbol
            letterFrequency[i] = inStream.readDouble();
                                 ^
  symbol"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"133";" not a statement
            symbols[i] 
                   ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"133";" ';' expected
            symbols[i] 
                      ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"139";" illegal start of expression
        }
        ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"148";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"148";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"148";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"148";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"148";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"148";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"153";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"153";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"153";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"153";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"153";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"d66d29ea031cc5b849475d74a16fba15e284c0b1";"2020-10-09T17_42_43.012Z";"hw3.java";"206";" reached end of file while parsing
}
 ^
15 errors
"
"d6dc01b3eb6b54a9638fd12260fb20e169d5da66";"2020-10-05T04_37_26.896Z";"hw3.java";"101";" cannot find symbol
        for (int i = 0; i < symbolArray.length; i++) {
                            ^
  symbol"
"d6dc01b3eb6b54a9638fd12260fb20e169d5da66";"2020-10-05T04_37_26.896Z";"hw3.java";"102";" cannot find symbol
            System.out.print(symbolArray[i]);
                             ^
  symbol"
"d6dc01b3eb6b54a9638fd12260fb20e169d5da66";"2020-10-06T04_21_59.505Z";"hw3.java";"101";" cannot find symbol
        for (int i = 0; i < symbolArray.length; i++) {
                            ^
  symbol"
"d6dc01b3eb6b54a9638fd12260fb20e169d5da66";"2020-10-06T04_21_59.505Z";"hw3.java";"102";" cannot find symbol
            System.out.print(String.parseStr(symbolArray[i]));
                                             ^
  symbol"
"d6dc01b3eb6b54a9638fd12260fb20e169d5da66";"2020-10-06T04_52_11.315Z";"hw3.java";"101";" cannot find symbol
        for (int i = 0; i < symbols.length; i++) {
                            ^
  symbol"
"d6dc01b3eb6b54a9638fd12260fb20e169d5da66";"2020-10-06T04_52_11.315Z";"hw3.java";"102";" cannot find symbol
            System.out.print(symbols[i] + ' ');
                             ^
  symbol"
"d6dc01b3eb6b54a9638fd12260fb20e169d5da66";"2020-10-06T05_35_53.474Z";"hw3.java";"41";" unexpected type
            symbolString.charAt(i) = symbols[i] + 'A';
                               ^
  required"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-06T15_45_35.827Z";"hw3.java";"43";" incompatible types"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-06T17_00_38.917Z";"hw3.java";"43";" incompatible types"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-06T23_56_40.047Z";"hw3.java";"90";" incompatible types"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T00_24_17.738Z";"hw3.java";"90";" cannot find symbol
        for (i = 0; i < codeMessage.length; i++) {
             ^
  symbol"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T00_24_17.738Z";"hw3.java";"90";" cannot find symbol
        for (i = 0; i < codeMessage.length; i++) {
                    ^
  symbol"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T00_24_17.738Z";"hw3.java";"90";" cannot find symbol
        for (i = 0; i < codeMessage.length; i++) {
                        ^
  symbol"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T00_24_17.738Z";"hw3.java";"90";" cannot find symbol
        for (i = 0; i < codeMessage.length; i++) {
                                            ^
  symbol"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T18_02_13.525Z";"hw3.java";"90";" '[' expected
        int[] symbolEncrypted = new int(message.length());
                                       ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T18_02_13.525Z";"hw3.java";"90";" ']' expected
        int[] symbolEncrypted = new int(message.length());
                                                         ^
2 errors
"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T21_32_38.186Z";"hw3.java";"144";" class expected
        int key = int.parseint(args[2]);
                      ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T21_32_38.186Z";"hw3.java";"144";" ';' expected
        int key = int.parseint(args[2]);
                              ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T21_32_38.186Z";"hw3.java";"144";" not a statement
        int key = int.parseint(args[2]);
                                   ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T21_32_38.186Z";"hw3.java";"144";" ';' expected
        int key = int.parseint(args[2]);
                                      ^
4 errors
"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T22_48_06.284Z";"hw3.java";"143";" illegal start of expression
        = args[0];
        ^
1 error
"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-07T23_49_36.705Z";"hw3.java";"145";" incompatible types"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T05_17_24.426Z";"hw3.java";"121";" incompatible types"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"150";" illegal start of expression
        }
        ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"161";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"161";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"161";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"161";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"161";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"161";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"166";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"166";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"166";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"166";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"166";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T13_12_36.458Z";"hw3.java";"190";" reached end of file while parsing
}
 ^
13 errors
"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T16_17_13.135Z";"hw3.java";"172";" incompatible types"
"d7e4aad81a2fc6223695a9c7081657d7dd2e43f6";"2020-10-08T16_17_13.135Z";"hw3.java";"173";" cannot find symbol
            scores[i] = scoreFrequencies(getDictionaryFrequencies(english.txt), findFrequencies(stringToSymbolArray(decryptedMessage)));
                                                                  ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T00_15_43.609Z";"hw3.java";"13";" not a statement
        char 
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T00_15_43.609Z";"hw3.java";"13";" ';' expected
        char 
            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T00_15_43.609Z";"hw3.java";"25";" ';' expected
        str = str.toUpperCase()
                               ^
3 errors
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T01_34_58.443Z";"hw3.java";"26";" incompatible types"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T01_34_58.443Z";"hw3.java";"28";" bad operand types for binary operator '-'
            int a = (int) i - 'A';
                            ^
  first type"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T02_30_25.430Z";"hw3.java";"28";" not a statement
            symbolArray[] = str.charAt(i);
                       ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T02_30_25.430Z";"hw3.java";"28";" ';' expected
            symbolArray[] = str.charAt(i);
                         ^
2 errors
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T03_02_23.372Z";"hw3.java";"107";" incompatible types"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T21_20_25.552Z";"hw3.java";"50";" cannot find symbol
            String letters = str.charAt(i) + 'A';
                             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T21_20_25.552Z";"hw3.java";"51";" cannot find symbol
            symbols[i] = numbers;
                         ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-07T21_20_25.552Z";"hw3.java";"55";" cannot find symbol
        return numbers;
               ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T05_21_26.221Z";"hw3.java";"106";" cannot find symbol
        for (i = 0; i < messageArray.length; i++) {
             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T05_21_26.221Z";"hw3.java";"106";" cannot find symbol
        for (i = 0; i < messageArray.length; i++) {
                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T05_21_26.221Z";"hw3.java";"106";" cannot find symbol
        for (i = 0; i < messageArray.length; i++) {
                                             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T05_21_26.221Z";"hw3.java";"107";" cannot find symbol
            messageArray[i] = shift(messageArray[i], key);
                         ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T05_21_26.221Z";"hw3.java";"107";" cannot find symbol
            messageArray[i] = shift(messageArray[i], key);
                                                 ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T13_28_53.567Z";"hw3.java";"156";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T14_46_17.108Z";"hw3.java";"170";" ';' expected
        In inStream
                   ^
1 error
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T19_03_07.362Z";"hw3.java";"138";" cannot find symbol
        for (int i = 0; i < line.length; i++) {
                                ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T19_03_07.362Z";"hw3.java";"139";" cannot find symbol
            frequencies[i] = line(i);
                             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T19_57_45.149Z";"hw3.java";"149";" array dimension missing
        double[] frequencies = new double[];
                                           ^
1 error
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-08T23_30_22.651Z";"hw3.java";"151";" illegal start of expression
            if (symbols[i] <) {     // is it in the alphabet?
                            ^
1 error
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-09T01_25_29.901Z";"hw3.java";"174";" ')' expected
            score += (Math.abs(currentFreqs[i] - english[i]);            
                                                            ^
1 error
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-09T04_12_16.435Z";"hw3.java";"174";" ')' expected
            score += (Math.abs(currentFreqs[i] - english[i]);            
                                                            ^
1 error
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T03_30_36.794Z";"hw3.java";"231";" cannot find symbol
            System.out.prinln(uncipheredMessage);
                      ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T04_13_09.439Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T04_13_09.439Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T04_13_09.439Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T04_13_09.439Z";"hw3.java";"239";" cannot find symbol
            System.out.prinln(uncipheredMessage);
                      ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T12_11_23.339Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T12_11_23.339Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T12_11_23.339Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T12_11_23.339Z";"hw3.java";"191";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T12_11_23.339Z";"hw3.java";"191";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
                                              ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T12_11_23.339Z";"hw3.java";"192";" cannot find symbol
            int[] cipherArray = stringToSymbolArray(decryptedCipher);
                                                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T12_11_23.339Z";"hw3.java";"243";" cannot find symbol
            System.out.prinln(uncipheredMessage);
                      ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"191";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"191";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
                                              ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"193";" cannot find symbol
            int[] cipherArray = stringToSymbolArray(decryptedCipher);
                                                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"197";" method scoreFrequencies in class Caesar cannot be applied to given types;
            double possibleMinScore = scoreFrequencies(cipherFrequencies);
                                      ^
  required"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"198";" method scoreFrequencies in class Caesar cannot be applied to given types;
            double score = scoreFrequencies(cipherFrequencies);
                           ^
  required"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_00_24.452Z";"hw3.java";"252";" cannot find symbol
            System.out.prinln(uncipheredMessage);
                      ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"218";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"226";" class, interface, or enum expected
        String fileName = args[1];
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"229";" class, interface, or enum expected
        int key = (args[2].charAt(0) - 'A'); // this is not going to be an input anymore 
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"231";" class, interface, or enum expected
        In inStream = new In(fileName);
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"234";" class, interface, or enum expected
        String  message = inStream.readAll();
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"238";" class, interface, or enum expected
        switch(setting) {
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"242";" class, interface, or enum expected
            System.out.println(encryptedMessage);
            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"243";" class, interface, or enum expected
            break;
            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"245";" class, interface, or enum expected
            case 'decrypt'"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"247";" class, interface, or enum expected
            System.out.println(decryptedMessage);
            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"248";" class, interface, or enum expected
            break;
            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"250";" class, interface, or enum expected
            case 'crack'"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"252";" class, interface, or enum expected
            System.out.prinln(uncipheredMessage);
            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"253";" class, interface, or enum expected
            break;
            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"255";" class, interface, or enum expected
        }
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"261";" class, interface, or enum expected
        double[] english = getDictionaryFrequencies(testFile);
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"263";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) {
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"263";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) {
                        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"263";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) {
                                            ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"265";" class, interface, or enum expected
        }
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"270";" class, interface, or enum expected
        int[] testArray = stringToSymbolArray(test);
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"272";" class, interface, or enum expected
        double[] frequencies = findFrequencies(testArray);
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"274";" class, interface, or enum expected
        for (int i = 0; i < frequencies.length; i++) {
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"274";" class, interface, or enum expected
        for (int i = 0; i < frequencies.length; i++) {
                        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"274";" class, interface, or enum expected
        for (int i = 0; i < frequencies.length; i++) {
                                                ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"276";" class, interface, or enum expected
        }
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"279";" class, interface, or enum expected
        System.out.println(score);
        ^
/"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_19_01.144Z";"hw3.java";"286";" class, interface, or enum expected
    } 
    ^
28 errors
"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"189";" cannot find symbol
        for (i = 0; i < 26; i++) {
                            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"191";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"191";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
                                              ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"193";" cannot find symbol
            int[] cipherArray = stringToSymbolArray(decryptedCipher);
                                                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"197";" method scoreFrequencies in class Caesar cannot be applied to given types;
            double possibleMinScore = scoreFrequencies(cipherFrequencies);
                                      ^
  required"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"198";" method scoreFrequencies in class Caesar cannot be applied to given types;
            double score = scoreFrequencies(cipherFrequencies);
                           ^
  required"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T13_45_53.312Z";"hw3.java";"253";" cannot find symbol
            System.out.prinln(uncipheredMessage);
                      ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T14_08_52.289Z";"hw3.java";"192";" cannot find symbol
        for (i = 0; i < 26; i++) {
             ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T14_08_52.289Z";"hw3.java";"192";" cannot find symbol
        for (i = 0; i < 26; i++) {
                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T14_08_52.289Z";"hw3.java";"192";" cannot find symbol
        for (i = 0; i < 26; i++) {
                            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T14_08_52.289Z";"hw3.java";"194";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
            ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T14_08_52.289Z";"hw3.java";"194";" cannot find symbol
            decryptedCipher = decrypt(cipher, i);
                                              ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T14_08_52.289Z";"hw3.java";"196";" cannot find symbol
            int[] cipherArray = stringToSymbolArray(decryptedCipher);
                                                    ^
  symbol"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T14_08_52.289Z";"hw3.java";"199";" method scoreFrequencies in class Caesar cannot be applied to given types;
            double score = scoreFrequencies(cipherFrequencies);
                           ^
  required"
"d855caf029466d356572dd2ba8ccdebee0e2227e";"2020-10-10T15_20_04.105Z";"hw3.java";"203";" cannot find symbol
        String crackedCipher = decrypt(cipher, key);
                                               ^
  symbol"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-03T22_54_51.450Z";"hw3.java";"97";" cannot find symbol
        System.out.println(x.length);
                            ^
  symbol"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-05T06_21_26.589Z";"hw3.java";"105";" class, interface, or enum expected
}
^
1 error
"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-07T04_31_19.976Z";"hw3.java";"39";" ';' expected
        int charValue = 0
                         ^
1 error
"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"79";" illegal start of expression
        }
        ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"86";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"94";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T00_21_36.100Z";"hw3.java";"102";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
25 errors
"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T02_12_04.020Z";"hw3.java";"90";" array dimension missing
        return null;
        ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T02_12_04.020Z";"hw3.java";"90";" not a statement
        return null;
               ^
2 errors
"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T19_41_51.436Z";"hw3.java";"188";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T19_41_51.436Z";"hw3.java";"188";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T19_41_51.436Z";"hw3.java";"188";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T19_41_51.436Z";"hw3.java";"188";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T19_41_51.436Z";"hw3.java";"188";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T19_41_51.436Z";"hw3.java";"211";" reached end of file while parsing
}
 ^
6 errors
"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T20_02_59.053Z";"hw3.java";"188";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T20_02_59.053Z";"hw3.java";"188";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T20_02_59.053Z";"hw3.java";"188";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T20_02_59.053Z";"hw3.java";"188";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T20_02_59.053Z";"hw3.java";"188";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T20_02_59.053Z";"hw3.java";"211";" reached end of file while parsing
}
 ^
6 errors
"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T21_26_13.559Z";"hw3.java";"182";" ')' expected
        int[] cipherArray = stringToSymbolArray(String str); //integer of cipher
                                                      ^
/"
"d9b3baf435d965814c522937027386a1189b3e8a";"2020-10-08T21_26_13.559Z";"hw3.java";"182";" illegal start of expression
        int[] cipherArray = stringToSymbolArray(String str); //integer of cipher
                                                          ^
2 errors
"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"54";" not a statement
            (symbol + offset)%26;
                             ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"58";" illegal start of type
        return 0;
        ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"58";" ';' expected
        return 0;
              ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"64";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"67";" class, interface, or enum expected
    }
    ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"72";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"75";" class, interface, or enum expected
    }
    ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"80";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"83";" class, interface, or enum expected
    }
    ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"88";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"91";" class, interface, or enum expected
    }
    ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"96";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"99";" class, interface, or enum expected
    }
    ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"104";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"107";" class, interface, or enum expected
    }
    ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"109";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"111";" class, interface, or enum expected
        symbolArrayToString(new int[] {1, 8, 17, 3, 18});
        ^
/"
"dadba0a4bc6afcbfc73b34c2aceff30b037b8901";"2020-10-07T00_47_00.671Z";"hw3.java";"112";" class, interface, or enum expected
    }
    ^
18 errors
"
"dbb408c67891886f49ae26493267e9a783688783";"2020-10-10T20_20_18.736Z";"hw3.java";"44";" unexpected type
            string.charAt(i) = symbols[i];
                         ^
  required"
"dbb408c67891886f49ae26493267e9a783688783";"2020-10-12T18_36_07.247Z";"hw3.java";"195";" illegal start of expression
        for (int i = 0; )
                        ^
/"
"dbb408c67891886f49ae26493267e9a783688783";"2020-10-12T18_36_07.247Z";"hw3.java";"196";" illegal start of expression
        return score;
        ^
/"
"dbb408c67891886f49ae26493267e9a783688783";"2020-10-12T18_36_07.247Z";"hw3.java";"196";" ')' expected
        return score;
              ^
3 errors
"
"dbb408c67891886f49ae26493267e9a783688783";"2020-10-12T20_42_35.760Z";"hw3.java";"235";" ';' expected
            shiftScores[i] = scoreAtI
                                     ^
1 error
"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-06T01_40_28.712Z";"hw3.java";"25";" ';' expected
            str.charAt(i)
                         ^
1 error
"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-06T22_55_23.165Z";"hw3.java";"145";" '.class' expected
        shift(int symbol, int offset);
                  ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-06T22_55_23.165Z";"hw3.java";"145";" ';' expected
        shift(int symbol, int offset);
                        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-06T22_55_23.165Z";"hw3.java";"145";" ';' expected
        shift(int symbol, int offset);
                                    ^
3 errors
"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-07T19_44_33.239Z";"hw3.java";"102";" incompatible types"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-07T20_24_39.417Z";"hw3.java";"101";" incompatible types"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T12_02_10.681Z";"hw3.java";"189";" method readAll in class In cannot be applied to given types;
        inStream.readAll(functionToRun, filename, symbolString);
                ^
  required"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T13_00_47.497Z";"hw3.java";"59";" illegal start of expression
            symbol = ;
                     ^
1 error
"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T15_41_50.195Z";"hw3.java";"183";" method readAll in class In cannot be applied to given types;
        inStream.readAll(functionToRun, filename, symbolString);
                ^
  required"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T19_39_22.625Z";"hw3.java";"138";" incompatible types"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T20_48_07.081Z";"hw3.java";"154";" ';' expected
        for (int i = 0)
                      ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T20_48_07.081Z";"hw3.java";"154";" ';' expected
        for (int i = 0)
                       ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T20_48_07.081Z";"hw3.java";"163";" not a statement
        return null;
               ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-08T20_48_07.081Z";"hw3.java";"163";" ')' expected
        return null;
                   ^
4 errors
"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"184";" illegal start of type
    public static String crack(String cipher, ) {
                                              ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"184";" ')' expected
    public static String crack(String cipher, ) {
                                               ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"184";" ';' expected
    public static String crack(String cipher, ) {
                                                 ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" illegal start of type
        for (int i = 0; i < 26; i++){
            ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" <identifier> expected
        for (int i = 0; i < 26; i++){
             ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" ';' expected
        for (int i = 0; i < 26; i++){
                ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" illegal start of type
        for (int i = 0; i < 26; i++){
                   ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" <identifier> expected
        for (int i = 0; i < 26; i++){
                    ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" illegal start of type
        for (int i = 0; i < 26; i++){
                            ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" <identifier> expected
        for (int i = 0; i < 26; i++){
                              ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" ';' expected
        for (int i = 0; i < 26; i++){
                               ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" illegal start of type
        for (int i = 0; i < 26; i++){
                                 ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" <identifier> expected
        for (int i = 0; i < 26; i++){
                                   ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"185";" ';' expected
        for (int i = 0; i < 26; i++){
                                    ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"186";" invalid method declaration; return type required
            decrypt(filename, i)
            ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"186";" <identifier> expected
            decrypt(filename, i)
                            ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"186";" <identifier> expected
            decrypt(filename, i)
                               ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"186";" ';' expected
            decrypt(filename, i)
                                ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"192";" class, interface, or enum expected
        return null; 
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"193";" class, interface, or enum expected
    }
    ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"196";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"198";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"199";" class, interface, or enum expected
        int key = (int)(args[2].charAt(0) - 'A');
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"201";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"202";" class, interface, or enum expected
        String message = inStream.readAll();
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"204";" class, interface, or enum expected
        if (functionToRun.equals('encrypt')) {
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"206";" class, interface, or enum expected
            System.out.println(encryption);
            ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"207";" class, interface, or enum expected
        } 
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"211";" class, interface, or enum expected
            System.out.println(decryption);
            ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"212";" class, interface, or enum expected
        }
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"215";" class, interface, or enum expected
        double[] testing = findFrequencies(test);
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"216";" class, interface, or enum expected
        System.out.println(testing);
        ^
/"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_09_00.882Z";"hw3.java";"222";" class, interface, or enum expected
    }
    ^
33 errors
"
"dcab3e620c9948eb5e4c97ce51d2d1c15f305ea7";"2020-10-09T01_44_23.397Z";"hw3.java";"186";" cannot find symbol
            decrypt(filename, i);
                    ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-04T21_25_27.176Z";"hw3.java";"24";" incompatible types"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-04T21_53_37.762Z";"hw3.java";"24";" bad operand types for binary operator '<'
        for (int i = 0; i < str; i++){
                          ^
  first type"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-04T21_53_37.762Z";"hw3.java";"25";" cannot find symbol
            str.chartAt(i);
               ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-06T01_05_55.148Z";"hw3.java";"26";" cannot find symbol
      for (int i = 0; i < str.length; i++){
                             ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-06T22_11_31.401Z";"hw3.java";"63";" illegal start of expression
       String message = symbolArrayToString([2 14 13 18 20 11]);
                                            ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-06T22_11_31.401Z";"hw3.java";"63";" ';' expected
       String message = symbolArrayToString([2 14 13 18 20 11]);
                                             ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-06T22_11_31.401Z";"hw3.java";"63";" not a statement
       String message = symbolArrayToString([2 14 13 18 20 11]);
                                               ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-06T22_11_31.401Z";"hw3.java";"63";" ';' expected
       String message = symbolArrayToString([2 14 13 18 20 11]);
                                                 ^
4 errors
"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T00_04_54.266Z";"hw3.java";"58";" '.class' expected
        int shift = shift(int symbol, int offset);
                              ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T00_04_54.266Z";"hw3.java";"58";" <identifier> expected
        int shift = shift(int symbol, int offset);
                                     ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T00_04_54.266Z";"hw3.java";"58";" not a statement
        int shift = shift(int symbol, int offset);
                                          ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T00_04_54.266Z";"hw3.java";"58";" ';' expected
        int shift = shift(int symbol, int offset);
                                                ^
4 errors
"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T00_20_57.443Z";"hw3.java";"61";" cannot find symbol
        return unshift;
               ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T22_39_18.278Z";"hw3.java";"100";" '.class' expected
        int[] shiftedArray = shift(symbolArray[], key);
                                                ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T22_39_18.278Z";"hw3.java";"103";" '.class' expected
        encryptedMessage = symbolArrayToString(shiftArray[]);  
                                                           ^
2 errors
"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T23_44_41.727Z";"hw3.java";"94";" incompatible types"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-07T23_44_41.727Z";"hw3.java";"98";" incompatible types"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T17_31_18.542Z";"hw3.java";"131";" illegal start of expression
        return null;
        ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T17_31_18.542Z";"hw3.java";"131";" not a statement
        return null;
               ^
2 errors
"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T22_05_52.357Z";"hw3.java";"154";" illegal start of expression
            if(letter==)
            ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T22_05_52.357Z";"hw3.java";"154";" illegal start of expression
            if(letter==)
                       ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T22_05_52.357Z";"hw3.java";"154";" not a statement
            if(letter==)
              ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T22_05_52.357Z";"hw3.java";"154";" ';' expected
            if(letter==)
                        ^
4 errors
"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T22_50_09.621Z";"hw3.java";"171";" cannot find symbol
        return findFrequencies;
               ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-08T23_49_11.399Z";"hw3.java";"151";" cannot find symbol
            return findFrequencies;
                   ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-09T00_22_59.229Z";"hw3.java";"153";" cannot find symbol
            return findFrequencies;
                   ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-09T18_50_55.189Z";"hw3.java";"152";" cannot find symbol
        return array;
               ^
  symbol"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-09T19_12_44.207Z";"hw3.java";"147";" not a statement
                    count
                    ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-09T19_12_44.207Z";"hw3.java";"147";" ';' expected
                    count
                         ^
2 errors
"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-09T20_18_25.012Z";"hw3.java";"147";" not a statement
                    count
                    ^
/"
"de33cbea046c82f21788506f3ed0fa57fa2d7234";"2020-10-09T20_18_25.012Z";"hw3.java";"147";" ';' expected
                    count
                         ^
2 errors
"
"de363e10e402f868d57db34f57576b700edc7c2b";"2020-10-06T21_53_31.534Z";"hw3.java";"51";" incompatible types"
"de363e10e402f868d57db34f57576b700edc7c2b";"2020-10-06T22_28_35.917Z";"hw3.java";"65";" ';' expected
        int value
                 ^
/"
"de363e10e402f868d57db34f57576b700edc7c2b";"2020-10-06T22_28_35.917Z";"hw3.java";"120";" ';' expected
        shift()
               ^
2 errors
"
"de363e10e402f868d57db34f57576b700edc7c2b";"2020-10-06T22_43_53.977Z";"hw3.java";"124";" ';' expected
        shift()
               ^
1 error
"
"de363e10e402f868d57db34f57576b700edc7c2b";"2020-10-06T23_11_27.723Z";"hw3.java";"130";" ';' expected
        shift()
               ^
1 error
"
"de363e10e402f868d57db34f57576b700edc7c2b";"2020-10-06T23_39_29.541Z";"hw3.java";"130";" ';' expected
        shift()
               ^
1 error
"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T02_19_24.368Z";"hw3.java";"104";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                            ^
  symbol"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T03_16_22.061Z";"hw3.java";"48";" incompatible types"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T03_16_22.061Z";"hw3.java";"49";" cannot find symbol
            str = str.toUppercase();
                     ^
  symbol"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T03_16_22.061Z";"hw3.java";"52";" variable symbolRepresentation is already defined in method symbolArrayToString(int[])
            int symbolRepresentation = (int) s + 'A';
                ^
3 errors
"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T18_00_30.408Z";"hw3.java";"53";" cannot find symbol
            str.append(symbolRepresentation);
               ^
  symbol"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T18_54_38.029Z";"hw3.java";"51";" cannot find symbol
            System.out.println(str(i) = letter);
                               ^
  symbol"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T19_19_54.930Z";"hw3.java";"51";" ')' expected
            (str(i) = str.charAt(letter);
                                        ^
/"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T19_19_54.930Z";"hw3.java";"51";" not a statement
            (str(i) = str.charAt(letter);
            ^
2 errors
"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-04T21_54_01.452Z";"hw3.java";"51";" cannot find symbol
            str(i) = str.charAt(letter);
            ^
  symbol"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-05T12_57_56.546Z";"hw3.java";"115";" method stringToSymbolArray in class Caesar cannot be applied to given types;
        stringToSymbolArray(message, key);
        ^
  required"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-05T12_57_56.546Z";"hw3.java";"118";" incompatible types"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-05T12_57_56.546Z";"hw3.java";"121";" method symbolArrayToString in class Caesar cannot be applied to given types;
        symbolArrayToString(message, key);
        ^
  required"
"dec8062b7eab8a96c95b9d4fedbd62dce2e25925";"2020-10-06T21_55_52.848Z";"hw3.java";"201";" missing return statement
    }
    ^
1 error
"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"24";" ']' expected
        int[arr] = new int[str.length()];
            ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"24";" ';' expected
        int[arr] = new int[str.length()];
               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"24";" ']' expected
        int[arr] = new int[str.length()];
                           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"24";" ';' expected
        int[arr] = new int[str.length()];
                              ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"24";" ';' expected
        int[arr] = new int[str.length()];
                                       ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"25";" '(' expected
        for 
           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"26";" illegal start of expression
        return null;
        ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"26";" ';' expected
        return null;
              ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"27";" illegal start of expression
    }
    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"37";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
          ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                            ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"37";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"45";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"45";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"45";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"45";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"53";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"53";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"53";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"53";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"61";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"69";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T21_06_52.706Z";"hw3.java";"77";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
49 errors
"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T22_10_41.018Z";"hw3.java";"22";" ']' expected
        int[arr] = new int[str.length()];
            ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T22_10_41.018Z";"hw3.java";"22";" ';' expected
        int[arr] = new int[str.length()];
               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T22_10_41.018Z";"hw3.java";"22";" ']' expected
        int[arr] = new int[str.length()];
                           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T22_10_41.018Z";"hw3.java";"22";" ';' expected
        int[arr] = new int[str.length()];
                              ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T22_10_41.018Z";"hw3.java";"22";" ';' expected
        int[arr] = new int[str.length()];
                                       ^
5 errors
"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T22_36_29.254Z";"hw3.java";"25";" cannot find symbol
            int ourSymbolRepresentation = (int) character;
                                                ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T22_36_29.254Z";"hw3.java";"28";" cannot find symbol
        System.out.println(ourSymbolRepresentation);
                           ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T23_42_46.473Z";"hw3.java";"24";" cannot find symbol
        System.out.println(ourSymbolRepresentation);
                           ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T23_55_56.054Z";"hw3.java";"24";" cannot find symbol
        System.out.println(ourSymbolRepresentation);
                           ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-08T23_55_56.054Z";"hw3.java";"32";" cannot find symbol
        for (int i =0; i < symbols.length(); i++) {
                                  ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T00_24_15.318Z";"hw3.java";"71";" not a statement
                System.out.priny
                          ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T00_24_15.318Z";"hw3.java";"71";" ';' expected
                System.out.priny
                                ^
2 errors
"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T01_00_55.079Z";"hw3.java";"72";" not a statement
                System.out.priny
                          ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T01_00_55.079Z";"hw3.java";"72";" ';' expected
                System.out.priny
                                ^
2 errors
"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T21_48_00.574Z";"hw3.java";"26";" cannot find symbol
        char[] letters = new char[symbols.length()];
                                         ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T21_48_00.574Z";"hw3.java";"28";" cannot find symbol
        for (int i =0; i < symbols.length(); i++) {
                                  ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T21_48_00.574Z";"hw3.java";"69";" cannot find symbol
        for (int i = 0; i < message.length(); i++) {
                            ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T21_48_00.574Z";"hw3.java";"70";" cannot find symbol
            char c = message.charAt(i);
                     ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T22_15_07.624Z";"hw3.java";"26";" cannot find symbol
        char[] letters = new char[symbols.length()];
                                         ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T22_15_07.624Z";"hw3.java";"28";" cannot find symbol
        for (int i =0; i < symbols.length(); i++) {
                                  ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T22_15_07.624Z";"hw3.java";"64";" cannot find symbol
        for (int i = 0; i < message.length(); i++) {
                            ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-09T22_15_07.624Z";"hw3.java";"65";" cannot find symbol
            char c = message.charAt(i);
                     ^
  symbol"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"46";" '.class' expected
            int original = int str.charAt(i) - 'A';
                               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"46";" illegal start of expression
            int original = int str.charAt(i) - 'A';
                                  ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"46";" ';' expected
            int original = int str.charAt(i) - 'A';
                                         ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"46";" not a statement
            int original = int str.charAt(i) - 'A';
                                          ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"46";" ';' expected
            int original = int str.charAt(i) - 'A';
                                           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"47";" not a statement
            int new = (original + offset) % 26;
            ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"47";" ';' expected
            int new = (original + offset) % 26;
               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"47";" not a statement
            int new = (original + offset) % 26;
                                ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_03_29.145Z";"hw3.java";"47";" ';' expected
            int new = (original + offset) % 26;
                                        ^
9 errors
"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"46";" '.class' expected
            int original = int str.charAt(i) - 'A';
                               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"46";" illegal start of expression
            int original = int str.charAt(i) - 'A';
                                  ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"46";" ';' expected
            int original = int str.charAt(i) - 'A';
                                         ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"46";" not a statement
            int original = int str.charAt(i) - 'A';
                                          ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"46";" ';' expected
            int original = int str.charAt(i) - 'A';
                                           ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"47";" not a statement
            int new = (original + offset) % 26;
            ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"47";" ';' expected
            int new = (original + offset) % 26;
               ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"47";" not a statement
            int new = (original + offset) % 26;
                                ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"47";" ';' expected
            int new = (original + offset) % 26;
                                        ^
/"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T01_51_39.993Z";"hw3.java";"66";" '.class' expected
                System.out.print(char);
                                     ^
10 errors
"
"e0d84997d15e10bdfe98baff903bde2d78d26773";"2020-10-10T03_14_57.952Z";"hw3.java";"128";" ';' expected
        double lowestScore = 1.0/0.0
                                    ^
1 error
"
"e136194611ec53c12b1a683367697ae6bbbc25a9";"2020-10-08T18_25_50.332Z";"hw3.java";"230";" illegal start of expression
                for (int i = 0; ) {
                                ^
/"
"e136194611ec53c12b1a683367697ae6bbbc25a9";"2020-10-08T18_25_50.332Z";"hw3.java";"230";" illegal start of expression
                for (int i = 0; ) {
                                  ^
/"
"e136194611ec53c12b1a683367697ae6bbbc25a9";"2020-10-08T18_25_50.332Z";"hw3.java";"230";" ')' expected
                for (int i = 0; ) {
                                   ^
3 errors
"
"e136194611ec53c12b1a683367697ae6bbbc25a9";"2020-10-08T22_25_41.550Z";"hw3.java";"244";" cannot find symbol
            int name = shift(symbol, i);
                             ^
  symbol"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-05T22_54_34.711Z";"hw3.java";"99";" incompatible types"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T06_19_41.649Z";"hw3.java";"54";" cannot find symbol
        return shift;
               ^
  symbol"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T06_19_41.649Z";"hw3.java";"67";" cannot find symbol
        return unshift;
               ^
  symbol"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T06_53_11.061Z";"hw3.java";"54";" cannot find symbol
        return shift;
               ^
  symbol"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T06_53_11.061Z";"hw3.java";"70";" cannot find symbol
        return unshift;
               ^
  symbol"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T22_18_08.895Z";"hw3.java";"115";" ';' expected
        for (int i = 0; i < frequencies.length, i++) {
                                              ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T22_18_08.895Z";"hw3.java";"115";" ')' expected
        for (int i = 0; i < frequencies.length, i++) {
                                               ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T22_18_08.895Z";"hw3.java";"115";" illegal start of expression
        for (int i = 0; i < frequencies.length, i++) {
                                                   ^
3 errors
"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-07T23_42_32.854Z";"hw3.java";"140";" incompatible types"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_09_47.202Z";"hw3.java";"174";" missing return statement
    }
    ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_09_47.202Z";"hw3.java";"155";" variable scoreFrequencies might not have been initialized
            scoreFrequencies += Math.abs(english[i] - currentFreqs[i]);
            ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_09_47.202Z";"hw3.java";"157";" variable scoreFrequencies might not have been initialized
        return scoreFrequencies;
               ^
3 errors
"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"176";" ';' expected
        for (int i = 0; i < 26 i++) {
                              ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"200";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"202";" class, interface, or enum expected
        String fileName = args[1];
        ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"203";" class, interface, or enum expected
        int key = Integer.parseInt(args[2]);
        ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"205";" class, interface, or enum expected
        In inStream = new In(fileName); 
        ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"206";" class, interface, or enum expected
        String fileText = inStream.readAll();
        ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"208";" class, interface, or enum expected
        switch (setting) {
        ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"211";" class, interface, or enum expected
                System.out.println(encryptedMessage);
                ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"212";" class, interface, or enum expected
                break;
                ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"213";" class, interface, or enum expected
            case 'decrypt'"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"215";" class, interface, or enum expected
                System.out.println(decryptedMessage);
                ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"216";" class, interface, or enum expected
                break;           
                ^
/"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T00_54_30.322Z";"hw3.java";"217";" class, interface, or enum expected
        }
        ^
13 errors
"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T01_46_15.820Z";"hw3.java";"175";" cannot find symbol
        double[] englishFreq = getDictionaryFrequencies(english.txt);
                                                        ^
  symbol"
"e1b5834a6e396f55d9255e1f9f33f66d3a4b6a0f";"2020-10-08T21_06_04.762Z";"hw3.java";"287";" reached end of file while parsing
}
 ^
1 error
"
"e1d16243d685d6f154eb089648fc32c3e17a4386";"2020-10-08T17_43_41.649Z";"hw3.java";"23";" array dimension missing
        int[] symbolArray = new int[];
                                     ^
1 error
"
"e1d16243d685d6f154eb089648fc32c3e17a4386";"2020-10-08T18_40_48.597Z";"hw3.java";"44";" unexpected type
            message.charAt(i) = (char) symbols[i] + a;
                          ^
  required"
"e1d16243d685d6f154eb089648fc32c3e17a4386";"2020-10-08T21_41_23.809Z";"hw3.java";"91";" cannot find symbol
        symbolArrayToString(symbols);
                            ^
  symbol"
"e1d16243d685d6f154eb089648fc32c3e17a4386";"2020-10-09T00_37_25.897Z";"hw3.java";"136";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"e1d16243d685d6f154eb089648fc32c3e17a4386";"2020-10-09T01_40_34.615Z";"hw3.java";"131";" bad operand types for binary operator '||'
        if (setting == 'decrypt' || setting = 'encrpyt') {
                                 ^
  first type"
"e1d16243d685d6f154eb089648fc32c3e17a4386";"2020-10-09T01_40_34.615Z";"hw3.java";"145";" cannot find symbol
                encrypt(filename, key);
                                  ^
  symbol"
"e1d16243d685d6f154eb089648fc32c3e17a4386";"2020-10-09T01_40_34.615Z";"hw3.java";"148";" cannot find symbol
                decrypt(filename, key);
                                  ^
  symbol"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-03T22_39_12.677Z";"hw3.java";"34";" ';' expected
            elseif (star.charAt(i) == '32'){
                                           ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-03T22_39_12.677Z";"hw3.java";"37";" 'else' without 'if'
            else {
            ^
2 errors
"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-04T00_43_30.147Z";"hw3.java";"49";" unexpected type
            char letter = (char) symbols[i] += 'A';
                          ^
  required"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-04T00_43_30.147Z";"hw3.java";"53";" cannot find symbol
        return string;
               ^
  symbol"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-04T00_43_30.147Z";"hw3.java";"124";" cannot find symbol
        System.out.println(symbol);
                           ^
  symbol"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-07T04_09_26.451Z";"hw3.java";"199";" incompatible types"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-07T04_09_26.451Z";"hw3.java";"199";" incompatible types"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-07T04_09_26.451Z";"hw3.java";"206";" incompatible types"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-07T04_09_26.451Z";"hw3.java";"207";" incompatible types"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-07T04_09_26.451Z";"hw3.java";"213";" incompatible types"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-07T04_09_26.451Z";"hw3.java";"213";" incompatible types"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-07T05_42_52.070Z";"hw3.java";"243";" cannot find symbol
        int[] symbolText = stringToSymbolArray(ciphertext);
                                               ^
  symbol"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"82";" illegal start of type
        else {
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"82";" ';' expected
        else {
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"83";" <identifier> expected
            shiftedSymbol = symbol;
                         ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"86";" class, interface, or enum expected
        return shiftedSymbol;        
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"87";" class, interface, or enum expected
    }
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"97";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) { 
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"102";" class, interface, or enum expected
        if (symbol >= 0 && symbol <= 25) {
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"110";" class, interface, or enum expected
        }
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"113";" class, interface, or enum expected
    }
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"123";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"129";" class, interface, or enum expected
        for (int i = 0; i < intMessage.length; i++) {
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"129";" class, interface, or enum expected
        for (int i = 0; i < intMessage.length; i++) {
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"129";" class, interface, or enum expected
        for (int i = 0; i < intMessage.length; i++) {
                                               ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"131";" class, interface, or enum expected
        }
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"136";" class, interface, or enum expected
        return stringMessage;
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"137";" class, interface, or enum expected
    }
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"147";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"153";" class, interface, or enum expected
        for (int i = 0; i < intMessage.length; i++) {
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"153";" class, interface, or enum expected
        for (int i = 0; i < intMessage.length; i++) {
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"153";" class, interface, or enum expected
        for (int i = 0; i < intMessage.length; i++) {
                                               ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"155";" class, interface, or enum expected
        }
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"160";" class, interface, or enum expected
        return stringMessage;
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"161";" class, interface, or enum expected
    }
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"171";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"175";" class, interface, or enum expected
        double[] dictonaryFreq = new double[26];
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"178";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"178";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"178";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"180";" class, interface, or enum expected
            dictonaryFreq[i] = frequency;
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"181";" class, interface, or enum expected
        }
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"184";" class, interface, or enum expected
    }
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"195";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"198";" class, interface, or enum expected
        double letterCount = 0;
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"201";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++) {  
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"201";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++) {  
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"201";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++) {  
                                            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"205";" class, interface, or enum expected
                frequencies[letterInt] += 1.0;
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"206";" class, interface, or enum expected
                letterCount += 1.0;
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"207";" class, interface, or enum expected
            }
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"212";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"212";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"214";" class, interface, or enum expected
        }
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"217";" class, interface, or enum expected
    }           
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"227";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"231";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) { 
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"231";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) { 
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"231";" class, interface, or enum expected
        for (int i = 0; i < english.length; i++) { 
                                            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"233";" class, interface, or enum expected
            sumDiff += difference;           
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"234";" class, interface, or enum expected
        }
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"237";" class, interface, or enum expected
    }
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"242";" class, interface, or enum expected
    public static int[] shiftAll(int[] symbols, int offset) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++){
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++){
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"246";" class, interface, or enum expected
        for (int i = 0; i < symbols.length; i++){
                                            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"248";" class, interface, or enum expected
        }
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"251";" class, interface, or enum expected
    }            
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"260";" class, interface, or enum expected
    public static int crack(String cipher, String english) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"264";" class, interface, or enum expected
        int key = -1;
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"265";" class, interface, or enum expected
        double minimum = Double.MAX_VALUE;
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"268";" class, interface, or enum expected
        int[] symbolText = stringToSymbolArray(cipher);
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"271";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"271";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"271";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"273";" class, interface, or enum expected
            double[] currentFreqs = findFrequencies(shiftSymbolText);
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"274";" class, interface, or enum expected
            double currentScore = scoreFrequencies(englishFreqs, currentFreqs);
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"275";" class, interface, or enum expected
            System.out.println(currentScore);
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"277";" class, interface, or enum expected
            if (currentScore < minimum) {               
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"279";" class, interface, or enum expected
                key = i; 
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"280";" class, interface, or enum expected
            }
            ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"284";" class, interface, or enum expected
    }
    ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"286";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"290";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"293";" class, interface, or enum expected
        In inStream = new In(filename);
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"294";" class, interface, or enum expected
        String text = inStream.readAll();      
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"297";" class, interface, or enum expected
        switch (function) {  
        ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"300";" class, interface, or enum expected
                int key = (int) argument.charAt(0) - 'A';
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"301";" class, interface, or enum expected
                String encryptedText = encrypt(text, key);
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"302";" class, interface, or enum expected
                System.out.println(encryptedText);
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"303";" class, interface, or enum expected
                break;
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"304";" class, interface, or enum expected
            case 'decrypt'"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"306";" class, interface, or enum expected
                int key2 = (int) argument2.charAt(0) - 'A';
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"307";" class, interface, or enum expected
                String decryptedText = decrypt(text, key2); 
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"308";" class, interface, or enum expected
                System.out.println(decryptedText);
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"309";" class, interface, or enum expected
                break;
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"310";" class, interface, or enum expected
            case 'crack'"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"312";" class, interface, or enum expected
                int numberKey = crack(text, englishFreq); 
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"313";" class, interface, or enum expected
                char keyLetter = (char) (numberKey + 'A');
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"314";" class, interface, or enum expected
                System.out.println('KEY FOUND"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"315";" class, interface, or enum expected
                System.out.println('LETTER"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"316";" class, interface, or enum expected
                 String crackedMessage = encrypt(text, numberKey);
                 ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"317";" class, interface, or enum expected
                 System.out.println(crackedMessage);
                 ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"318";" class, interface, or enum expected
                break;              
                ^
/"
"e2b0a9571c6fef418621bf040dca3da8c5362a21";"2020-10-08T21_24_30.450Z";"hw3.java";"319";" class, interface, or enum expected
        }
        ^
93 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"21";" <identifier> expected
            symbolArray[i] = str.toUpperCase().
                                               ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"35";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"35";" illegal start of expression
    public static String symbolArrayToString(int[] symbols) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"35";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"35";" '.class' expected
    public static String symbolArrayToString(int[] symbols) {
                                                   ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"35";" ';' expected
    public static String symbolArrayToString(int[] symbols) {
                                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"43";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"43";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"43";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"43";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"43";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"43";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"51";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"51";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"51";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"51";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"51";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"51";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"59";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"67";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-07T22_26_14.686Z";"hw3.java";"75";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
42 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"36";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"36";" > expected
        for(int i = 0, i < symbols.length; i++){
                                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"36";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"36";" illegal start of expression
        for(int i = 0, i < symbols.length; i++){
                                              ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"38";" illegal start of expression
        }
        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"46";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"46";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"46";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"54";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"54";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"54";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T02_49_19.381Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
41 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"20";" > expected
        for(int i = 0, i < str.length(), i++) {
                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"20";" ')' expected
        for(int i = 0, i < str.length(), i++) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                            ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"36";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"36";" > expected
        for(int i = 0, i < symbols.length; i++){
                                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"36";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"36";" illegal start of expression
        for(int i = 0, i < symbols.length; i++){
                                              ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"38";" illegal start of expression
        }
        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"46";" illegal start of expression
    public static int shift(int symbol, int offset) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"46";" illegal start of expression
    public static int shift(int symbol, int offset) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"46";" '.class' expected
    public static int shift(int symbol, int offset) {
                                ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"46";" ';' expected
    public static int shift(int symbol, int offset) {
                                                  ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"54";" illegal start of expression
    public static int unshift(int symbol, int offset) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"54";" illegal start of expression
    public static int unshift(int symbol, int offset) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"54";" '.class' expected
    public static int unshift(int symbol, int offset) {
                                  ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"54";" ';' expected
    public static int unshift(int symbol, int offset) {
                                                    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"62";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"70";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T16_08_33.767Z";"hw3.java";"78";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
47 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"20";" > expected
        for(int i = 0, i < str.length(), i++) {
                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"20";" ')' expected
        for(int i = 0, i < str.length(), i++) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                            ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"37";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"37";" > expected
        for(int i = 0, i < symbols.length; i++){
                                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"37";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"37";" illegal start of expression
        for(int i = 0, i < symbols.length; i++){
                                              ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_12_26.086Z";"hw3.java";"38";" ';' expected
            resultString[i] = (char) (symbols[i] + 'A')
                                                       ^
11 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"20";" > expected
        for(int i = 0, i < str.length(), i++) {
                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"20";" ')' expected
        for(int i = 0, i < str.length(), i++) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                            ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"38";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"38";" > expected
        for(int i = 0, i < symbols.length; i++){
                                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"38";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T17_33_22.681Z";"hw3.java";"38";" illegal start of expression
        for(int i = 0, i < symbols.length; i++){
                                              ^
10 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"20";" > expected
        for(int i = 0, i < str.length(), i++) {
                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"20";" ')' expected
        for(int i = 0, i < str.length(), i++) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                            ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"39";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"39";" > expected
        for(int i = 0, i < symbols.length; i++){
                                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"39";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_29_26.245Z";"hw3.java";"39";" illegal start of expression
        for(int i = 0, i < symbols.length; i++){
                                              ^
10 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"20";" > expected
        for(int i = 0, i < str.length(), i++) {
                                     ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"20";" ';' expected
        for(int i = 0, i < str.length(), i++) {
                                      ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                       ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"20";" ')' expected
        for(int i = 0, i < str.length(), i++) {
                                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"20";" illegal start of expression
        for(int i = 0, i < str.length(), i++) {
                                            ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"40";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                        ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"40";" > expected
        for(int i = 0, i < symbols.length; i++){
                                         ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"40";" ';' expected
        for(int i = 0, i < symbols.length; i++){
                                          ^
/"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T18_41_02.817Z";"hw3.java";"40";" illegal start of expression
        for(int i = 0, i < symbols.length; i++){
                                              ^
10 errors
"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-08T23_40_51.293Z";"hw3.java";"159";" cannot find symbol
       System.out.println(encrypted);     
                          ^
  symbol"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-09T22_24_53.217Z";"hw3.java";"193";" cannot find symbol
        return decrypt(test,ke);
                            ^
  symbol"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-09T22_24_53.217Z";"hw3.java";"222";" method crack in class Caesar cannot be applied to given types;
           System.out.println(crack(test, key));
                              ^
  required"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-09T22_51_32.549Z";"hw3.java";"226";" method crack in class Caesar cannot be applied to given types;
            System.out.println(crack(test, key));
                               ^
  required"
"e3f6726c87109c172bf57544bda8ab40e32822be";"2020-10-10T03_06_09.379Z";"hw3.java";"221";" cannot find symbol
           System.out.println(crack);
                              ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-07T18_26_59.793Z";"hw3.java";"25";" ';' expected
           int ourSymbolRepresentation = str.charAt(i) 
                                                      ^
/"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-07T18_26_59.793Z";"hw3.java";"26";" illegal start of expression
           char letter = (char) (ourSymbolRepresentation + )    
                                                           ^
/"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-07T18_26_59.793Z";"hw3.java";"26";" ';' expected
           char letter = (char) (ourSymbolRepresentation + )    
                                                            ^
3 errors
"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-07T21_09_15.380Z";"hw3.java";"52";" incompatible types"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-07T23_05_42.792Z";"hw3.java";"55";" incompatible types"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-07T23_48_44.903Z";"hw3.java";"127";" class, interface, or enum expected
}
^
1 error
"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"80";" cannot find symbol
        int[] x = stringToSymbolArray(str);
                                      ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"81";" cannot find symbol
        key = offset;
              ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"82";" bad operand types for binary operator '<'
        for (int i = 0; i < message; i++){
                          ^
  first type"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"83";" cannot find symbol
        int y = shift(symbol, offset); 
                      ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"83";" cannot find symbol
        int y = shift(symbol, offset); 
                              ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"84";" array required, but int found
            y[i] = symbol;
             ^
/"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"84";" cannot find symbol
            y[i] = symbol;
                   ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T01_16_53.100Z";"hw3.java";"87";" cannot find symbol
        return symbol;
               ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T17_49_39.402Z";"hw3.java";"93";" cannot find symbol
        int y = shift(parse.parseInt(message), key);
                      ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T17_49_39.402Z";"hw3.java";"94";" array required, but int found
            y[i] = symbol;
             ^
/"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T17_49_39.402Z";"hw3.java";"94";" cannot find symbol
            y[i] = symbol;
                   ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T17_49_39.402Z";"hw3.java";"97";" cannot find symbol
        return symbol;
               ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T22_20_30.358Z";"hw3.java";"148";" '(' expected
        switch {
              ^
/"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T22_20_30.358Z";"hw3.java";"148";" illegal start of expression
        switch {
               ^
/"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T22_20_30.358Z";"hw3.java";"148";" ')' expected
        switch {
                ^
/"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-08T22_20_30.358Z";"hw3.java";"149";" unclosed string literal
                case '
                     ^
4 errors
"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-09T00_05_32.903Z";"hw3.java";"156";" incompatible types"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-09T00_05_32.903Z";"hw3.java";"158";" incompatible types"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-09T00_30_02.373Z";"hw3.java";"169";" cannot find symbol
            if (symbols[j] == i) {
                        ^
  symbol"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-09T12_49_01.387Z";"hw3.java";"188";" missing return statement
    }
    ^
1 error
"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-09T16_27_14.886Z";"hw3.java";"196";" missing return statement
    }
    ^
1 error
"
"e761b3497fcd3266080b6cfa1e7ec2eeda61b25e";"2020-10-09T23_05_33.654Z";"hw3.java";"240";" incompatible types"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-02T18_36_50.756Z";"hw3.java";"23";" cannot find symbol
        int symbolArray[] = new int[str.length];
                                       ^
  symbol"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-02T18_36_50.756Z";"hw3.java";"25";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-03T15_34_13.687Z";"hw3.java";"48";" cannot find symbol
            symbolArrayToString.charAt(i) = (char) letter;
            ^
  symbol"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-04T00_07_52.350Z";"hw3.java";"47";" incompatible types"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-04T00_07_52.350Z";"hw3.java";"48";" cannot find symbol
            symbolArrayToString.charAt(i) = letter;
            ^
  symbol"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-04T19_13_12.226Z";"hw3.java";"49";" unexpected type
            symbolArrayToString.charAt(i) = (char) letter;
                                      ^
  required"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-05T02_33_46.976Z";"hw3.java";"173";" cannot find symbol
        System.out.println(codeBreaker(inStream.readAll(), offset));
                           ^
  symbol"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-05T02_51_40.012Z";"hw3.java";"173";" '(' expected
        switch 
              ^
/"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-05T02_51_40.012Z";"hw3.java";"175";" illegal start of expression
}
^
/"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-05T02_51_40.012Z";"hw3.java";"175";" reached end of file while parsing
}
 ^
/"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-05T02_51_40.012Z";"hw3.java";"176";" reached end of file while parsing
4 errors
"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-05T15_41_04.675Z";"hw3.java";"181";" reached end of file while parsing
}
 ^
1 error
"
"e96d3fb323ad61d729908a2127e163ff6dda2443";"2020-10-05T18_14_48.894Z";"hw3.java";"142";" cannot find symbol
        In inStream = new In(english.txt);
                             ^
  symbol"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T06_00_38.603Z";"hw3.java";"23";" ';' expected
            resultArray[i] = str.toUpperCase()
                                              ^
1 error
"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
        ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
               ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                     ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                         ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                          ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" ')' expected
        public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                                                          ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"13";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                                                           ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T18_15_46.487Z";"hw3.java";"22";" class, interface, or enum expected
}
^
9 errors
"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
        ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
               ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                     ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                         ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                          ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" ')' expected
        public static int[] stringToSymbolArray(String str) {
                                                      ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" illegal start of expression
        public static int[] stringToSymbolArray(String str) {
                                                          ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"13";" ';' expected
        public static int[] stringToSymbolArray(String str) {
                                                           ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-08T20_13_03.160Z";"hw3.java";"23";" class, interface, or enum expected
}
^
9 errors
"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-09T03_56_53.813Z";"hw3.java";"182";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-09T03_56_53.813Z";"hw3.java";"182";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-09T03_56_53.813Z";"hw3.java";"182";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-09T03_56_53.813Z";"hw3.java";"182";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-09T03_56_53.813Z";"hw3.java";"182";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"ea75f49943d3ecd813163f096f0f21ccbd4ef8c9";"2020-10-09T03_56_53.813Z";"hw3.java";"202";" reached end of file while parsing
}
 ^
6 errors
"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-06T21_37_58.405Z";"hw3.java";"20";" incompatible types"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-06T21_37_58.405Z";"hw3.java";"27";" cannot find symbol
        for (int i = 0; i < str.length; i++) {
                               ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-06T22_19_16.326Z";"hw3.java";"20";" incompatible types"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-06T22_50_52.508Z";"hw3.java";"20";" invalid method declaration; return type required
    stringToSymbolArray('CONSUL');
    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-06T22_50_52.508Z";"hw3.java";"20";" illegal start of type
    stringToSymbolArray('CONSUL');
                        ^
2 errors
"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T03_22_51.425Z";"hw3.java";"31";" variable letterAsInt might not have been initialized
            int letterAsInt = (int) letterAsInt - 'A';
                                    ^
1 error
"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T05_47_01.311Z";"hw3.java";"109";" cannot find symbol
        int[] arrayAfterShift = new int[numbersArray.length()];
                                        ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T05_47_01.311Z";"hw3.java";"111";" cannot find symbol
        for (int i = 0; i < numbersArray.length; i++) {
                            ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T05_47_01.311Z";"hw3.java";"112";" cannot find symbol
            int holder = numbersArray[i];
                         ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T05_47_01.311Z";"hw3.java";"114";" cannot find symbol
            arrayAfterShift[i] = symbol;            
                                 ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T05_47_01.311Z";"hw3.java";"119";" cannot find symbol
        return stringOfLetters;
               ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T06_17_23.316Z";"hw3.java";"163";" cannot find symbol
        for (int i = 0; i < numbersArray.length(); i++) {
                                        ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T06_50_28.974Z";"hw3.java";"171";" cannot find symbol
        In inStream = new In(filename);
                             ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T16_13_35.741Z";"hw3.java";"163";" cannot find symbol
         for (int i = 0; i < numbersArray.length(); i++) {
                             ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-07T16_13_35.741Z";"hw3.java";"164";" cannot find symbol
             System.out.println(numbersArray[i]);
                                ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"91";" '(' expected
            if 
              ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"94";" illegal start of expression
        }
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"94";" ')' expected
        }
         ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"98";" not a statement
        return symbol;
               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"104";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"128";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_11_29.009Z";"hw3.java";"136";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
28 errors
"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"88";" '(' expected
            if 
              ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"91";" illegal start of expression
        }
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"91";" ')' expected
        }
         ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"95";" not a statement
        return symbol;
               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" illegal start of expression
    public static String encrypt(String message, int key) {
    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" illegal start of expression
    public static String encrypt(String message, int key) {
           ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" ';' expected
    public static String encrypt(String message, int key) {
                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" ')' expected
    public static String encrypt(String message, int key) {
                                       ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" illegal start of expression
    public static String encrypt(String message, int key) {
                                               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" ';' expected
    public static String encrypt(String message, int key) {
                                                ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" not a statement
    public static String encrypt(String message, int key) {
                                                     ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"101";" ';' expected
    public static String encrypt(String message, int key) {
                                                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"125";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T01_23_30.009Z";"hw3.java";"133";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
28 errors
"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T17_20_28.828Z";"hw3.java";"147";" cannot find symbol
            freqNumbers[i] = inStream2.readDouble();
                             ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_03_27.332Z";"hw3.java";"220";" ';' expected
         for (int i = 0, i < freqNumbers.length; i++) {
                          ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_03_27.332Z";"hw3.java";"220";" > expected
         for (int i = 0, i < freqNumbers.length; i++) {
                                               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_03_27.332Z";"hw3.java";"220";" ';' expected
         for (int i = 0, i < freqNumbers.length; i++) {
                                                ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_03_27.332Z";"hw3.java";"220";" illegal start of expression
         for (int i = 0, i < freqNumbers.length; i++) {
                                                    ^
4 errors
"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_13_53.088Z";"hw3.java";"220";" ';' expected
         for (int i = 0, i < freqNumbers.length; i++) {
                          ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_13_53.088Z";"hw3.java";"220";" > expected
         for (int i = 0, i < freqNumbers.length; i++) {
                                               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_13_53.088Z";"hw3.java";"220";" ';' expected
         for (int i = 0, i < freqNumbers.length; i++) {
                                                ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_13_53.088Z";"hw3.java";"220";" illegal start of expression
         for (int i = 0, i < freqNumbers.length; i++) {
                                                    ^
4 errors
"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T18_41_25.853Z";"hw3.java";"157";" cannot find symbol
        return foundFreq;
               ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T20_08_29.853Z";"hw3.java";"174";" cannot find symbol
                            symbol[i]=counter;
                            ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-08T21_19_00.319Z";"hw3.java";"174";" cannot find symbol
                            symbol[i]=counter;
                            ^
  symbol"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"198";" ';' expected
        for (int i = 0, i < tempArray.length, i++){
                         ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"198";" > expected
        for (int i = 0, i < tempArray.length, i++){
                                               ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"198";" ';' expected
        for (int i = 0, i < tempArray.length, i++){
                                                 ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"198";" illegal start of expression
        for (int i = 0, i < tempArray.length, i++){
                                                  ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"198";" ')' expected
        for (int i = 0, i < tempArray.length, i++){
                                                   ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"199";" illegal start of expression
            tempArray[i] = Math.abs(english[i] - currentFreq[i]);
                     ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"199";" ';' expected
            tempArray[i] = Math.abs(english[i] - currentFreq[i]);
                       ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"199";" variable declaration not allowed here
            tempArray[i] = Math.abs(english[i] - currentFreq[i]);
                      ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"202";" illegal start of type
        return scoreFreq;
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"202";" ';' expected
        return scoreFreq;
              ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"205";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"251";" class, interface, or enum expected
        double [] freqNumbers = getDictionaryFrequencies(filename2);
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"256";" class, interface, or enum expected
        String crackFileName = 'caesar_message.txt';
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"257";" class, interface, or enum expected
        In inStream = new In(crackFileName);
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"258";" class, interface, or enum expected
        String messageFile = inStream.readAll();
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"260";" class, interface, or enum expected
        int[] intValues = stringToSymbolArray(messageFile);
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"264";" class, interface, or enum expected
        double [] foundFreq = findFrequencies(intValues);
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"269";" class, interface, or enum expected
        double scoreFreq = scoreFrequencies(freqNumbers, foundFreq);
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"270";" class, interface, or enum expected
        System.out.println(scoreFreq);
        ^
/"
"ebc37c14dc0482e6748865ab0d58358e89be63a2";"2020-10-09T01_27_29.404Z";"hw3.java";"274";" class, interface, or enum expected
    }
    ^
20 errors
"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-06T02_42_22.541Z";"hw3.java";"21";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-06T02_42_22.541Z";"hw3.java";"23";" ';' expected
        System.out.println('Original message"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-07T20_27_10.384Z";"hw3.java";"21";" ';' expected
        str = str.toUpperCase()
                               ^
/"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-07T20_27_10.384Z";"hw3.java";"23";" ';' expected
        System.out.println('Original message"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T02_13_32.490Z";"hw3.java";"43";" '.class' expected
            str.charAt(i) = char letter;
                                 ^
/"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T02_13_32.490Z";"hw3.java";"44";" ';' expected
            int ourSymbolRep = letter  'A';
                                     ^
2 errors
"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T03_36_15.324Z";"hw3.java";"42";" cannot find symbol
        symbols = str.charAt();
                  ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T03_36_15.324Z";"hw3.java";"43";" cannot find symbol
        char converting = (char) symbols[i];
                                         ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T03_36_15.324Z";"hw3.java";"44";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T03_36_15.324Z";"hw3.java";"49";" incompatible types"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T04_03_37.937Z";"hw3.java";"42";" cannot find symbol
        symbols = str.charAt();
                  ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T04_03_37.937Z";"hw3.java";"43";" cannot find symbol
        char converting = (char) symbols[i];
                                         ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T04_03_37.937Z";"hw3.java";"44";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T04_03_37.937Z";"hw3.java";"49";" incompatible types"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T19_51_41.195Z";"hw3.java";"42";" cannot find symbol
        symbols = str.charAt();
                  ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T19_51_41.195Z";"hw3.java";"43";" cannot find symbol
        char converting = (char) symbols[i];
                                         ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T19_51_41.195Z";"hw3.java";"44";" cannot find symbol
        for (int i = 0; i < str.length(); i++) {
                            ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-08T19_51_41.195Z";"hw3.java";"49";" incompatible types"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T02_46_14.324Z";"hw3.java";"40";" cannot find symbol
        symbols = str.charAt();
                  ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T02_46_14.324Z";"hw3.java";"41";" cannot find symbol
        char converting = (char) symbols[i];
                                         ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T02_46_14.324Z";"hw3.java";"42";" cannot find symbol
        for (int i = 0; i < str.charAt(); i++) {
                            ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T02_46_14.324Z";"hw3.java";"46";" incompatible types"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T03_04_29.813Z";"hw3.java";"40";" cannot find symbol
        symbols = str.charAt();
                  ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T03_04_29.813Z";"hw3.java";"41";" cannot find symbol
        char converting = (char) symbols[i];
                                         ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T03_04_29.813Z";"hw3.java";"42";" cannot find symbol
        for (int i = 0; i < str.charAt(); i++) {
                            ^
  symbol"
"ec1f4b6abfb302c4fb6d6d8e0d98134f7da23aa9";"2020-10-09T03_04_29.813Z";"hw3.java";"46";" incompatible types"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T17_18_57.165Z";"hw3.java";"206";" illegal start of type
        return frequency;
        ^
/"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T17_18_57.165Z";"hw3.java";"206";" ';' expected
        return frequency;
              ^
/"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T17_18_57.165Z";"hw3.java";"213";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T17_18_57.165Z";"hw3.java";"216";" class, interface, or enum expected
    }
    ^
4 errors
"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T18_51_38.972Z";"hw3.java";"235";" cannot find symbol
    public static ___ crack() {
                  ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T18_51_38.972Z";"hw3.java";"237";" cannot find symbol
                int minDistance = Math.abs(inputNumbers[0] - inputNumbers[1]);
                                           ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T18_51_38.972Z";"hw3.java";"237";" cannot find symbol
                int minDistance = Math.abs(inputNumbers[0] - inputNumbers[1]);
                                                             ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"257";" cannot find symbol
    public static ___ crack() {
                  ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"41";" variable input is already defined in method main(String[])
            String input = args[2];
                   ^
/"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"42";" variable offset is already defined in method main(String[])
        int offset = input.charAt(0) - 'A';
            ^
/"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"48";" cannot find symbol
        In inEnglishFrequencies = new In(originalEnglishFile);
                                         ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"51";" cannot find symbol
             String cryptedOutput = crypt(originalMessage, englishFrequencyText);
                                    ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"237";" incompatible types"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"259";" cannot find symbol
                int minDistance = Math.abs(inputNumbers[0] - inputNumbers[1]);
                                           ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_00_47.701Z";"hw3.java";"259";" cannot find symbol
                int minDistance = Math.abs(inputNumbers[0] - inputNumbers[1]);
                                                             ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T21_37_05.449Z";"hw3.java";"14";" cannot find symbol
         String test = crack('encrypted_message.txt', 'english.txt');
                       ^
  symbol"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T23_59_11.457Z";"hw3.java";"33";" variable input is already defined in method main(String[])
              String input = args[2];
                     ^
/"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-07T23_59_11.457Z";"hw3.java";"34";" variable offset is already defined in method main(String[])
      int offset = input.charAt(0) - 'A';
          ^
2 errors
"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-08T00_17_55.087Z";"hw3.java";"27";" variable input is already defined in method main(String[])
              String input = args[2];
                     ^
/"
"ec3575e0aaf86406ac4a84bb5d0049cbed28c421";"2020-10-08T00_17_55.087Z";"hw3.java";"28";" variable offset is already defined in method main(String[])
      int offset = input.charAt(0) - 'A';
          ^
2 errors
"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-06T14_56_55.746Z";"hw3.java";"102";" cannot find symbol
        for (int i = 0; i < symbolsArray.length; i++) {
                            ^
  symbol"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-06T14_56_55.746Z";"hw3.java";"103";" cannot find symbol
            System.out.print(symbolsArray[i] + ', ');
                             ^
  symbol"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-07T07_43_22.578Z";"hw3.java";"40";" incompatible types"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-07T08_06_40.818Z";"hw3.java";"43";" cannot find symbol
                return str;
                       ^
  symbol"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-07T08_23_03.602Z";"hw3.java";"43";" cannot find symbol
                String str = Array.toString(symbols);
                             ^
  symbol"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"115";" ')' expected
        while (has next char) {
                  ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"115";" not a statement
        while (has next char) {
                   ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"115";" ';' expected
        while (has next char) {
                       ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"115";" not a statement
        while (has next char) {
                        ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"115";" ';' expected
        while (has next char) {
                            ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"120";" ';' expected
        divide each element by total 
                   ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"120";" ';' expected
        divide each element by total 
                              ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"120";" not a statement
        divide each element by total 
                               ^
/"
"f287bc03f1da354760d06ae72a386f51451e0278";"2020-10-08T00_14_32.131Z";"hw3.java";"120";" ';' expected
        divide each element by total 
                                    ^
9 errors
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-06T23_19_14.532Z";"hw3.java";"39";" not a statement
        int 
        ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-06T23_19_14.532Z";"hw3.java";"39";" ';' expected
        int 
           ^
2 errors
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-06T23_40_40.894Z";"hw3.java";"22";" variable str is already defined in method stringToSymbolArray(String)
        String[] str = new String[str.length];
                 ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-06T23_40_40.894Z";"hw3.java";"24";" cannot find symbol
        for(int i = 0; i < args.length; i++){
                           ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-06T23_40_40.894Z";"hw3.java";"25";" incompatible types"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T01_31_30.272Z";"hw3.java";"22";" cannot find symbol
        int asciiRepresentation = (int) letter;
                                        ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_04_05.936Z";"hw3.java";"22";" cannot find symbol
        int ourSymbolRepresentation = (int) letter - 'A';
                                            ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_04_05.936Z";"hw3.java";"23";" int cannot be dereferenced
        for (int i = 0; i < ourSymbolRepresentation.length; i++){
                                                   ^
2 errors
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_27_41.245Z";"hw3.java";"23";" cannot find symbol
        int asciiRepresentation = (int) letter;
                                        ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_27_41.245Z";"hw3.java";"24";" cannot find symbol
        for (int i = 0; i < str.length; i++){
                               ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_27_41.245Z";"hw3.java";"25";" cannot find symbol
            int ourSymbolRepresentation = (int) letter - 'A';
                                                ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_59_25.532Z";"hw3.java";"24";" illegal start of expression
        for (int i = 0; i < .length; i++){
                            ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_59_25.532Z";"hw3.java";"24";" not a statement
        for (int i = 0; i < .length; i++){
                             ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_59_25.532Z";"hw3.java";"24";" ')' expected
        for (int i = 0; i < .length; i++){
                                   ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T02_59_25.532Z";"hw3.java";"24";" ';' expected
        for (int i = 0; i < .length; i++){
                                        ^
4 errors
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T06_25_09.676Z";"hw3.java";"54";" illegal start of expression
        for (int i = 0; )
                        ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T06_25_09.676Z";"hw3.java";"55";" illegal start of expression
        return 0;
        ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T06_25_09.676Z";"hw3.java";"55";" ')' expected
        return 0;
              ^
3 errors
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T07_40_12.102Z";"hw3.java";"54";" not a statement
        offset >= 0 && offset <=25;
                    ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T07_40_12.102Z";"hw3.java";"57";" ';' expected
            int shift = symbol + offset
                                       ^
2 errors
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"29";" cannot find symbol
        return stringToSymbolArray;
               ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"82";" cannot find symbol
        message = stringToSymbolArray;
                  ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"84";" array required, but String found
            message[i] = message[i] + shift;
                   ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"84";" array required, but String found
            message[i] = message[i] + shift;
                                ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"84";" cannot find symbol
            message[i] = message[i] + shift;
                                      ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"85";" cannot find symbol
            encrypt += (char) (message[i]);
            ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"85";" array required, but String found
            encrypt += (char) (message[i]);
                                      ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_01_15.129Z";"hw3.java";"87";" cannot find symbol
        return encrypt;
               ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"29";" cannot find symbol
        return stringToSymbolArray;
               ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"82";" cannot find symbol
        stringToSymbolArray(ourSymbolRepresentation);
                            ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"84";" array required, but String found
            message[i] = message[i] + shift;
                   ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"84";" array required, but String found
            message[i] = message[i] + shift;
                                ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"84";" cannot find symbol
            message[i] = message[i] + shift;
                                      ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"85";" cannot find symbol
            encrypt += (char) (message[i]);
            ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"85";" array required, but String found
            encrypt += (char) (message[i]);
                                      ^
/"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_21_55.208Z";"hw3.java";"87";" cannot find symbol
        return encrypt;
               ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T20_43_32.570Z";"hw3.java";"82";" not a statement
        message;
        ^
1 error
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T21_34_21.524Z";"hw3.java";"84";" cannot find symbol
            messageArr[i] = messageArr[i] + shift;
                                            ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T21_34_21.524Z";"hw3.java";"86";" incompatible types"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-07T21_34_21.524Z";"hw3.java";"88";" cannot find symbol
        return encrypt;
               ^
  symbol"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-08T06_17_40.147Z";"hw3.java";"136";" illegal start of expression
                if(/*symbolArrayToString(alphabet) == (stringRep.charAt(i))*/){
                                                                             ^
1 error
"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-08T15_34_24.073Z";"hw3.java";"136";" incomparable types"
"f28c6e1a9bf60d3ba776d6be18bb5dcc3d2d91da";"2020-10-08T22_12_43.991Z";"hw3.java";"239";" variable cipher is already defined in method main(String[])
               String cipher = inStream.readAll(); 
                      ^
1 error
"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-06T22_46_13.127Z";"hw3.java";"37";" <identifier> expected
        String charOfLetter = new 
                                 ^
/"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-06T22_46_13.127Z";"hw3.java";"38";" '(' or '[' expected
        return null;
        ^
/"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-06T22_46_13.127Z";"hw3.java";"38";" ';' expected
        return null;
              ^
3 errors
"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-07T01_08_54.178Z";"hw3.java";"56";" 'else' without 'if'
        else {
        ^
1 error
"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-07T01_41_49.533Z";"hw3.java";"55";" 'else' without 'if'
        else {
        ^
1 error
"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-07T02_13_26.080Z";"hw3.java";"70";" ';' expected
        int CaesarUnshift = 0
                             ^
1 error
"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-08T01_57_51.171Z";"hw3.java";"109";" array required, but String found
            letterFrequency[letter] = Integer.parseint(filename[letter]);
                                                               ^
1 error
"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-08T08_12_18.466Z";"hw3.java";"110";" cannot find symbol
            letterFrequency[letter] = Double.parsedouble(inStream.readAll()); //question
                                            ^
  symbol"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-08T08_12_18.466Z";"hw3.java";"131";" cannot find symbol
        double frequency = count / n;
                           ^
  symbol"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-08T08_12_18.466Z";"hw3.java";"132";" incompatible types"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-08T22_14_36.442Z";"hw3.java";"195";" illegal start of statement
        }
        ^
/"
"f2bb2b3fe03f459960fc0f061ca7251557340fd5";"2020-10-08T22_14_36.442Z";"hw3.java";"197";" ';' expected
        return null
                   ^
2 errors
"
"f4a70b94c0f0672dc6493d156518ae25c3976a06";"2020-10-05T02_55_28.376Z";"hw3.java";"157";" cannot find symbol
        System.out.println(method(textInFile, key));
                           ^
  symbol"
"f4a70b94c0f0672dc6493d156518ae25c3976a06";"2020-10-05T21_49_51.816Z";"hw3.java";"179";" cannot find symbol
            String decryptedMessage = decrypt('abcd?', G);
                                                       ^
  symbol"
"f4a70b94c0f0672dc6493d156518ae25c3976a06";"2020-10-05T23_09_58.311Z";"hw3.java";"181";" cannot find symbol
            String decryptedMessage = ecrypt(encodedMessage, key);
                                      ^
  symbol"
"f4a70b94c0f0672dc6493d156518ae25c3976a06";"2020-10-07T13_20_24.228Z";"hw3.java";"234";" unclosed string literal
        something unexpected', 6));
                            ^
1 error
"
"f4a70b94c0f0672dc6493d156518ae25c3976a06";"2020-10-07T13_44_14.078Z";"hw3.java";"234";" unclosed string literal
        something unexpected', 6));
                            ^
1 error
"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" illegal start of type
    for (int i = 0; i < 26, i++)
    ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" ')' expected
    for (int i = 0; i < 26, i++)
              ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" illegal start of type
    for (int i = 0; i < 26, i++)
                 ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" <identifier> expected
    for (int i = 0; i < 26, i++)
                  ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" ';' expected
    for (int i = 0; i < 26, i++)
                   ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" <identifier> expected
    for (int i = 0; i < 26, i++)
                       ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" illegal start of type
    for (int i = 0; i < 26, i++)
                          ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"283";" '(' expected
    for (int i = 0; i < 26, i++)
                             ^
/"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T16_30_54.236Z";"hw3.java";"289";" class, interface, or enum expected
}
^
9 errors
"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T23_59_07.875Z";"hw3.java";"302";" cannot find symbol
            score += Math.abs(english[i] - currentFreqs[i]);
                                      ^
  symbol"
"f585fa117b6526204820e0b1eb2a80d27b8592f5";"2020-10-06T23_59_07.875Z";"hw3.java";"302";" cannot find symbol
            score += Math.abs(english[i] - currentFreqs[i]);
                                                        ^
  symbol"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T20_04_37.072Z";"hw3.java";"21";" ';' expected
        str.CharAt(i)
                     ^
1 error
"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_02_31.192Z";"hw3.java";"22";" incompatible types"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_18_55.649Z";"hw3.java";"22";" illegal start of expression
        for (int i = 0; i < str.length(); i++) {
        ^
/"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_18_55.649Z";"hw3.java";"22";" ')' expected
        for (int i = 0; i < str.length(); i++) {
                  ^
/"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_18_55.649Z";"hw3.java";"22";" not a statement
        for (int i = 0; i < str.length(); i++) {
            ^
/"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_18_55.649Z";"hw3.java";"22";" > expected
        for (int i = 0; i < str.length(); i++) {
                                      ^
/"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_18_55.649Z";"hw3.java";"22";" not a statement
        for (int i = 0; i < str.length(); i++) {
                          ^
/"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_18_55.649Z";"hw3.java";"22";" illegal start of expression
        for (int i = 0; i < str.length(); i++) {
                                       ^
/"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_18_55.649Z";"hw3.java";"22";" ';' expected
        for (int i = 0; i < str.length(); i++) {
                                             ^
7 errors
"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T21_36_08.996Z";"hw3.java";"23";" incompatible types"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-06T22_20_54.189Z";"hw3.java";"23";" incompatible types"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-07T00_06_49.235Z";"hw3.java";"24";" incompatible types"
"f6a45f0aa04a8d131333739859a926bcbc8a12a9";"2020-10-10T20_14_02.977Z";"hw3.java";"169";" incompatible types"
"f724564ebbaf4cbfa45bbb21a883b9b4e33108ed";"2020-10-06T20_06_56.394Z";"hw3.java";"53";" cannot find symbol
        String str = String.valueOf(letter[i]);
                                           ^
  symbol"
"f724564ebbaf4cbfa45bbb21a883b9b4e33108ed";"2020-10-06T20_06_56.394Z";"hw3.java";"116";" incompatible types"
"f724564ebbaf4cbfa45bbb21a883b9b4e33108ed";"2020-10-07T18_48_23.160Z";"hw3.java";"56";" ')' expected
        if ((symbol < 26 || symbol >= 0)(offset < 26 || offset >= 0)){
                                        ^
/"
"f724564ebbaf4cbfa45bbb21a883b9b4e33108ed";"2020-10-07T18_48_23.160Z";"hw3.java";"56";" ';' expected
        if ((symbol < 26 || symbol >= 0)(offset < 26 || offset >= 0)){
                                                                    ^
/"
"f724564ebbaf4cbfa45bbb21a883b9b4e33108ed";"2020-10-07T18_48_23.160Z";"hw3.java";"57";" ';' expected
            symbol = symbol - offset
                                    ^
3 errors
"
"f724564ebbaf4cbfa45bbb21a883b9b4e33108ed";"2020-10-07T22_05_41.233Z";"hw3.java";"159";" 'else' without 'if'
        else if (functionName == 'decrypt'){
        ^
1 error
"
"f789e70e136b898f3580af7fe3fc63c5b741991b";"2020-10-07T21_02_41.876Z";"hw3.java";"166";" illegal start of type
    public static ^ crack()
                  ^
/"
"f789e70e136b898f3580af7fe3fc63c5b741991b";"2020-10-07T21_02_41.876Z";"hw3.java";"166";" ';' expected
    public static ^ crack()
                   ^
/"
"f789e70e136b898f3580af7fe3fc63c5b741991b";"2020-10-07T21_02_41.876Z";"hw3.java";"166";" illegal start of type
    public static ^ crack()
                         ^
/"
"f789e70e136b898f3580af7fe3fc63c5b741991b";"2020-10-07T21_02_41.876Z";"hw3.java";"166";" <identifier> expected
    public static ^ crack()
                          ^
/"
"f789e70e136b898f3580af7fe3fc63c5b741991b";"2020-10-07T21_02_41.876Z";"hw3.java";"166";" ';' expected
    public static ^ crack()
                           ^
/"
"f789e70e136b898f3580af7fe3fc63c5b741991b";"2020-10-07T21_02_41.876Z";"hw3.java";"168";" reached end of file while parsing
}
 ^
6 errors
"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-06T03_49_20.132Z";"hw3.java";"53";" illegal start of expression
        if ()
            ^
1 error
"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-06T18_57_26.549Z";"hw3.java";"53";" illegal start of expression
        if ()
            ^
1 error
"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-06T19_26_44.148Z";"hw3.java";"59";" illegal start of expression
            if (symbol > )
                         ^
/"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-06T19_26_44.148Z";"hw3.java";"60";" illegal start of statement
        }
        ^
2 errors
"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-07T14_35_10.741Z";"hw3.java";"145";" illegal start of expression
        return cipherFreq;
        ^
/"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-07T14_35_10.741Z";"hw3.java";"145";" not a statement
        return cipherFreq;
               ^
2 errors
"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-08T18_51_40.288Z";"hw3.java";"180";" cannot find symbol
            double freqScore = scoreFrequencies(english, currentFreqs);
                                                ^
  symbol"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-08T18_51_40.288Z";"hw3.java";"183";" cannot find symbol
        return message;
               ^
  symbol"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-08T21_16_35.737Z";"hw3.java";"172";" <identifier> expected
    public static double 
                        ^
1 error
"
"f904cf4af455a40289408485efcc117e1a9b60ad";"2020-10-08T22_41_22.930Z";"hw3.java";"180";" cannot find symbol
            double freqScore = scoreFrequencies(english, currentFreqs);
                                                ^
  symbol"
"f9b3517060098c41fc220990ba51263fa76c34c5";"2020-10-07T19_29_54.743Z";"hw3.java";"45";" illegal start of expression
        for (int i = 0; i < )
                            ^
/"
"f9b3517060098c41fc220990ba51263fa76c34c5";"2020-10-07T19_29_54.743Z";"hw3.java";"46";" illegal start of expression
        return null;
        ^
/"
"f9b3517060098c41fc220990ba51263fa76c34c5";"2020-10-07T19_29_54.743Z";"hw3.java";"46";" ')' expected
        return null;
              ^
3 errors
"
"f9b3517060098c41fc220990ba51263fa76c34c5";"2020-10-08T02_34_16.903Z";"hw3.java";"136";" cannot find symbol
        In inStream = new In(english.txt); //Needs to be changed into 
                             ^
  symbol"
"f9b3517060098c41fc220990ba51263fa76c34c5";"2020-10-08T02_47_32.467Z";"hw3.java";"136";" cannot find symbol
        In inStream = new In(english.txt); //Needs to be changed into 
                             ^
  symbol"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"165";" ')' expected
        scoreFrequencies(findFrequencies(stringToSymbolArray(cipherText)), get
                                                                              ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"166";" not a statement
                         DictionaryFrequencies(dictionaryFrequencies));
                                              ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"166";" ';' expected
                         DictionaryFrequencies(dictionaryFrequencies));
                                                                     ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"169";" ')' expected
            freqScores[i] = scoreFrequencies(findFrequencies(shift(stringToSymbolArr
                                                                                    ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"170";" ')' expected
            ay(cipherText), i), getDictionaryFrequencies(dictionaryFrequencies)));
              ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"170";" ';' expected
            ay(cipherText), i), getDictionaryFrequencies(dictionaryFrequencies)));
               ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"170";" illegal start of expression
            ay(cipherText), i), getDictionaryFrequencies(dictionaryFrequencies)));
                         ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"170";" ';' expected
            ay(cipherText), i), getDictionaryFrequencies(dictionaryFrequencies)));
                          ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"170";" not a statement
            ay(cipherText), i), getDictionaryFrequencies(dictionaryFrequencies)));
                            ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"170";" ';' expected
            ay(cipherText), i), getDictionaryFrequencies(dictionaryFrequencies)));
                             ^
/"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T01_50_50.186Z";"hw3.java";"170";" ';' expected
            ay(cipherText), i), getDictionaryFrequencies(dictionaryFrequencies)));
                                                                               ^
11 errors
"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T02_26_58.098Z";"hw3.java";"164";" cannot find symbol
        String cipherText = inStream.readAll();
                            ^
  symbol"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T02_26_58.098Z";"hw3.java";"167";" incompatible types"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T02_26_58.098Z";"hw3.java";"171";" cannot find symbol
            if (freqScores[i] < freqScores(i + 1)) {
                                ^
  symbol"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T02_26_58.098Z";"hw3.java";"177";" incompatible types"
"f9bca1aec5accded1070638cdde237bb8c81c301";"2020-10-07T13_36_00.998Z";"hw3.java";"168";" illegal start of expression
                shiftedSymbols[j] = shift(stringToSymbolArray(cipherText)[j], );
                                                                              ^
1 error
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-06T17_34_05.449Z";"hw3.java";"20";" ';' expected
        str = str.toUpperCase()
                               ^
1 error
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T20_33_20.143Z";"hw3.java";"20";" ';' expected
        str = str.toUpperCase()
                               ^
1 error
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T21_05_17.334Z";"hw3.java";"21";" array dimension missing
            str = str.toUpperCase(symbols);
            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T21_05_17.334Z";"hw3.java";"21";" illegal start of expression
            str = str.toUpperCase(symbols);
                ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T21_05_17.334Z";"hw3.java";"21";" ';' expected
            str = str.toUpperCase(symbols);
                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T21_05_17.334Z";"hw3.java";"22";" illegal start of type
            for (i < 0 ; i < numSymbols; i<++) {
                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T21_05_17.334Z";"hw3.java";"22";" not a statement
            for (i < 0 ; i < numSymbols; i<++) {
                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T21_05_17.334Z";"hw3.java";"22";" illegal start of expression
            for (i < 0 ; i < numSymbols; i<++) {
                                             ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-07T21_05_17.334Z";"hw3.java";"22";" not a statement
            for (i < 0 ; i < numSymbols; i<++) {
                                          ^
7 errors
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"112";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"120";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"128";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"128";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"128";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"128";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"128";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"128";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"128";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"136";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"136";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"136";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"136";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"136";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"136";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"141";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"141";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"141";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"141";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"141";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_00_10.207Z";"hw3.java";"149";" reached end of file while parsing
}
 ^
35 errors
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" illegal start of expression
    public static String decrypt(String cipher, int key) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" illegal start of expression
    public static String decrypt(String cipher, int key) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" ';' expected
    public static String decrypt(String cipher, int key) {
                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" ')' expected
    public static String decrypt(String cipher, int key) {
                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" illegal start of expression
    public static String decrypt(String cipher, int key) {
                                              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" ';' expected
    public static String decrypt(String cipher, int key) {
                                               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" not a statement
    public static String decrypt(String cipher, int key) {
                                                    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"113";" ';' expected
    public static String decrypt(String cipher, int key) {
                                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" ')' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" illegal start of expression
    public static double[] getDictionaryFrequencies(String filename) {
                                                                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"121";" ';' expected
    public static double[] getDictionaryFrequencies(String filename) {
                                                                    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"129";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"129";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"129";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"129";" illegal start of expression
    public static double[] findFrequencies(int[] symbols) {
                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"129";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"129";" '.class' expected
    public static double[] findFrequencies(int[] symbols) {
                                                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"129";" ';' expected
    public static double[] findFrequencies(int[] symbols) {
                                                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"137";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"137";" illegal start of expression
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"137";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"137";" '.class' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"137";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"137";" ';' expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                                                                                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"142";" illegal start of expression
    public static void main(String[] args) {
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"142";" illegal start of expression
    public static void main(String[] args) {
           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"142";" ';' expected
    public static void main(String[] args) {
                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"142";" '.class' expected
    public static void main(String[] args) {
                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"142";" ';' expected
    public static void main(String[] args) {
                                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_20_22.917Z";"hw3.java";"150";" reached end of file while parsing
}
 ^
35 errors
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_55_53.546Z";"hw3.java";"86";" illegal start of expression
        for ( )
              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_55_53.546Z";"hw3.java";"88";" ';' expected
        String encrypt = shift(symbol, key);
              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_55_53.546Z";"hw3.java";"88";" ')' expected
        String encrypt = shift(symbol, key);
                                           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_55_53.546Z";"hw3.java";"90";" ';' expected
        encryptedmessage += encrypt
                                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_55_53.546Z";"hw3.java";"126";" ')' expected
        encrypt(ET TU, BRUTE?);
                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_55_53.546Z";"hw3.java";"126";" illegal start of expression
        encrypt(ET TU, BRUTE?);
                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T19_55_53.546Z";"hw3.java";"126";" ';' expected
        encrypt(ET TU, BRUTE?);
                            ^
7 errors
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-08T20_49_21.338Z";"hw3.java";"89";" incompatible types"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T02_30_04.423Z";"hw3.java";"127";" illegal start of expression
        }
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T02_30_04.423Z";"hw3.java";"152";" reached end of file while parsing
}
 ^
2 errors
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T04_36_05.227Z";"hw3.java";"105";" cannot find symbol
            freqList [i] = inStream.readDouble();
                           ^
  symbol"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"120";" ';' expected
        double [] frequencyOfLetters = new double[26]
                                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"122";" illegal start of type
            if (symbols[i] >= 0  && symbols[i] =< 26) {
                                                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"122";" illegal start of expression
            if (symbols[i] >= 0  && symbols[i] =< 26) {
                                                    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"122";" ')' expected
            if (symbols[i] >= 0  && symbols[i] =< 26) {
                                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"124";" illegal start of expression
                     if ([i] == int[n]) {
                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"124";" not a statement
                     if ([i] == int[n]) {
                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"124";" ';' expected
                     if ([i] == int[n]) {
                           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"124";" ']' expected
                     if ([i] == int[n]) {
                                    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"124";" ';' expected
                     if ([i] == int[n]) {
                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"125";" ';' expected
                    frequencyOfLetters[n] += 1 
                                              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"134";" ';' expected
        To find the frequency of each letter, first find the number of times
               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"134";" ';' expected
        To find the frequency of each letter, first find the number of times
                             ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"134";" ';' expected
        To find the frequency of each letter, first find the number of times
                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"134";" <identifier> expected
        To find the frequency of each letter, first find the number of times
                                            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"134";" ';' expected
        To find the frequency of each letter, first find the number of times
                                                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"134";" ';' expected
        To find the frequency of each letter, first find the number of times
                                                            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"134";" ';' expected
        To find the frequency of each letter, first find the number of times
                                                                      ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"135";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"135";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"135";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                                      ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"135";" <identifier> expected
            each letter appears in the ciphertext. Then, divide all of these
                                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"135";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                                                               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"135";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                                                                      ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"136";" ';' expected
            numbers by the total number of letters in the ciphertext.
                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"136";" ';' expected
            numbers by the total number of letters in the ciphertext.
                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"136";" ';' expected
            numbers by the total number of letters in the ciphertext.
                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"136";" ';' expected
            numbers by the total number of letters in the ciphertext.
                                                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"136";" ';' expected
            numbers by the total number of letters in the ciphertext.
                                                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"136";" <identifier> expected
            numbers by the total number of letters in the ciphertext.
                                                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"137";" ';' expected
        return null;
              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"143";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"146";" class, interface, or enum expected
    }
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"148";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"151";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"152";" class, interface, or enum expected
        String start = args[2];
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"153";" class, interface, or enum expected
        char inputChar = start.charAt(0);
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"154";" class, interface, or enum expected
        int key = (int) inputChar;
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"158";" class, interface, or enum expected
       In inStream = new In(filename);
       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"160";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"162";" class, interface, or enum expected
             System.out.println(enrcypted);
             ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"163";" class, interface, or enum expected
        }
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"167";" class, interface, or enum expected
            System.out.println(plainText);
            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T19_46_26.960Z";"hw3.java";"169";" class, interface, or enum expected
        }
        ^
43 errors
"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"122";" illegal start of type
        if (symbols[i] >= 0  && symbols[i] =< 26)
                                              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"122";" illegal start of expression
        if (symbols[i] >= 0  && symbols[i] =< 26)
                                                ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"122";" ')' expected
        if (symbols[i] >= 0  && symbols[i] =< 26)
                                                 ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"123";" ')' expected
        for (int i = 0 ; i < symbols.length; i++) {
                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"123";" not a statement
        for (int i = 0 ; i < symbols.length; i++) {
            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"123";" > expected
        for (int i = 0 ; i < symbols.length; i++) {
                                           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"123";" not a statement
        for (int i = 0 ; i < symbols.length; i++) {
                           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"123";" ';' expected
        for (int i = 0 ; i < symbols.length; i++) {
                                                ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"127";" illegal start of expression
                     if ([i] == int[n]) {
                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"127";" not a statement
                     if ([i] == int[n]) {
                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"127";" ';' expected
                     if ([i] == int[n]) {
                           ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"127";" ']' expected
                     if ([i] == int[n]) {
                                    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"127";" ';' expected
                     if ([i] == int[n]) {
                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"128";" ';' expected
                    frequencyOfLetters[n] += 1 
                                              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"137";" ';' expected
        To find the frequency of each letter, first find the number of times
               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"137";" ';' expected
        To find the frequency of each letter, first find the number of times
                             ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"137";" ';' expected
        To find the frequency of each letter, first find the number of times
                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"137";" <identifier> expected
        To find the frequency of each letter, first find the number of times
                                            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"137";" ';' expected
        To find the frequency of each letter, first find the number of times
                                                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"137";" ';' expected
        To find the frequency of each letter, first find the number of times
                                                            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"137";" ';' expected
        To find the frequency of each letter, first find the number of times
                                                                      ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"138";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"138";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"138";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                                      ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"138";" <identifier> expected
            each letter appears in the ciphertext. Then, divide all of these
                                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"138";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                                                               ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"138";" ';' expected
            each letter appears in the ciphertext. Then, divide all of these
                                                                      ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"139";" ';' expected
            numbers by the total number of letters in the ciphertext.
                   ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"139";" ';' expected
            numbers by the total number of letters in the ciphertext.
                          ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"139";" ';' expected
            numbers by the total number of letters in the ciphertext.
                                       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"139";" ';' expected
            numbers by the total number of letters in the ciphertext.
                                                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"139";" ';' expected
            numbers by the total number of letters in the ciphertext.
                                                         ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"139";" <identifier> expected
            numbers by the total number of letters in the ciphertext.
                                                                     ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"140";" ';' expected
        return null;
              ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"146";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"148";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"148";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"148";" class, interface, or enum expected
        for (int i = 0; i < 26; i++) {
                                ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"150";" class, interface, or enum expected
        }
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"152";" class, interface, or enum expected
    }
    ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"154";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"157";" class, interface, or enum expected
        String filename = args[1];
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"158";" class, interface, or enum expected
        String start = args[2];
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"159";" class, interface, or enum expected
        char inputChar = start.charAt(0);
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"160";" class, interface, or enum expected
        int key = (int) inputChar;
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"164";" class, interface, or enum expected
       In inStream = new In(filename);
       ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"166";" class, interface, or enum expected
        if (function.equals('encrypt')) {
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"168";" class, interface, or enum expected
             System.out.println(enrcypted);
             ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"169";" class, interface, or enum expected
        }
        ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"173";" class, interface, or enum expected
            System.out.println(plainText);
            ^
/"
"f9fbdcf24195ad559c966a8f75610043b7cdf377";"2020-10-09T20_32_50.409Z";"hw3.java";"175";" class, interface, or enum expected
        }
        ^
51 errors
"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T07_00_26.181Z";"hw3.java";"41";" unexpected type
            str.charAt(i) = symbols[i] + 65;  
                      ^
  required"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T07_22_38.417Z";"hw3.java";"42";" unexpected type
            str.charAt(i) = letter;  
                      ^
  required"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T07_39_30.545Z";"hw3.java";"42";" cannot find symbol
            str.append(letter);  
               ^
  symbol"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T17_11_16.314Z";"hw3.java";"42";" variable str might not have been initialized
            str = str + letter  ;
                  ^
/"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T17_11_16.314Z";"hw3.java";"45";" variable str might not have been initialized
        return str;
               ^
2 errors
"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T19_09_40.959Z";"hw3.java";"87";" cannot find symbol
        String result = symbolArrayToString(intermediary);
                        ^
  symbol"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T19_09_40.959Z";"hw3.java";"101";" cannot find symbol
        String result = symbolArrayToString(intermediary);
                        ^
  symbol"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T20_01_56.327Z";"hw3.java";"158";" cannot find symbol
        for (int i = 0; i < getDictionaryFrequencies(dict).length; i++){
                                                     ^
  symbol"
"fb73ea9cf4691e35b05bfd0192b1ba7f0d2dbc8f";"2020-10-08T20_01_56.327Z";"hw3.java";"159";" cannot find symbol
            System.out.println(getDictionaryFrequencies(dict)[i]);
                                                        ^
  symbol"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-05T23_53_22.299Z";"hw3.java";"133";" cannot find symbol
            cipherTextFrequencies [symbol[i]]++; 
                                   ^
  symbol"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-05T23_53_22.299Z";"hw3.java";"135";" bad operand types for binary operator '<'
        for (int i = 0; i < cipherTextFrequencies; i++) {
                          ^
  first type"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T01_06_15.688Z";"hw3.java";"73";" ')' expected
                symbol = (26 + symbol  % 26; 
                                           ^
1 error
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T07_01_38.322Z";"hw3.java";"167";" missing return statement
    }
    ^
1 error
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T16_16_31.006Z";"hw3.java";"167";" not a statement
        int[] = cipherSymbolArray = stringToSymbolArray(cipherFile);
           ^
/"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T16_16_31.006Z";"hw3.java";"167";" ';' expected
        int[] = cipherSymbolArray = stringToSymbolArray(cipherFile);
             ^
2 errors
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T17_10_51.966Z";"hw3.java";"169";" illegal start of expression
            scoreArray[i] = scoreFrequencies(englishFrequency, )
                                                               ^
/"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T17_10_51.966Z";"hw3.java";"169";" ';' expected
            scoreArray[i] = scoreFrequencies(englishFrequency, )
                                                                ^
2 errors
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T17_56_32.188Z";"hw3.java";"178";" incompatible types"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_21_42.510Z";"hw3.java";"172";" cannot find symbol
        return scoreArray; 
               ^
  symbol"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_21_42.510Z";"hw3.java";"191";" variable stringKey is already defined in method main(String[])
                String stringKey = args[2];
                       ^
/"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_21_42.510Z";"hw3.java";"192";" variable intKey is already defined in method main(String[])
                int intKey = (int) stringKey.charAt(0) - 'A';
                    ^
3 errors
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_47_10.252Z";"hw3.java";"173";" cannot find symbol
            if (scoreFrequencies(englishFrequency, frequencyDecryptedArra) < score) {
                                                   ^
  symbol"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_47_10.252Z";"hw3.java";"177";" cannot find symbol
        return scoreArray; 
               ^
  symbol"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_47_10.252Z";"hw3.java";"196";" variable stringKey is already defined in method main(String[])
                String stringKey = args[2];
                       ^
/"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_47_10.252Z";"hw3.java";"197";" variable intKey is already defined in method main(String[])
                int intKey = (int) stringKey.charAt(0) - 'A';
                    ^
4 errors
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_58_17.784Z";"hw3.java";"173";" cannot find symbol
            if (scoreFrequencies(englishFrequency, frequencyDecryptedArra) < score) {
                                                   ^
  symbol"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_58_17.784Z";"hw3.java";"177";" cannot find symbol
        return scoreArray; 
               ^
  symbol"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_58_17.784Z";"hw3.java";"196";" variable stringKey is already defined in method main(String[])
                String stringKey = args[2];
                       ^
/"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T19_58_17.784Z";"hw3.java";"197";" variable intKey is already defined in method main(String[])
                int intKey = (int) stringKey.charAt(0) - 'A';
                    ^
4 errors
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T20_35_06.056Z";"hw3.java";"174";" illegal start of expression
        }
        ^
1 error
"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T21_09_39.110Z";"hw3.java";"199";" variable stringKey is already defined in method main(String[])
                String stringKey = args[2];
                       ^
/"
"fe2e08430cd89089761b57c837a57065a1f7c07f";"2020-10-06T21_09_39.110Z";"hw3.java";"200";" variable intKey is already defined in method main(String[])
                int intKey = (int) stringKey.charAt(0) - 'A';
                    ^
2 errors
"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-06T01_55_47.514Z";"hw3.java";"21";" no suitable method found for length(String)
        int[] word = new int[str.length(str)];
                                ^
    method CharSequence.length() is not applicable
      (actual and formal argument lists differ in length)
    method String.length() is not applicable
      (actual and formal argument lists differ in length)
/"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-06T01_55_47.514Z";"hw3.java";"22";" no suitable method found for length(String)
        for (int i = 0; i < str.length(str); i++) {
                               ^
    method CharSequence.length() is not applicable
      (actual and formal argument lists differ in length)
    method String.length() is not applicable
      (actual and formal argument lists differ in length)
/"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-06T01_55_47.514Z";"hw3.java";"101";" cannot find symbol
        for (int i = 0; i < str.length(str); i++) {
                                       ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-06T01_55_47.514Z";"hw3.java";"101";" cannot find symbol
        for (int i = 0; i < str.length(str); i++) {
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-06T01_55_47.514Z";"hw3.java";"102";" cannot find symbol
            System.out.print(word[i] + ' ');
                             ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-06T21_55_18.264Z";"hw3.java";"41";" unexpected type
            numbersToWord.charAt(i) = eachLetter; //PROBLEM ALERT
                                ^
  required"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_23_00.683Z";"hw3.java";"177";" cannot find symbol
        if (args[0] == encrypt) {
                       ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_23_00.683Z";"hw3.java";"180";" cannot find symbol
        else if (args[0] == decrypt) {
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_23_00.683Z";"hw3.java";"183";" cannot find symbol
        else if (args[0] == crack) {
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_37_20.980Z";"hw3.java";"176";" cannot find symbol
        if (args[0] == encrypt) {
                       ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_37_20.980Z";"hw3.java";"179";" cannot find symbol
        else if (args[0] == decrypt) {
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_37_20.980Z";"hw3.java";"182";" cannot find symbol
        else if (args[0] == crack) {
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_59_30.123Z";"hw3.java";"186";" cannot find symbol
        if (args[0] == encrypt) {
                       ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_59_30.123Z";"hw3.java";"189";" cannot find symbol
        else if (args[0] == decrypt) {
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T04_59_30.123Z";"hw3.java";"192";" cannot find symbol
        else if (args[0] == crack) {
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T05_32_15.774Z";"hw3.java";"203";" cannot find symbol
        if (args[0] == encrypt) { // PROBLEM ALERT
                       ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T05_32_15.774Z";"hw3.java";"206";" cannot find symbol
        else if (args[0] == decrypt) { // PROBLEM ALERT
                            ^
  symbol"
"fee49cbc8cf946fadb723614b8caafb24a1c6d48";"2020-10-08T05_32_15.774Z";"hw3.java";"209";" cannot find symbol
        else if (args[0] == crack) { // PROBLEM ALERT
                            ^
  symbol"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"30";" illegal start of type
        return null;
        ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"30";" ';' expected
        return null;
              ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"42";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"54";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"59";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"62";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"67";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"70";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"75";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"79";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"84";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"88";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"93";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"96";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"101";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"104";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"109";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"112";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"114";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"117";" class, interface, or enum expected
        return stringToSymbolArray;
        ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T03_46_18.694Z";"hw3.java";"118";" class, interface, or enum expected
    }
    ^
21 errors
"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"34";" illegal start of type
        return null;
        ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"34";" ';' expected
        return null;
              ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"46";" class, interface, or enum expected
    public static String symbolArrayToString(int[] symbols) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"58";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"63";" class, interface, or enum expected
    public static int shift(int symbol, int offset) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"66";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"71";" class, interface, or enum expected
    public static int unshift(int symbol, int offset) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"74";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"79";" class, interface, or enum expected
    public static String encrypt(String message, int key) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"83";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"88";" class, interface, or enum expected
    public static String decrypt(String cipher, int key) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"92";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"97";" class, interface, or enum expected
    public static double[] getDictionaryFrequencies(String filename) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"100";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"105";" class, interface, or enum expected
    public static double[] findFrequencies(int[] symbols) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"108";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"113";" class, interface, or enum expected
    public static double scoreFrequencies(double[] english, double[] currentFreqs) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"116";" class, interface, or enum expected
    }
    ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"118";" class, interface, or enum expected
    public static void main(String[] args) {
                  ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"121";" class, interface, or enum expected
        return stringToSymbolArray;
        ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T04_09_43.338Z";"hw3.java";"122";" class, interface, or enum expected
    }
    ^
21 errors
"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T06_00_08.045Z";"hw3.java";"27";" ']' expected
            int[i] = Integer.parseint(str.charAt(i));
                ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T06_00_08.045Z";"hw3.java";"27";" ';' expected
            int[i] = Integer.parseint(str.charAt(i));
                 ^
2 errors
"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T06_12_35.219Z";"hw3.java";"27";" ']' expected
            int[i] = Integer.parseint(str.charAt(i));
                ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T06_12_35.219Z";"hw3.java";"27";" ';' expected
            int[i] = Integer.parseint(str.charAt(i));
                 ^
2 errors
"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T07_31_16.707Z";"hw3.java";"21";" cannot find symbol
        int N = args.length; 
                ^
  symbol"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T07_31_16.707Z";"hw3.java";"126";" incompatible types"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T08_20_05.484Z";"hw3.java";"21";" cannot find symbol
        int [] symbolArray = new int[N];
                                     ^
  symbol"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T08_20_05.484Z";"hw3.java";"131";" incompatible types"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T17_27_10.245Z";"hw3.java";"22";" '.class' expected
        int N = str.length; 
            ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T17_27_10.245Z";"hw3.java";"22";" illegal start of expression
        int N = str.length; 
              ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T17_27_10.245Z";"hw3.java";"22";" ';' expected
        int N = str.length; 
                   ^
/"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-04T17_27_10.245Z";"hw3.java";"22";" not a statement
        int N = str.length; 
                    ^
4 errors
"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-05T03_14_59.585Z";"hw3.java";"9";" class Caesars is public, should be declared in a file named [ANONYMIZED].java
public class Caesars {
       ^
1 error
"
"feed1621d6e46f3100522dadfbb9ecec17fe8ba4";"2020-10-06T17_17_52.768Z";"hw3.java";"60";" ';' expected
        return shifted
                      ^
1 error
"
"ff126a7ee3f7c8a16ba56d69ae9ae61028597309";"2020-10-07T06_32_06.457Z";"hw3.java";"42";" bad operand types for binary operator '<'
        for (int i = 0; i < symbols; i++) {
                          ^
  first type"
"ff3a194928159b2440a0a89750ae23fbf55f279c";"2020-10-09T00_41_42.022Z";"hw3.java";"126";" incompatible types"
"ff3a194928159b2440a0a89750ae23fbf55f279c";"2020-10-09T00_41_42.022Z";"hw3.java";"127";" bad operand types for binary operator '/'
            yes[q] = (getDictionaryFrequencies(u)) / (symbols.length);
                                                   ^
  first type"
"ff3a194928159b2440a0a89750ae23fbf55f279c";"2020-10-09T00_41_42.022Z";"hw3.java";"136";" incompatible types"
"ff3a194928159b2440a0a89750ae23fbf55f279c";"2020-10-09T01_23_50.550Z";"hw3.java";"126";" incompatible types"
"ff3a194928159b2440a0a89750ae23fbf55f279c";"2020-10-09T01_23_50.550Z";"hw3.java";"127";" bad operand types for binary operator '/'
            yes[q] = (getDictionaryFrequencies(u)) / (symbols.length);
                                                   ^
  first type"
"ff3a194928159b2440a0a89750ae23fbf55f279c";"2020-10-09T01_23_50.550Z";"hw3.java";"136";" incompatible types"
"ff3a194928159b2440a0a89750ae23fbf55f279c";"2020-10-09T14_54_50.832Z";"hw3.java";"148";" illegal start of expression
            if (scoreFrequencies(findFrequencies(cracky), getDictionaryFrequencies(cracky))<scoreFrequencies(findFrequencies(cracky), getDictionaryFrequencies(cracky))<){
                                                                                                                                                                        ^
1 error
"
